{"version":3,"file":"static/js/8175.c5b74e49.chunk.js","mappings":"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","sources":["components/common/Modals/AddTiming.jsx","pages/developer/DeveloperTimeReporting.jsx","../node_modules/react-bootstrap/esm/createChainedFunction.js","../node_modules/react-bootstrap/esm/Collapse.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button, Form, Row, Col, Collapse, CloseButton } from \"react-bootstrap\";\r\nimport { useFieldArray, useForm } from \"react-hook-form\";\r\nimport {\r\n  getAllContracts,\r\n  getPreviousTimeReports,\r\n  saveTimeReports,\r\n  setAddTimeReports,\r\n} from \"../../../redux/slices/developerDataSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport RexettButton from \"../../../components/atomic/RexettButton\";\r\nimport { current } from \"@reduxjs/toolkit\";\r\nimport { timeReporting } from \"../../../redux/slices/clientDataSlice\";\r\nimport { useTranslation } from \"react-i18next\";\r\nconst AddTimingModal = ({ show, handleClose, role,currentAction }) => {\r\n  const dispatch = useDispatch();\r\n  // const [selectDay, setDaySelection] = useState(null);\r\n  const [disabledWorkDay, setDisabledWorkDay] = useState([]);\r\n  const [selectedFilter, setSelectedFilter] = useState();\r\n  const [open, setOpen] = useState(false);\r\n  const [timeReportingData, setTimeReportingData] = useState([]);\r\n  const [details, setDetails] = useState(false)\r\n  const [count,setCount]=useState(0)\r\n  const { t } = useTranslation()\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    watch,\r\n    setValue,\r\n    trigger,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const { fields, append, remove } = useFieldArray({\r\n    control,\r\n    name: \"addTime\",\r\n  });\r\n  const { allContracts, addTimeReports, btnLoader } = useSelector(\r\n    (state) => state.developerData\r\n  );\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllContracts());\r\n  }, []);\r\n  const getCurrentWeekDates = () => {\r\n    const today = new Date();\r\n    const currentDay = today.getDay();\r\n    const startDate = new Date(today);\r\n    startDate.setDate(startDate.getDate() - currentDay);\r\n\r\n    let formattedDate = \"\";\r\n    const weekDates = [];\r\n\r\n    for (let i = 0; i < 7; i++) {\r\n      const date = new Date(startDate);\r\n      date.setDate(startDate.getDate() + i);\r\n\r\n      if (date.getDay() !== 0 && date.getDay() !== 6) {\r\n        formattedDate =\r\n          date.getFullYear() +\r\n          \"-\" +\r\n          (\"0\" + (date.getMonth() + 1)).slice(-2) +\r\n          \"-\" +\r\n          (\"0\" + date.getDate()).slice(-2);\r\n        weekDates.push({ report_date: formattedDate });\r\n      }\r\n    }\r\n    setTimeReportingData(weekDates);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (addTimeReports.length > 0) {\r\n      setTimeReportingData(addTimeReports);\r\n    } else {\r\n      if(currentAction==\"AddTime\"){\r\n        getCurrentWeekDates();\r\n\r\n      }\r\n    }\r\n  }, [addTimeReports]);\r\n\r\n  useEffect(() => {\r\n    if (timeReportingData?.length > 0) {\r\n      timeReportingData?.forEach((item) => {\r\n        append({\r\n          report_date: item?.report_date,\r\n          is_off_day: true,\r\n          start_time: item?.start_time ? item?.start_time : null,\r\n          end_time: item?.start_time ? item?.end_time : null,\r\n          memo: item?.memo ? item?.memo : null,\r\n        });\r\n        setDisabledWorkDay((prevState) => [\r\n          ...prevState,\r\n          item.is_off_day ? item.is_off_day : false,\r\n        ]);\r\n      });\r\n    }\r\n\r\n  }, [timeReportingData]);\r\n\r\n  const handleWorkDaysChange = (e, index, state) => {\r\n    if (state) {\r\n      const updatedDisabledEndDates = [...disabledWorkDay];\r\n      updatedDisabledEndDates[index] = true;\r\n      setDisabledWorkDay(updatedDisabledEndDates);\r\n      setValue(`addTime[${index}].is_off_day`, false);\r\n    } else {\r\n      const updatedDisabledEndDates = [...disabledWorkDay];\r\n      updatedDisabledEndDates[index] = false;\r\n      setDisabledWorkDay(updatedDisabledEndDates);\r\n      setValue(`addTime[${index}].is_off_day`, true);\r\n    }\r\n  };\r\n  const onSubmit = (values) => {\r\n    let payloadData = {\r\n      contract_id: +selectedFilter?.contract_id,\r\n      reports: values?.addTime,\r\n    };\r\n    if (selectedFilter?.contract_id) {\r\n      dispatch(\r\n        saveTimeReports(payloadData, () => {\r\n          dispatch(timeReporting({}, role));\r\n          handleClose();\r\n        })\r\n      );\r\n    } else {\r\n      setDetails(true)\r\n    }\r\n  };\r\n  const handleChange = (e, select) => {\r\n    setSelectedFilter({\r\n      ...selectedFilter,\r\n      [select]: e.target.value\r\n    });\r\n  };\r\n  const handlePrevTimeReporting = (e) => {\r\n    e.preventDefault()\r\n    setDetails(true)\r\n    if (selectedFilter && Object.keys(selectedFilter).length == 4) {\r\n      dispatch(getPreviousTimeReports(selectedFilter, () => {\r\n        setOpen(false)\r\n      }));\r\n      remove();\r\n    }\r\n  };\r\n  const handleCloseModal = () => {\r\n    setSelectedFilter({})\r\n    setTimeReportingData([])\r\n    setAddTimeReports([])\r\n    handleClose()\r\n    setCount(prev=>prev+1)\r\n  }\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={handleClose}\r\n      centered\r\n      animation\r\n      className=\"custom-modal\"\r\n      size=\"lg\"\r\n      scrollable\r\n    >\r\n      <Modal.Header className=\"border-0 pb-3\" onClick={handleCloseModal}>\r\n        <CloseButton></CloseButton>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body>\r\n        <h3 className=\"popup-heading\">{ currentAction==\"AddTime\"  ?  t(\"addTime\") :\"Edit Time\"}</h3>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div className=\"experience-container\">\r\n           {currentAction!==\"AddTime\"? <div className=\"mb-3\">\r\n              <Collapse in={true}>\r\n                <div className=\"mt-2\">\r\n                  <Row>\r\n                    <Col md={4} className=\"mb-0\">\r\n                      <div>\r\n                        <Form.Select\r\n                          required=\"true\"\r\n                          className=\"shadow-none common-field\"\r\n                          onChange={(e) => handleChange(e, \"year\")}\r\n                        >\r\n                          <option disabled selected>\r\n                            {t(\"selectYear\")}\r\n                          </option>\r\n                          <option value=\"2024\">2024</option>\r\n                          <option value=\"2023\">2023</option>\r\n                          <option value=\"2022\">2022</option>\r\n                          <option value=\"2021\">2021</option>\r\n                          <option value=\"2020\">2020</option>\r\n                          <option value=\"2019\">2019</option>\r\n                          <option value=\"2018\">2018</option>\r\n                          <option value=\"2017\">2017</option>\r\n                        </Form.Select>\r\n                        {!selectedFilter?.year?.length > 0 && details ? (\r\n                          <p style={{ color: 'red' }}>{t(\"pleaseSelectAYear\")}</p>\r\n                        ) : \"\"}\r\n                      </div>\r\n                    </Col>\r\n                    <Col md={4} className=\"mb-0\">\r\n                      <div>\r\n                        <Form.Select\r\n                          required\r\n                          className=\"shadow-none common-field\"\r\n                          onChange={(e) => handleChange(e, \"month\")}\r\n                        >\r\n                          <option disabled selected>\r\n                            {t(\"selectMonth\")}\r\n                          </option>\r\n                          <option value=\"1\">{t(\"january\")}</option>\r\n                          <option value=\"2\">{t(\"feburary\")}</option>\r\n                          <option value=\"3\">{t(\"march\")}</option>\r\n                          <option value=\"4\">{t(\"april\")}</option>\r\n                          <option value=\"5\">{t(\"may\")}</option>\r\n                          <option value=\"6\">{t(\"june\")}</option>\r\n                          <option value=\"7\">{t(\"july\")}</option>\r\n                          <option value=\"8\">{t(\"august\")}</option>\r\n                          <option value=\"9\">{t(\"september\")}</option>\r\n                          <option value=\"10\">{t(\"october\")}</option>\r\n                          <option value=\"11\">{t(\"november\")}</option>\r\n                          <option value=\"12\">{t(\"december\")}</option>\r\n                        </Form.Select>\r\n                        {!selectedFilter?.month?.length > 0 && details ? (\r\n                          <p style={{ color: 'red' }}>{t(\"selectAMonth\")}</p>\r\n                        ) : \"\"}\r\n                      </div>\r\n                    </Col>\r\n                    <Col md={4} className=\"mb-0\">\r\n                      <div>\r\n                        <Form.Select\r\n                          className=\"shadow-none common-field\"\r\n                          onChange={(e) => handleChange(e, \"week_number\")}\r\n                        >\r\n                          <option disabled selected>\r\n                            {t(\"selectWeek\")}\r\n                          </option>\r\n                          <option value=\"1\">{t(\"week\")} 1</option>\r\n                          <option value=\"2\">{t(\"week\")} 2</option>\r\n                          <option value=\"3\">{t(\"week\")} 3</option>\r\n                          <option value=\"4\">{t(\"week\")} 4</option>\r\n                        </Form.Select>\r\n\r\n                      </div>\r\n                      {!selectedFilter?.week_number?.length > 0 && details ? (\r\n                        <p style={{ color: 'red' }}>{t(\"selectAWeek\")}</p>\r\n                      ) : \"\"}\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Collapse>\r\n            </div>:\"\"}\r\n            <Row>\r\n              <Col md={12} className=\"border-bottom mb-2 pb-4\">\r\n                <Form.Group>\r\n                  {/* <Form.Label>Client Name</Form.Label> */}\r\n                  <Form.Select\r\n                    className=\"shadow-none common-field\"\r\n                    onChange={(e) => handleChange(e, \"contract_id\")}\r\n                  >\r\n                    <option disabled selected>\r\n                      {t(\"selectClientName\")}\r\n                    </option>\r\n\r\n                    {allContracts?.map((item) => {\r\n                      return (\r\n                        <>\r\n                          <option value={item?.id}>{item?.client?.name}</option>\r\n                        </>\r\n                      );\r\n                    })}\r\n                  </Form.Select>\r\n                </Form.Group>\r\n                {!selectedFilter?.contract_id?.length > 0 && details ? (\r\n                  <p style={{ color: 'red' }}>{t(\"enterClientName\")}</p>\r\n                ) : \"\"}\r\n                 \r\n                  {currentAction==\"Edit\" &&<div className=\"text-center mt-2\">\r\n                    <RexettButton\r\n                      type=\"submit\"\r\n                      text=\"Get Previous Time Report\"\r\n                      className=\"main-btn px-4\"\r\n                      variant=\"transparent\"\r\n                      onClick={handlePrevTimeReporting}\r\n                      isLoading={btnLoader}\r\n                    />\r\n\r\n                  </div>}\r\n                \r\n                \r\n              </Col>\r\n            </Row>\r\n            {(!open && currentAction!==\"Edit\") || addTimeReports?.length>0 ? fields?.map((item, index) => {\r\n              return (\r\n                <>\r\n                  <div className=\"time-row\">\r\n                    <Row className=\"align-items-center\">\r\n                      <Col md={4}>\r\n                        <Form.Label className=\"date-text mb-0\">\r\n                          {item?.report_date}\r\n                        </Form.Label>\r\n                      </Col>\r\n                      <Col md={8}>\r\n                        <Form.Group className=\"d-flex justify-content-end gap-3\">\r\n                          {/* <Form.Label className=\"d-block mb-1 fw-semibold\">\r\n                            {t(\"selectDay\")}\r\n                          </Form.Label> */}\r\n                          <Form.Check\r\n                            inline\r\n                            type=\"radio\"\r\n                            value=\"work-day\"\r\n                            name={`\"day-select\"${index}`}\r\n                            onChange={(e) =>\r\n                              handleWorkDaysChange(e, index, true)\r\n                            }\r\n                            className=\"font-15 select-radiolabel me-0 ps-0\"\r\n                            id={`work-day${index}`}\r\n                            label={t(\"workDay\")}\r\n                          />\r\n                          <Form.Check\r\n                            inline\r\n                            type=\"radio\"\r\n                            value=\"off-day\"\r\n                            data-value=\"off-day\"\r\n                            name={`\"day-select\"${index}`}\r\n                            onChange={(e) =>\r\n                              handleWorkDaysChange(e, index, false)\r\n                            }\r\n                            className=\"font-15 select-radiolabel me-0 ps-0\"\r\n                            id={`\"off-day\"${index}`}\r\n                            label=\"Holiday\"\r\n                          />\r\n                        </Form.Group>\r\n                      </Col>\r\n                    </Row>\r\n                    <div\r\n                      className={\r\n                        disabledWorkDay[index]\r\n                          ? \"d-flex gap-3 align-items-center mt-3\"\r\n                          : \"cv-template-section cv-template1 d-none\"\r\n                      }\r\n                    >\r\n                      <Form.Group>\r\n                        {/* <Form.Label className=\"font-13\">\r\n                          {t(\"startTime\")}\r\n                        </Form.Label> */}\r\n                        <Form.Control\r\n                          type=\"time\"\r\n                          className=\"cv-field font-13 shadow-none\"\r\n                          {...register(`addTime.${index}.start_time`, {\r\n                            required: disabledWorkDay[index] ? \"Please Enter Time\" : false,\r\n                            validate: {\r\n\r\n                              lessThanEndTime: value => {\r\n                                const watchEndTime = watch(`addTime.${index}.end_time`);\r\n                                if (!watchEndTime || parseInt(value) < parseInt(watchEndTime)) {\r\n                                  return true;\r\n                                }\r\n                                return 'Start time must be less than End Time';\r\n                              }\r\n                            }\r\n                          })}\r\n                          defaultValue={item.start_time}\r\n                        ></Form.Control>\r\n                        {errors && errors.addTime && errors.addTime[index] && errors.addTime[index].start_time && (\r\n                          <p className=\"error-message\">{errors.addTime[index].start_time.message}</p>\r\n                        )}\r\n                      </Form.Group>\r\n                      <span>-</span>\r\n                      <Form.Group>\r\n                        {/* <Form.Label className=\"font-13\">\r\n                          {t(\"endTime\")}\r\n                        </Form.Label> */}\r\n                        <Form.Control\r\n                          type=\"time\"\r\n                          className=\"cv-field font-13 shadow-none\"\r\n                          {...register(`addTime.${index}.end_time`, {\r\n                            required: disabledWorkDay[index] ? \"Please Enter Time\" : false,\r\n                          })}\r\n                          defaultValue={item.end_time}\r\n                        >\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      {disabledWorkDay[index] ? (\r\n                        <Form.Group className=\"w-100\">\r\n                          {/* <Form.Label className=\"font-13\">{t(\"memo\")}</Form.Label> */}\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            className=\"cv-field font-13 shadow-none\"\r\n                            placeholder=\"Add Memo\"\r\n                            {...register(`addTime.${index}.memo`, {\r\n                              required: false,\r\n                            })}\r\n                            defaultValue={item.memo}\r\n                          >\r\n                          </Form.Control>\r\n                        </Form.Group>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              );\r\n            }) :\r\n              \"\"}\r\n            <div className=\"text-center\">\r\n              {addTimeReports?.length>0  || (timeReportingData.length>0 &&  currentAction!==\"Edit\")  ? <RexettButton\r\n                type=\"submit\"\r\n                text=\"Submit\"\r\n                className=\"main-btn py-2 px-4 font-14 fw-semibold\"\r\n                variant=\"transparent\"\r\n                disabled={btnLoader}\r\n                isLoading={btnLoader}\r\n              /> : \"\"}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\nexport default AddTimingModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport developerImg from '../../assets/img/user-img.jpg'\r\nimport AddTimingModal from \"../../components/common/Modals/AddTiming\";\r\nimport RexettTimeReporting from \"../../components/clients/TimeReporiting/RexettTimeReporting\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { timeReporting } from \"../../redux/slices/clientDataSlice\";\r\nconst DeveloperTimeReporting = () => {\r\n    const dispatch = useDispatch()\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [selectedPeriod, setSelectedPeriod] = useState(\"weekly\");\r\n    const [selectedFilter, setSelectedFilter] = useState({});\r\n    const [currentAction,setCurrentAction]=useState(null)\r\n    const { timeReportingData, smallLoader } = useSelector(state => state.clientData)   \r\n    useEffect(() => {\r\n        let filterData = {\r\n            ...selectedFilter,\r\n            filter: selectedPeriod\r\n        }\r\n        dispatch(timeReporting(filterData,\"developer\"))\r\n    }, [dispatch])\r\n\r\n    const handleShowModal = (crntAct) => {\r\n        setShowModal(true);\r\n        setCurrentAction(crntAct)\r\n    };\r\n\r\n    const handleCloseAddTimingModal = () => {\r\n        setShowModal(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <RexettTimeReporting  timeReportingData={timeReportingData} handleShowModal={handleShowModal} role=\"developer\"/>\r\n            {showModal?<AddTimingModal show={showModal} handleClose={handleCloseAddTimingModal} role=\"developer\" currentAction={currentAction} />:\"\"}\r\n        </>\r\n    )\r\n}\r\nexport default DeveloperTimeReporting;","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction(...funcs) {\n  return funcs.filter(f => f != null).reduce((acc, f) => {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n    if (acc === null) return f;\n    return function chainedFunction(...args) {\n      // @ts-ignore\n      acc.apply(this, args);\n      // @ts-ignore\n      f.apply(this, args);\n    };\n  }, null);\n}\nexport default createChainedFunction;","import classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport React, { useMemo } from 'react';\nimport { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\nfunction getDefaultDimensionValue(dimension, elem) {\n  const offset = `offset${dimension[0].toUpperCase()}${dimension.slice(1)}`;\n  const value = elem[offset];\n  const margins = MARGINS[dimension];\n  return value +\n  // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) +\n  // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\nconst collapseStyles = {\n  [EXITED]: 'collapse',\n  [EXITING]: 'collapsing',\n  [ENTERING]: 'collapsing',\n  [ENTERED]: 'collapse show'\n};\nconst Collapse = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  className,\n  children,\n  dimension = 'height',\n  in: inProp = false,\n  timeout = 300,\n  mountOnEnter = false,\n  unmountOnExit = false,\n  appear = false,\n  getDimensionValue = getDefaultDimensionValue,\n  ...props\n}, ref) => {\n  /* Compute dimension */\n  const computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n\n  /* -- Expanding -- */\n  const handleEnter = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = '0';\n  }, onEnter), [computedDimension, onEnter]);\n  const handleEntering = useMemo(() => createChainedFunction(elem => {\n    const scroll = `scroll${computedDimension[0].toUpperCase()}${computedDimension.slice(1)}`;\n    elem.style[computedDimension] = `${elem[scroll]}px`;\n  }, onEntering), [computedDimension, onEntering]);\n  const handleEntered = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onEntered), [computedDimension, onEntered]);\n\n  /* -- Collapsing -- */\n  const handleExit = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = `${getDimensionValue(computedDimension, elem)}px`;\n    triggerBrowserReflow(elem);\n  }, onExit), [onExit, getDimensionValue, computedDimension]);\n  const handleExiting = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onExiting), [computedDimension, onExiting]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    \"aria-expanded\": props.role ? inProp : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    childRef: children.ref,\n    in: inProp,\n    timeout: timeout,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    appear: appear,\n    children: (state, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'collapse-horizontal')\n    })\n  });\n});\n\n// @ts-ignore\n\nexport default Collapse;"],"names":["_ref","_selectedFilter$year","_selectedFilter$month","_selectedFilter$week_","_selectedFilter$contr","show","handleClose","role","currentAction","dispatch","useDispatch","disabledWorkDay","setDisabledWorkDay","useState","selectedFilter","setSelectedFilter","open","setOpen","timeReportingData","setTimeReportingData","details","setDetails","count","setCount","t","useTranslation","register","control","handleSubmit","watch","setValue","trigger","formState","errors","useForm","fields","append","remove","useFieldArray","name","allContracts","addTimeReports","btnLoader","useSelector","state","developerData","useEffect","getAllContracts","length","getCurrentWeekDates","today","Date","currentDay","getDay","startDate","setDate","getDate","formattedDate","weekDates","i","date","getFullYear","getMonth","slice","push","report_date","forEach","item","is_off_day","start_time","end_time","memo","prevState","handleWorkDaysChange","e","index","updatedDisabledEndDates","handleChange","select","target","value","_jsxs","Modal","onHide","centered","animation","className","size","scrollable","children","_jsx","Header","onClick","handleCloseModal","setAddTimeReports","prev","CloseButton","Body","onSubmit","values","payloadData","contract_id","reports","addTime","saveTimeReports","timeReporting","Collapse","in","Row","Col","md","Form","Select","required","onChange","disabled","selected","year","style","color","month","week_number","Group","map","_item$client","_Fragment","id","client","RexettButton","type","text","variant","preventDefault","Object","keys","getPreviousTimeReports","isLoading","Label","Check","inline","label","Control","validate","lessThanEndTime","watchEndTime","parseInt","defaultValue","message","placeholder","DeveloperTimeReporting","showModal","setShowModal","selectedPeriod","setSelectedPeriod","setCurrentAction","smallLoader","clientData","filterData","filter","RexettTimeReporting","handleShowModal","crntAct","AddTimingModal","handleCloseAddTimingModal","_len","arguments","funcs","Array","_key","f","reduce","acc","Error","_len2","args","_key2","apply","this","MARGINS","height","width","getDefaultDimensionValue","dimension","elem","toUpperCase","margins","css","collapseStyles","EXITED","EXITING","ENTERING","ENTERED","React","ref","onEnter","onEntering","onEntered","onExit","onExiting","inProp","timeout","mountOnEnter","unmountOnExit","appear","getDimensionValue","props","computedDimension","handleEnter","useMemo","createChainedFunction","handleEntering","scroll","handleEntered","handleExit","triggerBrowserReflow","handleExiting","TransitionWrapper","addEndListener","transitionEndListener","childRef","innerProps","classNames"],"sourceRoot":""}
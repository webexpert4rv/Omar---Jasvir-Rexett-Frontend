{"version":3,"file":"static/js/7929.1273a3fb.chunk.js","mappings":"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","sources":["pages/admin/Modals/EditTimeReportModal.jsx","pages/vendor/TimeReporting.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport RexettButton from \"../../../components/atomic/RexettButton\";\r\nimport { adminTimeReporting, editTimeReporting } from \"../../../redux/slices/adminDataSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useTranslation } from \"react-i18next\";\r\nconst EditTimeReport = ({ show, handleClose,adminTimeReportingList }) => {\r\n    const [devloperState,setDeveloperState]=useState([])\r\n    const {smallLoader}=useSelector(state=>state.adminData)\r\n    const dispatch =useDispatch()\r\n    const [time,setTime]=useState(null)\r\n    const [hours,setHours]=useState(null)\r\n    const { t } = useTranslation()\r\n\r\n    const handleClient=(e)=>{\r\n     let copyList=[...adminTimeReportingList]\r\n     let findData=copyList.find((item)=>item.client_details.id==e.target.value)\r\n     let devName=findData?.contracts.map((item)=>{\r\n        return { dev:item?.contractDetails?.developer.name,\r\n        time:item?.time_report?.totalDuration,\r\n        contract_id:item?.contractDetails?.id\r\n        }\r\n    })\r\n    setDeveloperState(devName)\r\n    }\r\n\r\n    useEffect(()=>{\r\n      return ()=>{\r\n        setTime(null)\r\n      }\r\n    },[])\r\n\r\n    const handleDeveloper=(e)=>{\r\n    let obj=JSON.parse(e.target.value)\r\n        setTime(obj)\r\n    }\r\n\r\n    const handleEditTime=async (e)=>{\r\n        e.preventDefault()\r\n        if(time==null){\r\n            return \r\n        }\r\n\r\n   let paylaod={\r\n    \"contract_id\": time?.contract_id,\r\n    \"total_hours\": hours\r\n  }\r\n  console.log(time.contractId,\"contractId\");\r\n  await dispatch(editTimeReporting(paylaod))\r\n  dispatch(adminTimeReporting())\r\n  setTime(null)\r\n  \r\n  handleClose()\r\n    }\r\n\r\n    const handleChange=(e)=>{\r\n        setHours(e.target.value)\r\n        setTime({\r\n            ...time,\r\n            time:e.target.value\r\n        })\r\n    }\r\n    return (\r\n        <Modal show={show} onHide={handleClose} centered className=\"custom-modal\" animation>\r\n            <Modal.Header closeButton className=\"border-0 pb-3\">\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <h3 className=\"popup-heading\">{t(\"endTimeReport\")}</h3>\r\n                <Form>\r\n                    <Row>   \r\n                        {/* <Col md=\"12\">\r\n                            <Form.Group className=\"mb-4\">\r\n                                <Form.Select className=\"common-field\" onChange={handleClient}>\r\n                                    <option selected disabled>Select Client</option>\r\n                                     {\r\n                                       adminTimeReportingList?.map((item)=>{\r\n                                        return( <>\r\n                                          <option value={item?.client_details?.id}>{item?.client_details?.name}</option>\r\n                                        </>)\r\n                                       }) \r\n                                     }\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                        </Col> */}\r\n                        <Col md=\"12\">\r\n                            <Form.Group className=\"mb-4\">\r\n                                <Form.Select className=\"common-field\" onChange={handleDeveloper}>\r\n                                    <option selected disabled>Select Developer</option>\r\n                                     {\r\n                                       devloperState?.map((item)=>{\r\n                                        return( <>\r\n                                          <option value={JSON.stringify(item)}>{item?.dev}</option>\r\n                                        </>)\r\n                                       }) \r\n                                     }\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"12\">\r\n                            <Form.Group className=\"mb-4\">\r\n                                <Form.Select className=\"common-field\" onChange={handleDeveloper}>\r\n                                    <option selected disabled>Select Client</option>\r\n                                    <option>Amazon</option>\r\n                                    <option>Google</option>\r\n                                    <option>Volvo</option>\r\n                                    <option>BMW</option>\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                            <Form.Group className=\"mb-4\">\r\n                                <Form.Select className=\"common-field\" onChange={handleDeveloper}>\r\n                                    <option selected disabled>Select Month</option>\r\n                                    <option>January</option>\r\n                                    <option>Feburary</option>\r\n                                    <option>March</option>\r\n                                    <option>April</option>\r\n                                    <option>May</option>\r\n                                    <option>June</option>\r\n                                    <option>July</option>\r\n                                    <option>August</option>\r\n                                    <option>September</option>\r\n                                    <option>October</option>\r\n                                    <option>November</option>\r\n                                    <option>December</option>\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                            <Form.Group className=\"mb-4\">\r\n                                <Form.Select className=\"common-field\" onChange={handleDeveloper}>\r\n                                    <option selected disabled>Select Year</option>\r\n                                    <option>2024</option>\r\n                                    <option>2023</option>\r\n                                    <option>2022</option>\r\n                                    <option>2021</option>\r\n                                    <option>2020</option>\r\n                                    <option>2019</option>\r\n                                    <option>2018</option>\r\n                                    <option>2017</option>\r\n                                    </Form.Select>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"12\">\r\n                            <Form.Group className=\"mb-4\">\r\n                                <Form.Control type=\"text\" className=\"common-field\" placeholder=\"Enter Total Hours\" value={time?.time} name=\"name\" onChange={handleChange} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"12\">\r\n                            <Form.Group className=\"mb-4\">\r\n                                <Form.Control type=\"text\" as=\"textarea\" className=\"common-field\" placeholder=\"Enter reason for edit time sheet\" />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <div className=\"text-center\">\r\n                        <RexettButton\r\n                            type=\"submit\"\r\n                            text=\"Submit\"\r\n                            className=\"main-btn px-4 font-14 fw-semibold\"\r\n                            variant=\"transparent\"\r\n                            onClick={handleEditTime}\r\n                            isLoading={smallLoader}\r\n                        />\r\n                    </div>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\nexport default EditTimeReport;","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { HiUpload } from \"react-icons/hi\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { adminTimeReporting } from \"../../redux/slices/adminDataSlice\";\r\nimport ScreenLoader from \"../../components/atomic/ScreenLoader\";\r\nimport { getClientList, getVendorTimeReporting } from \"../../redux/slices/vendorDataSlice\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { IoSearch } from \"react-icons/io5\";\r\nimport NoDataFound from \"../../components/atomic/NoDataFound\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport EditTimeReport from \"../admin/Modals/EditTimeReportModal\";\r\n\r\n\r\nconst TimeReporting = () => {\r\n    const dispatch = useDispatch()\r\n    const { adminTimeReportingList, screenLoader, adminClientList } = useSelector(state => state.adminData)\r\n    const { clientList } = useSelector(state => state.vendorData);\r\n    const [contractId, setContractID] = useState(null);\r\n    const [showEditTimeModal, setShowEditTimeModal] = useState(false);\r\n    const [developerData, setDeveloperData] = useState([])\r\n    const { t } = useTranslation()\r\n    const navigate=useNavigate()\r\n\r\n    useEffect(() => {\r\n        dispatch(getVendorTimeReporting())\r\n    }, [])\r\n\r\n    const handleShowEditTimeModal = () => {\r\n        setShowEditTimeModal(true);\r\n    };\r\n    const handleCloseEditTimeModal = () => {\r\n        setShowEditTimeModal(false);\r\n    };\r\n    const handleRowClick = ()=>{\r\n        navigate(\"/vendor-time-detail\")\r\n    }\r\n\r\n\r\n    const [showUploadInvoice, setShowUploadInvoice] = useState(false);\r\n    const handleShowUploadInvoice = (id) => {\r\n        setShowUploadInvoice(true);\r\n        setContractID(id)\r\n    };\r\n\r\n    const handleCloseUploadInvoice = () => {\r\n        setShowUploadInvoice(false);\r\n    };\r\n    \r\n\r\n    const contractName = (data) => {\r\n        let devName = data.map((item) => {\r\n            return { dev: item?.contractDetails?.developer.name }\r\n        })\r\n        return devName\r\n    }\r\n\r\n    const handleDeveloper = (e, inx) => {\r\n        let newInx = e.target.value\r\n        let newDev = [...developerData]\r\n        newDev[inx].newData = newDev[inx].contracts[newInx]\r\n        setDeveloperData(newDev)\r\n    }\r\n\r\n    const handleClientClick = (e) => {\r\n        dispatch(adminTimeReporting(e))\r\n    }\r\n    \r\n    const redirectToTimeReporting = (clientId) => {\r\n        navigate(`/admin-time-reporting-detail/${clientId}`)\r\n    }\r\n    return (\r\n        <>\r\n            <section>\r\n                <div className=\"filter-section mb-4\">\r\n                    <Form>\r\n                        <div className=\"d-md-flex gap-3 justify-content-between align-items-end\">\r\n                            <div className=\"mb-md-0 mb-3\">\r\n                                {/* <div>\r\n                                    <Form.Selxect className=\"filter-select shadow-none\" onClick={(e) => handleClientClick(e.target.value)}>\r\n                                        <option value=\"\" selected disabled>{t(\"selectClients\")}</option>\r\n                                        {\r\n                                            adminClientList?.map((item, index) => {\r\n                                                return (<>\r\n                                                    <option key={index} value={item.id}  >{item?.name}</option>\r\n                                                </>)\r\n                                            })\r\n                                        }\r\n                                    </Form.Select>\r\n                                </div> */}\r\n                            </div>\r\n                            <div className=\"d-flex align-items-center gap-3\">\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    className=\"common-field font-14 shadow-none\"\r\n                                    placeholder=\"Enter Keyword...\"\r\n                                />\r\n                                <Button variant=\"transparent\" className=\"main-btn px-3 search-btn\">\r\n                                    <IoSearch />\r\n                                </Button>\r\n                            </div>\r\n                            {/* <div>\r\n                                <Button className=\"main-btn px-5\" onClick={handleShowEditTimeModal}>{t(\"editTimeReport\")}</Button>\r\n                            </div> */}\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n                <div>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table time-table table-bordered table-ui-custom\">\r\n                            <thead>\r\n                                <th className=\"time-table-head text-start\">\r\n                                    Project Name\r\n                                </th>\r\n                                <th className=\"time-table-head text-start\">\r\n                                    Project start date\r\n                                </th>\r\n                                <th className=\"time-table-head text-start\">\r\n                                    {t(\"totalHiredDevelopers\")}\r\n                                </th>\r\n                                <th className=\"time-table-head text-start\">\r\n                                    Contract\r\n                                </th>\r\n                                {/* <th className=\"time-table-head\">\r\n                                    {t(\"contract\")}\r\n                                </th> */}\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr className=\"application-row\" onClick={handleRowClick}>\r\n                                    <td className=\"align-middle font-14\">\r\n                                        Figma to ui\r\n                                    </td>\r\n                                    <td className=\"align-middle font-14\">\r\n                                        14-05-2024\r\n                                    </td>\r\n                                    <td className=\"align-middle font-14\">\r\n                                        3\r\n                                    </td>\r\n                                    <td className=\"align-middle font-14\">\r\n                                        6 months\r\n                                    </td>\r\n                                </tr>\r\n                                {/* {screenLoader ? <ScreenLoader /> : <>\r\n                                    {adminTimeReportingList?.length > 0 ?\r\n                                        adminTimeReportingList?.map(({client_name,client_id,total_hired_developers,total_individual_dev,total_projects,total_vendors_dev,contracts}, index) => {\r\n                                            return (\r\n                                                <Fragment key={index}>\r\n                                                    <tr key={index} className=\"row-hover\" onClick={()=>{redirectToTimeReporting(client_id)}}>\r\n                                                        <td className=\"time-table-data\">{client_name}</td>\r\n                                                        <td className=\"time-table-data\">{total_hired_developers}</td>\r\n                                                        <td className=\"time-table-data\">{total_projects}</td>\r\n                                                        <td className=\"time-table-data\">{total_vendors_dev}</td>\r\n                                                        <td className=\"time-table-data\">{total_individual_dev}</td>\r\n                                                    </tr>\r\n                                                </Fragment>\r\n                                            )\r\n                                        })\r\n                                        : <td colSpan={10}> <div className=\"simple-no-data\">  <NoDataFound/></div>  </td>\r\n                                        }\r\n                                </>} */}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div className=\"helper-text-section\">\r\n                        <h3>Guiding You Through: Helpful Text to Navigate Time Reporting</h3>\r\n                        <p>Admin can effortlessly review daily time sheets and promptly raise invoices for clients. Click on any client's name in the table above to delve deeper into their project and time reporting details. Gain insights and manage project progress with precision. Also you can raise invoice for clients and track the invoices for Devs , Vendors and Clients.</p>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <EditTimeReport show={showEditTimeModal} handleClose={handleCloseEditTimeModal} adminTimeReportingList={adminTimeReportingList} />\r\n        </>\r\n    )\r\n}\r\nexport default TimeReporting;"],"names":["_ref","show","handleClose","adminTimeReportingList","devloperState","setDeveloperState","useState","smallLoader","useSelector","state","adminData","dispatch","useDispatch","time","setTime","hours","setHours","t","useTranslation","useEffect","handleDeveloper","e","obj","JSON","parse","target","value","_jsxs","Modal","onHide","centered","className","animation","children","_jsx","Header","closeButton","Body","Form","Row","Col","md","Group","Select","onChange","selected","disabled","map","item","_Fragment","stringify","dev","Control","type","placeholder","name","as","RexettButton","text","variant","onClick","async","preventDefault","paylaod","contract_id","console","log","contractId","editTimeReporting","adminTimeReporting","isLoading","TimeReporting","screenLoader","adminClientList","clientList","vendorData","setContractID","showEditTimeModal","setShowEditTimeModal","developerData","setDeveloperData","navigate","useNavigate","getVendorTimeReporting","showUploadInvoice","setShowUploadInvoice","Button","IoSearch","handleRowClick","EditTimeReport","handleCloseEditTimeModal"],"sourceRoot":""}
{"version":3,"file":"static/js/275.17ede9df.chunk.js","mappings":"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","sources":["components/common/Guidelines/Guidelines.jsx","components/common/LeaveRequest/ListOfHolidays.jsx","pages/developer/ApplyLeaveSection.jsx","pages/developer/PlanLeave.jsx","pages/views/Modals/EndJob.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst Guidelines = ({heading ,guideLines}) => {\r\n  return (\r\n    <div>\r\n      <div className=\"helper-text-section\">\r\n        <h3>{heading}</h3>\r\n        <ol className=\"ps-3  mb-0\">\r\n          {guideLines?.map((lines, index) => (\r\n            <li className=\"mb-1\">\r\n              <p key={index}> {lines} </p>\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Guidelines;\r\n","import moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { MONTH_NAME, SELECT_YEAR } from \"../../clients/TimeReporiting/constant\";\r\nimport { TiEdit } from \"react-icons/ti\";\r\nimport { IoCheckmark, IoCloseOutline } from \"react-icons/io5\";\r\nimport ToolTip from \"../Tooltip/ToolTip\";\r\nimport RexettButton from \"../../atomic/RexettButton\";\r\nimport RexettSpinner from \"../../atomic/RexettSpinner\";\r\n\r\nconst ListOfHolidays = ({\r\n  holidayList,\r\n  handleShowEvent,\r\n  handleDelete,\r\n  handleAproveDisapprove,\r\n  approvedLoader,\r\n  selectedIndex,\r\n  selectedRejectIndex\r\n}) => {\r\n  const [data, setData] = useState();\r\n  const [yearData, setYearData] = useState();\r\n  const [selectedMonth, setSelectedMonth] = useState(\"All\");\r\n  const [selectedYear, setSelectedYear] = useState(\"2024\");\r\n  let role = localStorage.getItem(\"role\");\r\n\r\n  useEffect(() => {\r\n    const yearDetails = holidayList?.filter(\r\n      (values) => moment(values?.date).year() == \"2024\"\r\n    );\r\n    setYearData(yearDetails);\r\n    setSelectedYear(\"2024\");\r\n    setData(yearDetails);\r\n  }, [holidayList]);\r\n\r\n  const FilteredDeveloperData = data?.filter(\r\n    (values) => values?.is_approved_by_client == true\r\n  );\r\n\r\n  const handleYearFilter = (year) => {\r\n    setSelectedYear(year);\r\n    setSelectedMonth(\"All\");\r\n    const yearDetails = holidayList?.filter(\r\n      (values) => moment(values?.date).year() == year\r\n    );\r\n    setYearData(yearDetails);\r\n    setData(yearDetails);\r\n  };\r\n\r\n  const handleMonthFilter = (month) => {\r\n    setSelectedMonth(month);\r\n    if (month !== \"All\") {\r\n      const selectedMonthHolidays = yearData?.filter(\r\n        (values) =>\r\n          moment(values?.date).month() + 1 == moment(month, \"MMMM\").format(\"M\")\r\n      );\r\n      setData(selectedMonthHolidays);\r\n    } else {\r\n      setData(yearData);\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"\">\r\n      <div className=\"card-box border shadow-none\">\r\n        {role === \"client\" ? (\r\n          <div className=\"mb-0\">\r\n            <Button className=\"main-btn font-14\" onClick={handleShowEvent}>\r\n              + Create New Holiday\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div className=\"d-flex justify-content-between align-items-center\">\r\n          <div className=\"skill-filters\">\r\n            {MONTH_NAME.map((month) => (\r\n              <span\r\n                key={month}\r\n                className={selectedMonth === month ? \"active\" : \"\"}\r\n                onClick={() => handleMonthFilter(month)}\r\n              >\r\n                {month}\r\n              </span>\r\n            ))}\r\n          </div>\r\n\r\n          <Form className=\"d-flex gap-2\">\r\n            <Form.Select\r\n              className=\"common-field font-14 w-auto\"\r\n              onChange={(e) => handleYearFilter(e.target.value)}\r\n              value={selectedYear}\r\n            >\r\n              {/* <option>Select Year</option> */}\r\n              {SELECT_YEAR?.map((item, idx) => (\r\n                <option key={idx}>{item}</option>\r\n              ))}\r\n            </Form.Select>\r\n          </Form>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-ui-custom mb-0\">\r\n            <thead>\r\n              <tr>\r\n                <th>Date</th>\r\n                <th>Name</th>\r\n                {/* <th>Type</th> */}\r\n                {role === \"client\" ? <th>Action</th> : \"\"}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data?.length > 0 ? (\r\n                role === \"developer\"  ? (\r\n                  FilteredDeveloperData?.map((field, idx) => (\r\n                    <>\r\n                      <tr key={idx}>\r\n                        <td className=\"font-14 align-middle\">\r\n                          <strong>{field?.date}</strong>\r\n                        </td>\r\n                        <td className=\"font-14 align-middle\">\r\n                          {field?.name}\r\n                        </td>\r\n                      </tr>\r\n                    </>\r\n                  ))\r\n                ) : (\r\n                  data?.map((holiday, index) => (\r\n                    <tr key={index}>\r\n                      <td className=\"font-14 align-middle\">\r\n                        <strong>{holiday?.date}</strong>\r\n                      </td>\r\n                      <td className=\"font-14 align-middle\">\r\n                        {holiday?.name}\r\n                        {role === \"client\" && holiday?.added_by === \"client\" ? (\r\n                          <span className=\"associate-text\">\r\n                            <span className=\"associate\">Created</span>\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </td>\r\n                      {/* <td className=\"font-14 align-middle\">\r\n                      {holiday.type}\r\n                    </td> */}\r\n                      <td>\r\n                        {role === \"client\" ? (\r\n                          holiday?.added_by === \"system\" ? (\r\n                            holiday?.is_approved_by_client === true ? (\r\n                              <div>\r\n                                <h6>Approved</h6>\r\n                              </div>\r\n                            ) : holiday?.is_approved_by_client === false  ? (\r\n                              <div>\r\n                              <h6>Disapproved</h6>\r\n                            </div>\r\n                            ) :(\r\n                              <div>\r\n                                <div className=\"d-flex gap-2\">\r\n                                  <ToolTip text=\"Approve\">\r\n                                    <RexettButton\r\n                                      variant=\"transparent\"\r\n                                      className=\"px-3 arrow-btn primary-arrow font-16 text-decoration-none\"\r\n                                      isLoading={selectedIndex == index    ?  approvedLoader : false  }   \r\n                                      icon = {selectedIndex == index ? approvedLoader : <IoCheckmark />}\r\n                                      onClick={() =>\r\n                                        handleAproveDisapprove(\r\n                                          holiday?.id,\r\n                                          \"approve\",\r\n                                          index\r\n                                        )\r\n                                      }\r\n                                    >\r\n                                      \r\n                                    </RexettButton>\r\n                                  </ToolTip>\r\n                                  <ToolTip text=\"Disapprove\">\r\n                                    <RexettButton\r\n                                      variant=\"transparent\"\r\n                                      className=\"px-3 arrow-btn danger-arrow font-16 text-decoration-none\"\r\n                                     isLoading={selectedRejectIndex  == index   ?  approvedLoader : false }\r\n                                      // disabled={selectedRejectIndex == index  ? approvedLoader : <IoCloseOutline /> }\r\n                                      icon = {selectedRejectIndex == index ? approvedLoader : <IoCloseOutline />}\r\n                                      onClick={() =>\r\n                                        handleAproveDisapprove(\r\n                                          holiday?.id,\r\n                                          \"disapprove\",\r\n                                          index\r\n                                        )\r\n                                      } \r\n                                    >\r\n                                      \r\n                                      \r\n                                    </RexettButton>\r\n                                  </ToolTip>\r\n                                </div>\r\n                              </div>\r\n                            )\r\n                          ) : (\r\n                            <div className=\"d-flex gap-2\">\r\n                              <ToolTip text=\"Edit\">\r\n                                <Button\r\n                                  variant=\"transparent\"\r\n                                  className=\"px-3 arrow-btn info-arrow font-16 text-decoration-none\"\r\n                                  onClick={() =>\r\n                                    handleShowEvent(holiday?.id, \"edit\")\r\n                                  }\r\n                                >\r\n                                  <TiEdit />\r\n                                </Button>\r\n                              </ToolTip>\r\n                              <ToolTip text=\"Delete\">\r\n                                <Button\r\n                                  variant=\"transparent\"\r\n                                  className=\"px-3 arrow-btn danger-arrow font-16 text-decoration-none\"\r\n                                  onClick={() => handleDelete(holiday?.id)}\r\n                                >\r\n                                  <IoCloseOutline />\r\n                                </Button>\r\n                              </ToolTip>\r\n                            </div>\r\n                          )\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                )\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan=\"3\" className=\"font-14\">\r\n                    <p className=\"text-danger mb-0\">\r\n                      No holidays in this month\r\n                    </p>\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ListOfHolidays;\r\n","import { Row, Col, Form } from 'react-bootstrap';\r\nimport RexettButton from \"../../components/atomic/RexettButton\";\r\nimport { LEAVE_TYPE } from \"../../components/clients/TimeReporiting/constant\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { DateRangePicker } from \"react-date-range\";import { useDispatch, useSelector } from 'react-redux';\r\nimport { applyLeave, getLeaveHistory, getUpdateLeave } from '../../redux/slices/developerDataSlice';\r\n\r\n\r\nconst ApplyLeaveSection=({ allContracts, handleRange,id,selectionRange,setSelectionRange, smallLoader ,start_date , end_date  }) =>{\r\n  const { register,handleSubmit ,setValue ,reset ,formState: { errors } } = useForm({});\r\n  const {leaveDetails} = useSelector(state => state.developerData)\r\n  const today = new Date();\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch()\r\n  const user_id = localStorage.getItem(\"userId\");\r\n  const [isEdit, setIsEdit] = useState({\r\n    status: false,\r\n    leaveId: \"\",\r\n  });\r\n\r\n  useEffect(()=>{\r\n    const selectedLeave = leaveDetails.find((item) => item.id == id);\r\n    if (selectedLeave) {\r\n      setSelectionRange({\r\n        startDate: new Date(selectedLeave.start_date),\r\n        endDate: new Date(selectedLeave.end_date),\r\n        key: \"selection\",\r\n      });\r\n\r\n      setIsEdit({ status: true, leaveId: id });\r\n      setValue(\"client_name\", selectedLeave?.contract_id);\r\n      setValue(\"leave_type\", selectedLeave?.type);\r\n      setValue(\"reason\", selectedLeave?.reason_for_leave);\r\n    }\r\n\r\n  },[id])\r\n\r\n  const onSubmit = async (values) => {\r\n    let data = {\r\n      contract_id: +values.client_name,\r\n      start_date: start_date,\r\n      end_date: end_date,\r\n      start_time: null,\r\n      end_time: null,\r\n      type: values.leave_type,\r\n      reason_for_leave: values.reason,\r\n  }\r\n\r\n    if (isEdit?.status === true) {\r\n      await dispatch(getUpdateLeave(isEdit?.leaveId, data));\r\n    } else {\r\n      await dispatch(applyLeave(data));\r\n    }\r\n    let payload = {\r\n      approval_status: \"Under Approval\",\r\n    };\r\n    dispatch(getLeaveHistory(user_id, payload))\r\n    setIsEdit({ status: false, leaveId: \"\" })\r\n    reset()\r\n    setSelectionRange({\r\n      startDate: new Date(),\r\n      endDate: new Date(),\r\n      key: \"selection\",\r\n    }) \r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Row className=\"gx-4\">\r\n      <Col lg={7}>\r\n        <div className=\"leave-calendar h-100\">\r\n          <DateRangePicker\r\n            ranges={[selectionRange]}\r\n            onChange={handleRange}\r\n            minDate={today}\r\n          />\r\n        </div>\r\n      </Col>\r\n      <Col lg={5}>\r\n        <div className=\"plan-leave-wrapper\">\r\n          <h3 className=\"section-head border-0 mb-3\">Apply Leave</h3>\r\n          <form onSubmit={handleSubmit(onSubmit)} noValidate>\r\n            <div className=\"mb-4\">\r\n              <Form.Label className=\"mb-2 font-14\">Select Client</Form.Label>\r\n              <Form.Select\r\n                className=\"common-field font-14 mb-4\"\r\n                {...register(\"client_name\", {\r\n                  required: t(\"clientNameRequired\"),\r\n                })}\r\n                defaultValue=\"\"\r\n              >\r\n                <option value=\"\" disabled>\r\n                  Select client\r\n                </option>\r\n                {allContracts?.map((item, idx) => (\r\n                  <option key={idx} value={item?.id}>\r\n                    {item?.client?.name}\r\n                  </option>\r\n                ))}\r\n              </Form.Select>\r\n              {errors.client_name && <span className=\"error-message\">{errors.client_name.message}</span>}\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <Form.Label className=\"mb-2 font-14\">Leave Type</Form.Label>\r\n              <Form.Select\r\n                className=\"common-field font-10 mb-4\"\r\n                {...register(\"leave_type\", {\r\n                  required: t(\"leaveTypeRequired\"),\r\n                })}\r\n                defaultValue=\"\"\r\n              >\r\n                <option value=\"\" disabled>\r\n                  Select leave type\r\n                </option>\r\n                {LEAVE_TYPE.map((item, idx) => (\r\n                  <option key={idx} value={item.value}>\r\n                    {item.key}\r\n                  </option>\r\n                ))}\r\n              </Form.Select>\r\n              {errors.leave_type && <span className=\"error-message\">{errors.leave_type.message}</span>}\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <Form.Label className=\"mb-2 font-14\">Reason</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows=\"3\"\r\n                className=\"common-field font-14\"\r\n                placeholder=\"Enter Reason\"\r\n                {...register(\"reason\", {\r\n                  required: {\r\n                    value: true,\r\n                    message: t(\"reasonRequired\"),\r\n                  },\r\n                })}\r\n              />\r\n              {errors.reason && <span className=\"error-message\">{errors.reason.message}</span>}\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <RexettButton\r\n                type=\"submit\"\r\n                text={t(\"Submit\")}\r\n                className=\"main-btn font-14 px-4 py-2\"\r\n                variant=\"transparent\"\r\n                isLoading={smallLoader}\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default ApplyLeaveSection;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Form, Button, Nav, Tab } from \"react-bootstrap\";\r\nimport { DateRangePicker } from \"react-date-range\";\r\nimport { IoClose } from \"react-icons/io5\";\r\nimport { MdModeEditOutline } from \"react-icons/md\";\r\nimport companyLogo from \"../../assets/img/amazon.png\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Calendar from \"react-calendar\";\r\nimport {\r\n  applyLeave,\r\n  getAllContracts,\r\n  getLeaveHistory,\r\n  getCancelLeave,\r\n  getUpdateLeave,\r\n  getHolidaysList,\r\n} from \"../../redux/slices/developerDataSlice\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport moment from \"moment\";\r\nimport RexettButton from \"../../components/atomic/RexettButton\";\r\nimport { HOLIDAY_GUIDE_LINES, generateLeave } from \"../../components/clients/TimeReporiting/constant\";\r\nimport { LEAVE_TYPE } from \"../../components/clients/TimeReporiting/constant\";\r\nimport RejectModal from \"../views/Modals/EndJob\";\r\nimport ToolTip from \"../../components/common/Tooltip/ToolTip\";\r\nimport NoDataFound from \"../../components/atomic/NoDataFound\";\r\nimport ScreenLoader from \"../../components/atomic/ScreenLoader\";\r\nimport { IoCheckmark, IoCloseOutline } from \"react-icons/io5\";\r\nimport { TiEdit } from \"react-icons/ti\";\r\nimport ListOfHolidays from \"../../components/common/LeaveRequest/ListOfHolidays\";\r\nimport ApplyLeaveSection from \"./ApplyLeaveSection\";\r\nimport Guidelines from \"../../components/common/Guidelines/Guidelines\";\r\n\r\nconst LeavePlan = () => {\r\n  const [selectionRange, setSelectionRange] = useState({\r\n    startDate: new Date(),\r\n    endDate: new Date(),\r\n    key: \"selection\",\r\n  });\r\n  const { screenLoader, leaveDetails, allContracts, holidayList ,smallLoader  } = useSelector(\r\n    (state) => state.developerData\r\n  );\r\nconst [selectedLeave ,setSelectedLeave] = useState()\r\n  const [leaveId , setLeaveId] = useState(null)\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    setValue,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({});\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n  const [currentTab, setCurrentTab] = useState(\"first\");\r\n  const today = new Date();\r\n  const start_date = moment(selectionRange?.startDate).format(\"MM-DD-YYYY\");\r\n  const end_date = moment(selectionRange?.endDate).format(\"MM-DD-YYYY\");\r\n  const user_id = localStorage.getItem(\"userId\");\r\n\r\n  useEffect(() => {\r\n    dispatch(getHolidaysList());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let data;\r\n    if (currentTab === \"first\") {\r\n      data = {\r\n        approval_status: \"Under Approval\",\r\n      };\r\n    }\r\n    dispatch(getLeaveHistory(user_id, data));\r\n    dispatch(getAllContracts());\r\n  }, [currentTab]);\r\n\r\n  const handleSelect = (selectedTab) => {\r\n    setCurrentTab(selectedTab);\r\n  };\r\n  const handleRange = (ranges) => {\r\n    setSelectionRange(ranges.selection);\r\n  };\r\n\r\n  const handleCancelLeave = async (id ,idx) => {\r\n    setSelectedLeave(idx)\r\n    let data = {\r\n      withdrawal_reason: \"reason\",\r\n    };\r\n    await dispatch(getCancelLeave(id, data));\r\n    let payload = {\r\n      approval_status: \"Under Approval\",\r\n    };\r\n    dispatch(getLeaveHistory(user_id, payload));\r\n  };\r\n\r\n \r\n  const listHolidays = (data) => {\r\n    const holidays = data?.map((value) => new Date(value?.date));\r\n    return holidays;\r\n  };\r\n\r\n  const [value, onChange] = useState(new Date());\r\n  const markedDates = listHolidays(holidayList);\r\n\r\n  const tileContent = ({ date, view }) => {\r\n    if (\r\n      view === \"month\" &&\r\n      markedDates.find((d) => d.toDateString() === date.toDateString())\r\n    ) {\r\n      return <div className=\"dot\"></div> ;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {screenLoader ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <Tab.Container defaultActiveKey=\"plan-leave\">\r\n          <Nav variant=\"pills\" className=\"mb-4 application-pills\">\r\n            <Nav.Item className=\"application-item\">\r\n              <Nav.Link className=\"application-link\" eventKey=\"plan-leave\">\r\n                Plan Leave\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item className=\"application-item\">\r\n              <Nav.Link className=\"application-link\" eventKey=\"public-holiday\">\r\n                Public Holiday\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"plan-leave\">\r\n              <Tab.Container\r\n                id=\"left-tabs-example\"\r\n                defaultActiveKey=\"first\"\r\n                onSelect={handleSelect}\r\n              >\r\n                <Nav variant=\"pills\" className=\"mb-4 application-pills\">\r\n                  <Nav.Item className=\"application-item\">\r\n                    <Nav.Link className=\"application-link\" eventKey=\"first\">\r\n                      Apply Leave\r\n                    </Nav.Link>\r\n                  </Nav.Item>\r\n                  <Nav.Item className=\"application-item\">\r\n                    <Nav.Link className=\"application-link\" eventKey=\"second\">\r\n                      Leave History\r\n                    </Nav.Link>\r\n                  </Nav.Item>\r\n                </Nav>\r\n\r\n                <Tab.Content>\r\n                  <Tab.Pane eventKey=\"first\">\r\n                    <div className=\"card-box mb-4\">\r\n                      <h3 className=\"section-head border-0 mb-2\">\r\n                        Applied Leaves\r\n                      </h3>\r\n                      <Row>\r\n                        {leaveDetails.length > 0 ? (\r\n                          leaveDetails?.map((field, idx) => (\r\n                            <Col xxl={3} xl={6} className=\"mb-xxl-0 mb-3\">\r\n                              <div className=\"leave-wrapper-box\">\r\n                                <div>\r\n                                  <h4 className=\"project-heading\">{}</h4>\r\n                                  <h4 className=\"leave-type-heading\">\r\n                                    {generateLeave(field?.type)}\r\n                                  </h4>\r\n                                  <div>\r\n                                    <p className=\"leave-date\">\r\n                                      {moment(field?.start_date).format(\r\n                                        \"MM-DD-YYYY\"\r\n                                      )}\r\n                                      to\r\n                                      {moment(field?.end_date).format(\r\n                                        \"MM-DD-YYYY\"\r\n                                      )}\r\n                                    </p>\r\n                                  </div>\r\n                                  <p className=\"status-finished mb-0\">\r\n                                    {field?.approval_status}\r\n                                  </p>\r\n                                </div>\r\n                                <div className=\"d-flex gap-3\">\r\n                                  <ToolTip text=\"Cancel Leave\">\r\n                                    <RexettButton\r\n                                      className=\"px-3 mb-2 arrow-btn danger-arrow font-16 text-decoration-none\"\r\n                                      onClick={() =>\r\n                                        handleCancelLeave(field?.id , idx)\r\n                                      }\r\n                                      isLoading={selectedLeave === idx ? smallLoader : false}\r\n                                    >\r\n                                      <IoClose />\r\n                                    </RexettButton>\r\n                                  </ToolTip>\r\n                                  <ToolTip text=\"Edit Leave\">\r\n                                    <Button\r\n                                      className=\"px-3 mb-2 arrow-btn info-arrow font-16 text-decoration-none\"\r\n                                      onClick={() => setLeaveId(field?.id)}\r\n                                    >\r\n                                      <MdModeEditOutline />\r\n                                    </Button>\r\n                                  </ToolTip>\r\n                                </div>\r\n                              </div>\r\n                            </Col>\r\n                          ))\r\n                        ) : (\r\n                          <p className=\"text-muted font-14 mb-0\">\r\n                            No Leave Applied\r\n                          </p>\r\n                        )}\r\n                      </Row>\r\n                    </div>\r\n                      <ApplyLeaveSection allContracts={allContracts} handleRange={handleRange} selectionRange ={selectionRange} setSelectionRange = {setSelectionRange} smallLoader = {smallLoader} id = {leaveId} start_date = {start_date} end_date = {end_date}  />\r\n                  </Tab.Pane>\r\n                  <Tab.Pane eventKey=\"second\">\r\n                    <div className=\"table-responsive\">\r\n                      <table className=\"table time-table table-bordered table-ui-custom\">\r\n                        <thead>\r\n                          <th className=\"time-table-head text-start\">\r\n                            Leave Type\r\n                          </th>\r\n                          <th className=\"time-table-head text-start\">\r\n                            Leave Date\r\n                          </th>\r\n                          <th className=\"time-table-head text-start\">Reason</th>\r\n                          <th className=\"time-table-head text-start\">\r\n                            Project\r\n                          </th>\r\n                          <th className=\"time-table-head text-start\">\r\n                            Client Name\r\n                          </th>\r\n                          <th className=\"time-table-head text-start\">\r\n                            Leave Status\r\n                          </th>\r\n                        </thead>\r\n                        <tbody>\r\n                          {leaveDetails?.map((item, idx) => (\r\n                            <>\r\n                              <tr>\r\n                                <td className=\"time-table-data text-start\">\r\n                                  <h4 className=\"leave-type-heading mb-0 white-nowrap\">\r\n                                    {generateLeave(item?.type)}\r\n                                  </h4>\r\n                                </td>\r\n                                <td className=\"time-table-data text-start\">\r\n                                  <p className=\"leave-date white-nowrap\">\r\n                                    {moment(item.start_date).format(\r\n                                      \"MM-DD-YYYY\"\r\n                                    )}\r\n                                    to\r\n                                    {moment(item.end_date).format(\"MM-DD-YYYY\")}\r\n                                  </p>\r\n                                </td>\r\n                                <td className=\"time-table-data text-start reason-data\">\r\n                                  <p className=\"font-14 mb-0\">\r\n                                    {item.reason_for_leave}\r\n                                  </p>\r\n                                </td>\r\n                                <td className=\"time-table-data text-start white-nowrap\">\r\n                                  AI Bot Project\r\n                                </td>\r\n                                <td className=\"time-table-data text-start\">\r\n                                  <div className=\"d-flex align-items-center gap-2\">\r\n                                    {/* <div className=\"user-imgbx application-imgbx mx-0 mb-0\">\r\n                                        <img src={companyLogo} className=\"user-img\" />\r\n                                      </div> */}\r\n                                    {item?.contract?.client?.name}\r\n                                  </div>\r\n                                </td>\r\n                                <td className=\"time-table-data text-start\">\r\n                                  <span className=\"status-progress\">\r\n                                    {item.approval_status}\r\n                                  </span>\r\n                                </td>\r\n                              </tr>\r\n                            </>\r\n                          ))}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </Tab.Pane>\r\n                </Tab.Content>\r\n              </Tab.Container>\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"public-holiday\">\r\n              <ListOfHolidays\r\n                onChange={onChange}\r\n                value={value}\r\n                tileContent={tileContent}\r\n                holidayList={holidayList}\r\n              />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      )}\r\n      <Guidelines heading={\"Guiding You Through: Helpful Text to Apply Leaves\"} guideLines={HOLIDAY_GUIDE_LINES}/>\r\n    </>\r\n  );\r\n};\r\nexport default LeavePlan;\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport RexettSpinner from \"../../../components/atomic/RexettSpinner\";\r\nimport { useStateManager } from \"react-select\";\r\nconst RejectModal = ({\r\n  show,\r\n  handleClose,\r\n  handleClick,\r\n  smallLoader,\r\n  header,\r\n  feedbacks,\r\n  submit,\r\n}) => {\r\n  const [feedback, setFeedback] = useState(\"\");\r\n  const handleFeedback = (e) => {\r\n    setFeedback(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={handleClose}\r\n      centered\r\n      className=\"custom-modal\"\r\n      animation\r\n    >\r\n      <Modal.Header closeButton className=\"border-0 pb-3\"></Modal.Header>\r\n\r\n      <Modal.Body>\r\n        <h3 className=\"popup-heading\">{header} </h3>\r\n        <Form>\r\n          <Form.Group className=\"mb-4\">\r\n            <Form.Label>{feedbacks}</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows=\"6\"\r\n              placeholder={\r\n                feedbacks === \"Reasons\"\r\n                  ? \"Enter your reason, why you want to reject the leave ?\"\r\n                  : \"Enter your feedback, why you want to reject?\"\r\n              }\r\n              onChange={handleFeedback}\r\n              required\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <div className=\"text-center\">\r\n            <Button\r\n              variant=\"transparent\"\r\n              className=\"main-btn px-4\"\r\n              onClick={(e) => {\r\n                let data;\r\n                if (feedbacks === \"Reasons\") {\r\n                  data = feedback\r\n                } else {\r\n                  data = {\r\n                    status: \"ended\",\r\n                    end_reason: feedback,\r\n                  };\r\n                }\r\n                handleClick(e, data);\r\n              }}\r\n              disabled={feedback?.length === 0}\r\n            >\r\n              {smallLoader ? <RexettSpinner /> : submit}\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\nexport default RejectModal;\r\n"],"names":["_ref","heading","guideLines","_jsx","children","_jsxs","className","map","lines","index","holidayList","handleShowEvent","handleDelete","handleAproveDisapprove","approvedLoader","selectedIndex","selectedRejectIndex","data","setData","useState","yearData","setYearData","selectedMonth","setSelectedMonth","selectedYear","setSelectedYear","role","localStorage","getItem","useEffect","yearDetails","filter","values","moment","date","year","FilteredDeveloperData","is_approved_by_client","Button","onClick","MONTH_NAME","month","selectedMonthHolidays","format","handleMonthFilter","Form","Select","onChange","e","handleYearFilter","target","value","SELECT_YEAR","item","idx","length","field","_Fragment","name","holiday","added_by","ToolTip","text","RexettButton","variant","isLoading","icon","IoCheckmark","id","IoCloseOutline","TiEdit","colSpan","allContracts","handleRange","selectionRange","setSelectionRange","smallLoader","start_date","end_date","register","handleSubmit","setValue","reset","formState","errors","useForm","leaveDetails","useSelector","state","developerData","today","Date","t","useTranslation","dispatch","useDispatch","user_id","isEdit","setIsEdit","status","leaveId","selectedLeave","find","startDate","endDate","key","contract_id","type","reason_for_leave","Row","Col","lg","DateRangePicker","ranges","minDate","onSubmit","async","client_name","start_time","end_time","leave_type","reason","getUpdateLeave","applyLeave","getLeaveHistory","approval_status","noValidate","Label","required","defaultValue","disabled","_item$client","client","message","LEAVE_TYPE","Control","as","rows","placeholder","LeavePlan","screenLoader","setSelectedLeave","setLeaveId","currentTab","setCurrentTab","getHolidaysList","getAllContracts","markedDates","holidays","listHolidays","ScreenLoader","Tab","Container","defaultActiveKey","Nav","Item","Link","eventKey","Content","Pane","onSelect","selectedTab","xxl","xl","generateLeave","getCancelLeave","withdrawal_reason","handleCancelLeave","IoClose","MdModeEditOutline","ApplyLeaveSection","selection","_item$contract","_item$contract$client","contract","ListOfHolidays","tileContent","view","d","toDateString","Guidelines","HOLIDAY_GUIDE_LINES","show","handleClose","handleClick","header","feedbacks","submit","feedback","setFeedback","Modal","onHide","centered","animation","Header","closeButton","Body","Group","end_reason","RexettSpinner"],"sourceRoot":""}
{"version":3,"file":"static/js/6853.b6a03916.chunk.js","mappings":"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","sources":["components/atomic/Cards.jsx","components/atomic/SeeMore.jsx","pages/views/HiredDevelopers.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaGithub } from \"react-icons/fa\";\r\nimport { FaLinkedin } from \"react-icons/fa\";\r\nimport { MdEmail } from \"react-icons/md\";\r\nimport userImg from \"../../assets/img/user-img.jpg\";\r\n\r\nconst Cards = ({ item, handleCardClick }) => {\r\n  \r\n  return (\r\n    <>\r\n      <div\r\n        className=\"developer-card\"\r\n        onClick={() => handleCardClick(item?.developer?.id)}\r\n        key={item?.developer_id}\r\n      >\r\n        <div className=\"user-imgbx\">\r\n          <img\r\n            src={\r\n              item?.developer?.profile_picture\r\n                ? item?.developer?.profile_picture\r\n                : userImg\r\n            }\r\n            alt=\"developerImage\"\r\n            className=\"user-img\"\r\n          />\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <h3 className=\"user-name\">{item?.developer?.name}</h3>\r\n          <p className=\"designation-user\">\r\n            {item?.developer?.developer_detail?.professional_title}\r\n          </p>\r\n          <p className=\"email-user\">{item?.developer?.email}</p>\r\n          <ul className=\"social-icons d-none\">\r\n            <li>\r\n              <Link to={item?.developer?.developer_detail?.github_url}>\r\n                <FaGithub />\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to={item?.developer?.developer_detail?.linkedin_url}>\r\n                <FaLinkedin />\r\n              </Link>\r\n            </li>\r\n            {/* <li>\r\n              <Link to={item?.developer?.developer_detail?.email}>\r\n                <MdEmail />\r\n              </Link>\r\n            </li> */}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const SeeMore = ({setCount}) => {\r\n  \r\n  const updateSeeMore=()=>{\r\n    setCount(prev=>prev+1)\r\n  }\r\n\r\n  return (\r\n    <Link to={\"#\"} className=\"link-text-dark\" onClick={updateSeeMore}>See More</Link>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { developerAssignList, getDeveloperDetails } from \"../../redux/slices/clientDataSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Cards from \"../../components/atomic/Cards\";\r\nimport { SeeMore } from \"../../components/atomic/SeeMore\";\r\nimport ScreenLoader from \"../../components/atomic/ScreenLoader\";\r\nimport { FaGithub } from \"react-icons/fa\";\r\nimport { FaLinkedin } from \"react-icons/fa\";\r\nimport { MdEmail } from \"react-icons/md\";\r\nimport userImg from \"../../assets/img/user-img.jpg\";\r\nimport { IoGrid } from \"react-icons/io5\";\r\nimport { FaListUl } from \"react-icons/fa6\";\r\nimport { Nav, Tab } from \"react-bootstrap\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport NoDataFound from \"../../components/atomic/NoDataFound\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n\r\nconst HiredDevelopers = () => {\r\n  const dispatch = useDispatch();\r\n  const [count, setCount] = useState(1);\r\n  const navigate = useNavigate()\r\n  const { t } = useTranslation();\r\n  const { assignedDeveloperList, screenLoader } = useSelector(\r\n    (state) => state.clientData\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(developerAssignList(count));\r\n  }, [dispatch, count]);\r\n\r\n\r\n  const handleCardClick = (devId) => {\r\n    dispatch(getDeveloperDetails(devId))\r\n    navigate(`/client/client-single-developer/${devId}`)\r\n  }\r\n\r\n  const handleRowClick = (id) => {\r\n    dispatch(getDeveloperDetails(id))\r\n    navigate(`/client/client-single-developer/${id}`)\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Tab.Container className=\"w-100\" defaultActiveKey=\"list-view\">\r\n        <div className=\"d-flex align-items-center justify-content-between mb-3 pb-2 border-bottom-grey\">\r\n          <h3 className=\"section-head-sub mb-0\">{t(\"listOfAssignedDevelopers\")}</h3>\r\n          <Nav variant=\"pills\" className=\"document-view-pill\">\r\n            <Nav.Item className=\"document-view-item\">\r\n              <Nav.Link className=\"document-view-link\" eventKey=\"list-view\">\r\n                <FaListUl />\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item className=\"document-view-item\">\r\n              <Nav.Link className=\"document-view-link\" eventKey=\"grid-view\">\r\n                <IoGrid />\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n        </div>\r\n        {screenLoader ? (\r\n          <ScreenLoader />\r\n        ) : (\r\n          <>\r\n            {\" \"}\r\n            <Tab.Content>\r\n\r\n              <Tab.Pane eventKey=\"list-view\">\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table developer-table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>\r\n                          <span>{t(\"developerName\")}</span>\r\n                        </th>\r\n                        <th>\r\n                          <span>{t(\"designation\")}</span>\r\n                        </th>\r\n                        <th>\r\n                          <span>{t(\"email\")}</span>\r\n                        </th>\r\n                        <th>\r\n                          <span>Project start date</span>\r\n                        </th>\r\n                        <th>\r\n                          <span>Project name</span>\r\n                        </th>\r\n                        <th>\r\n                          <span>Hiring Price</span>\r\n                        </th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {assignedDeveloperList?.assigned_developers?.length > 0 ? assignedDeveloperList?.assigned_developers?.map((item, index) => {\r\n                        return (\r\n                          <>\r\n                            <tr onClick={() => handleRowClick(item?.developer_id)} key={item?.developer_id}>\r\n                              <td>\r\n                                <span className=\"d-flex align-items-center gap-3\">\r\n                                  <img src={item?.developer?.profile_picture ? item?.developer?.profile_picture : userImg} />\r\n                                  <h3 className=\"user-name color-121212 mb-0\">\r\n                                    {item?.developer?.name}\r\n                                  </h3>\r\n                                </span>\r\n                              </td>\r\n                              <td>\r\n                                <span>\r\n                                  <p className=\"designation-user color-121212 mb-0\">\r\n                                    {\r\n                                      item?.developer?.developer_detail\r\n                                        ?.professional_title\r\n                                    }\r\n                                  </p>\r\n                                </span>\r\n                              </td>\r\n                              <td>\r\n                                <span>\r\n                                  <p className=\"designation-user color-121212 mb-0\">\r\n                                    {item?.developer?.email}\r\n                                  </p>\r\n                                </span>\r\n                              </td>\r\n                              <td>\r\n                                <span><p className=\"designation-user color-121212 mb-0\">12-05-2024</p></span>\r\n                              </td>\r\n                              <td>\r\n                                <span><p className=\"designation-user color-121212 mb-0\">Build AI Bot</p></span>\r\n                              </td>\r\n                              <td>\r\n                                <span><p className=\"designation-user color-121212 mb-0\">$1240.00</p></span>\r\n                              </td>\r\n                      \r\n                            </tr>\r\n                          </>\r\n                        );\r\n                      }) :<td colSpan={10}> <div className=\"simple-no-data\"><NoDataFound /></div>  </td>}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"grid-view\">\r\n                <div className=\"developers-list\">\r\n                  {assignedDeveloperList?.assigned_developers?.length > 0 ? assignedDeveloperList?.assigned_developers?.map((item, index) => {\r\n                    return (\r\n                      <>\r\n                        <Cards item={item} handleCardClick={() => handleCardClick(item?.developer_id)} />\r\n                      </>\r\n                    );\r\n                  }) : <td colSpan={10}> <div className=\"simple-no-data\"><NoDataFound /></div>  </td>}\r\n                </div>\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n            {\r\n              assignedDeveloperList?.total_developer_count > 5 &&  assignedDeveloperList?.assigned_developers?.length !==assignedDeveloperList.total_developer_count  ? (\r\n                <div className=\"text-center mt-3\">\r\n                  <SeeMore setCount={setCount} />\r\n                </div>\r\n              ) : (\"\")}\r\n          </>\r\n        )}\r\n      </Tab.Container>\r\n    </>\r\n  );\r\n};\r\nexport default HiredDevelopers;\r\n"],"names":["_ref","_item$developer2","_item$developer3","_item$developer4","_item$developer5","_item$developer5$deve","_item$developer6","_item$developer7","_item$developer7$deve","_item$developer8","_item$developer8$deve","item","handleCardClick","_jsx","_Fragment","children","_jsxs","className","onClick","_item$developer","developer","id","src","profile_picture","userImg","alt","name","developer_detail","professional_title","email","Link","to","github_url","FaGithub","linkedin_url","FaLinkedin","developer_id","SeeMore","setCount","updateSeeMore","prev","HiredDevelopers","_assignedDeveloperLis","_assignedDeveloperLis2","_assignedDeveloperLis3","_assignedDeveloperLis4","_assignedDeveloperLis5","dispatch","useDispatch","count","useState","navigate","useNavigate","t","useTranslation","assignedDeveloperList","screenLoader","useSelector","state","clientData","useEffect","developerAssignList","Tab","Container","defaultActiveKey","Nav","variant","Item","eventKey","FaListUl","IoGrid","ScreenLoader","Content","Pane","assigned_developers","length","map","index","_item$developer4$deve","handleRowClick","getDeveloperDetails","concat","colSpan","NoDataFound","Cards","devId","total_developer_count"],"sourceRoot":""}
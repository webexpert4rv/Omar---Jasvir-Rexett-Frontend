{"version":3,"file":"static/js/1697.041d66d5.chunk.js","mappings":"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","sources":["components/atomic/SeeMore.jsx","pages/vendor/ListAllDeveloper.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const SeeMore = ({setCount}) => {\r\n  \r\n  const updateSeeMore=()=>{\r\n    setCount(prev=>prev+1)\r\n  }\r\n\r\n  return (\r\n    <Link to={\"#\"} className=\"link-text-dark\" onClick={updateSeeMore}>See More</Link>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport userImg from \"../../assets/img/user-img.jpg\";\r\nimport { FaGithub } from \"react-icons/fa\";\r\nimport { FaLinkedin } from \"react-icons/fa\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Nav,\r\n  OverlayTrigger,\r\n  Tab,\r\n  Tooltip,\r\n} from \"react-bootstrap\";\r\nimport { FaCircleCheck, FaTrashCan } from \"react-icons/fa6\";\r\nimport { IoCloseOutline, IoGrid, IoTrash } from \"react-icons/io5\";\r\nimport { FaListUl } from \"react-icons/fa6\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getDeleteDeveloper,\r\n  getDevelopersList,\r\n} from \"../../redux/slices/vendorDataSlice\";\r\nimport NoDataFound from \"../../components/atomic/NoDataFound\";\r\nimport ScreenLoader from \"../../components/atomic/ScreenLoader\";\r\nimport { SeeMore } from \"../../components/atomic/SeeMore\";\r\nimport { getDeveloperDetails } from \"../../redux/slices/clientDataSlice\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport ConfirmationModal from \"../../components/common/Modals/ConfirmationModal\";\r\nimport { getAccountDisableEnable } from \"../../redux/slices/adminDataSlice\";\r\n\r\nconst AllDeveloperList = () => {\r\n  const { allDevelopersList, screenLoader } = useSelector(\r\n    (state) => state.vendorData\r\n  );\r\n  const { smallLoader } = useSelector((state) => state.adminData);\r\n  const { data } = allDevelopersList;\r\n  const dispatch = useDispatch();\r\n  const [showModal, setShowModal] = useState({\r\n    modalName: \"\",\r\n    isTrue: false,\r\n  });\r\n  const [selectedFilter, setSelectedFilter] = useState({});\r\n  const [count, setCount] = useState(1);\r\n  const [devId, setDevId] = useState();\r\n  const [timerValue, setTimerValue] = useState(\"\");\r\n  const [search, setSearch] = useState();\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    dispatch(getDevelopersList({ page: count }));\r\n  }, [count]);\r\n\r\n\r\n\r\n  const handleRowClick = (e, id) => {\r\n    e.stopPropagation();\r\n    dispatch(getDeveloperDetails(id));\r\n    navigate(`/vendor-single-developer/${id}`);\r\n  };\r\n\r\n    const handleClose = () => {\r\n        setShowModal(!showModal)\r\n    }\r\n    const handleDelete = (e, id) => {\r\n        e.stopPropagation()\r\n        setDevId(id)\r\n        setShowModal(!showModal)\r\n    }\r\n \r\n\r\n  const handleAction = async (e) => {\r\n    e.preventDefault();\r\n    let data = {\r\n      user_id: showModal?.id,\r\n      status: showModal?.active,\r\n    };\r\n    if (showModal.modalName == \"toggle\") {\r\n      await dispatch(getAccountDisableEnable(data));\r\n    } else {\r\n      await dispatch(getDeleteDeveloper(showModal?.id));\r\n    }\r\n    dispatch(getDevelopersList({ page: count }));\r\n    setShowModal({\r\n      modalName: \"\",\r\n      isTrue: false,\r\n    });\r\n  };\r\n  const handleSearchChange = (e) => {\r\n    clearTimeout(timerValue);\r\n    setSearch(e.target.value);\r\n    const timer = setTimeout(() => {\r\n      let filterData = {\r\n        ...selectedFilter,\r\n        search: e.target.value,\r\n      };\r\n      dispatch(getDevelopersList(filterData));\r\n    }, 500);\r\n    setTimerValue(timer);\r\n  };\r\n  const disabledText = <Tooltip>Disable Account</Tooltip>;\r\n\r\n  const handleBtnAction = (e, data) => {\r\n    e.stopPropagation();\r\n    setShowModal(data);\r\n  };        \r\n\r\n  const handleFilter=(e,name)=>{\r\n   let filterData = {\r\n    ...selectedFilter,\r\n    [name]: e.target.value,\r\n  };\r\n  dispatch(getDevelopersList(filterData));\r\n  }\r\n\r\n  const statusOptions = [\r\n    { label: \"Status\", value: \"status\" },\r\n    { label: \"Active\", value: \"active\" },\r\n    { label: \"Disabled\", value: \"disabled\" }\r\n  ];\r\n  \r\n  const sortOptions = [\r\n    { label: \"Sort by name\", value: \"sort_by_name\" },\r\n    { label: \"Ascending\", value: \"ascending\" },\r\n    { label: \"Descending\", value: \"descending\" }\r\n  ];\r\n  \r\n  const developerOptions = [\r\n    { label: \"Select Developer\", value: \"select_developer\" },\r\n    { label: \"Assigned\", value: \"assigned\" },\r\n    { label: \"UnAssigned\", value: \"unassigned\" }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Tab.Container className=\"w-100\" defaultActiveKey=\"list-view\">\r\n        <div className=\"d-flex align-items-center justify-content-between mb-3 pb-2 border-bottom-grey\">\r\n          <h3 className=\"section-head-sub mb-0\">{t(\"listOfAllDevelopers\")}</h3>\r\n        </div>\r\n        <div className=\"filter-section\">\r\n          <Form>\r\n            <div className=\"d-flex justify-content-between align-items-center gap-3\">\r\n              <div className=\"d-flex gap-3\">\r\n                <div className=\"flex-none\">\r\n                  <Form.Select className=\"filter-select shadow-none\" onChange={(e)=>handleFilter(e,\"status\")}>\r\n                    {statusOptions.map((option, idx) => (\r\n                      <option key={idx} disabled={idx===0} value={option.value} selected={idx === 0}>\r\n                        {option.label}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Select>\r\n                </div>\r\n                <div className=\"flex-none\">\r\n                  <Form.Select className=\"filter-select shadow-none\" onChange={(e)=>handleFilter(e,\"sort_by_name\")}>\r\n                    {sortOptions.map((option, idx) => (\r\n                      <option key={idx} disabled={idx===0}  value={option.value} selected={idx === 0}>\r\n                        {option.label}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Select>\r\n                </div>\r\n                <div className=\"flex-none\">\r\n                  <Form.Select className=\"filter-select shadow-none\" onChange={(e)=>handleFilter(e,\"assignment_filter\")}>\r\n                    {developerOptions.map((option, idx) => (\r\n                      <option key={idx} disabled={idx===0}  value={option.value}  selected={idx === 0}>\r\n                        {option.label}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Select>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex-none\">\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Search Developer\"\r\n                  className=\"common-field font-14\"\r\n                  value={search}\r\n                  onChange={handleSearchChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n        <Tab.Content>\r\n          <Tab.Pane eventKey=\"grid-view\">\r\n            {/* <div className=\"developers-list\">\r\n                            <div className=\"developer-card\">\r\n                                <div className=\"user-imgbx\">\r\n                                    <img src={userImg} className=\"user-img\" />\r\n                                </div>\r\n                                <div className=\"text-center\">\r\n                                    <h3 className=\"user-name\">John Doe</h3>\r\n                                    <p className=\"designation-user\">Web developer</p>\r\n                                    <p className=\"email-user\">johndoe123@gmail.com</p>\r\n                                </div>\r\n                            </div>\r\n                        </div> */}\r\n          </Tab.Pane>\r\n          <Tab.Pane eventKey=\"list-view\">\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table developer-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>\r\n                      <span>{t(\"developerName\")}</span>\r\n                    </th>\r\n                    <th>\r\n                      <span>{t(\"designation\")}</span>\r\n                    </th>\r\n                    <th>\r\n                      <span>{t(\"email\")}</span>\r\n                    </th>\r\n                    <th>\r\n                      <span>Status</span>\r\n                    </th>\r\n                    <th className=\"text-center\">\r\n                      <span>Restrict Action</span>\r\n                    </th>\r\n                    <th className=\"text-center\">\r\n                      <span>Delete Account</span>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {screenLoader ? (\r\n                    <ScreenLoader />\r\n                  ) : data?.developers?.length > 0 ? (\r\n                    data?.developers?.map((item, index) => {\r\n                      return (\r\n                        <>\r\n                          <tr onClick={(e) => handleRowClick(e, item?.id)}>\r\n                            <td>\r\n                              <span className=\"d-flex align-items-center gap-3\">\r\n                                <img src={item?.profile_picture} />\r\n                                <h3 className=\"user-name color-121212 mb-0\">\r\n                                  {item?.name}\r\n                                </h3>\r\n                              </span>\r\n                            </td>\r\n                            <td>\r\n                              <span>\r\n                                <p className=\"designation-user color-121212 mb-0\">\r\n                                  {item?.developer_detail?.professional_title}\r\n                                </p>\r\n                              </span>\r\n                            </td>\r\n                            <td>\r\n                              <span>\r\n                                <p className=\"email-user color-121212 mb-0\">\r\n                                  {item?.email}\r\n                                </p>\r\n                              </span>\r\n                            </td>\r\n                            <td>\r\n                              <span className=\"status-finished\">\r\n                                {item?.status == \"active\"\r\n                                  ? \"Active\"\r\n                                  : \"InActive\"}\r\n                              </span>\r\n                            </td>\r\n                            <td>\r\n                              <div className=\"text-center\">\r\n                                <OverlayTrigger\r\n                                  placement=\"bottom\"\r\n                                  overlay={disabledText}\r\n                                >\r\n                                  <div class=\"form-check form-switch toggle-switch-wrapper d-inline-block ps-0\">\r\n                                    <input\r\n                                      onClick={(e) => {\r\n                                        let data = {\r\n                                          modalName: \"toggle\",\r\n                                          id: item.id,\r\n                                          isTrue: true,\r\n                                          active:\r\n                                            item?.status == \"active\"\r\n                                              ? \"inactive\"\r\n                                              : \"active\",\r\n                                          status:\r\n                                            item?.status == \"active\"\r\n                                              ? \"Disable\"\r\n                                              : \"Enable\",\r\n                                        };\r\n\r\n                                        handleBtnAction(e, data);\r\n                                      }}\r\n                                      class=\"form-check-input toggle-switch-custom shadow-none  cursor-pointer\"\r\n                                      type=\"checkbox\"\r\n                                      role=\"switch\"\r\n                                      checked={item?.status == \"active\"}\r\n                                      id=\"candidate-reminder\"\r\n                                    />\r\n                                  </div>\r\n                                </OverlayTrigger>\r\n                              </div>\r\n                            </td>\r\n                            <td\r\n                              className=\"text-center\"\r\n                              onClick={(e) => {\r\n                                let data = {\r\n                                  modalName: \"delete\",\r\n                                  id: item.id,\r\n                                  isTrue: true,\r\n                                };\r\n                                handleBtnAction(e, data);\r\n                              }}\r\n                            >\r\n                              <Button className=\"arrow-btn danger-arrow mx-auto\">\r\n                                <IoTrash />\r\n                              </Button>\r\n                            </td>\r\n                          </tr>\r\n                        </>\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <td colSpan={10}>\r\n                      {\" \"}\r\n                      <div className=\"simple-no-data\">\r\n                        {\" \"}\r\n                        <NoDataFound />\r\n                      </div>{\" \"}\r\n                    </td>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </Tab.Pane>\r\n        </Tab.Content>\r\n      </Tab.Container>\r\n      <ConfirmationModal\r\n        show={showModal?.isTrue}\r\n        handleClose={handleClose}\r\n        handleAction={handleAction}\r\n        text={`Are you sure you want to ${\r\n          showModal.modalName == \"toggle\" ? showModal?.status : \"Delete\"\r\n        } this developer ?`}\r\n        smallLoader={smallLoader}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default AllDeveloperList;\r\n"],"names":["SeeMore","_ref","setCount","_jsx","Link","to","className","onClick","updateSeeMore","prev","children","AllDeveloperList","_data$developers","_data$developers2","allDevelopersList","screenLoader","useSelector","state","vendorData","smallLoader","adminData","data","dispatch","useDispatch","showModal","setShowModal","useState","modalName","isTrue","selectedFilter","setSelectedFilter","count","devId","setDevId","timerValue","setTimerValue","search","setSearch","navigate","useNavigate","t","useTranslation","useEffect","getDevelopersList","page","disabledText","Tooltip","handleBtnAction","e","stopPropagation","handleFilter","name","filterData","target","value","_jsxs","_Fragment","Tab","Container","defaultActiveKey","Form","Select","onChange","label","map","option","idx","disabled","selected","Control","type","placeholder","clearTimeout","timer","setTimeout","Content","Pane","eventKey","ScreenLoader","developers","length","item","index","_item$developer_detai","handleRowClick","id","getDeveloperDetails","src","profile_picture","developer_detail","professional_title","email","status","OverlayTrigger","placement","overlay","class","active","role","checked","Button","IoTrash","colSpan","NoDataFound","ConfirmationModal","show","handleClose","handleAction","async","preventDefault","user_id","getAccountDisableEnable","getDeleteDeveloper","text"],"sourceRoot":""}
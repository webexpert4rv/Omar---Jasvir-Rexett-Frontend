{"version":3,"file":"static/js/7111.c718a865.chunk.js","mappings":"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","sources":["components/atomic/NoDataFound.jsx","components/common/Guidelines/Guidelines.jsx","components/common/LeaveRequest/ListOfHolidays.jsx","pages/developer/ApplyLeaveSection.jsx","pages/developer/PlanLeave.jsx","pages/views/Modals/EndJob.jsx"],"sourcesContent":["import React from 'react'\r\nimport errorImg from '../../assets/img/warning-icon.gif'\r\nconst NoDataFound = ({data}) => {\r\n  return (\r\n    <div className='no-data-container'>\r\n      <div className='no-data'>\r\n        <img src={errorImg} />{data?data:\"No Data Found\"}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NoDataFound","import React from \"react\";\r\n\r\nconst Guidelines = ({heading ,guideLines}) => {\r\n  return (\r\n    <div>\r\n      <div className=\"helper-text-section\">\r\n        <h3>{heading}</h3>\r\n        <ol className=\"ps-3  mb-0\">\r\n          {guideLines?.map((lines, index) => (\r\n            <li className=\"mb-1\">\r\n              <p key={index}> {lines} </p>\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Guidelines;\r\n","import moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { MONTH_NAME, SELECT_YEAR } from \"../../clients/TimeReporiting/constant\";\r\nimport { TiEdit } from \"react-icons/ti\";\r\nimport { IoCheckmark, IoCloseOutline } from \"react-icons/io5\";\r\nimport ToolTip from \"../Tooltip/ToolTip\";\r\nimport RexettButton from \"../../atomic/RexettButton\";\r\nimport RexettSpinner from \"../../atomic/RexettSpinner\";\r\n\r\nconst ListOfHolidays = ({\r\n  holidayList,\r\n  handleShowEvent,\r\n  handleDelete,\r\n  handleAproveDisapprove,\r\n  approvedLoader,\r\n  selectedIndex,\r\n}) => {\r\n  const [data, setData] = useState();\r\n  const [yearData, setYearData] = useState();\r\n  const [selectedMonth, setSelectedMonth] = useState(\"All\");\r\n  const [selectedYear, setSelectedYear] = useState(\"2024\");\r\n  let role = localStorage.getItem(\"role\");\r\n  console.log(selectedIndex,\"selectedIndex\")\r\n\r\n  console.log(holidayList, \"holidaylist\");\r\n  console.log(data, \"data\");\r\n\r\n  useEffect(() => {\r\n    const yearDetails = holidayList?.filter(\r\n      (values) => moment(values?.date).year() == \"2024\"\r\n    );\r\n    setYearData(yearDetails);\r\n    setSelectedYear(\"2024\");\r\n    setData(yearDetails);\r\n  }, [holidayList]);\r\n\r\n  const FilteredDeveloperData = data?.filter(\r\n    (values) => values?.is_approved_by_client == true\r\n  );\r\n  console.log(FilteredDeveloperData, \"filterData\");\r\n\r\n  const handleYearFilter = (year) => {\r\n    setSelectedYear(year);\r\n    setSelectedMonth(\"All\");\r\n    const yearDetails = holidayList?.filter(\r\n      (values) => moment(values?.date).year() == year\r\n    );\r\n    setYearData(yearDetails);\r\n    setData(yearDetails);\r\n  };\r\n\r\n  const handleMonthFilter = (month) => {\r\n    setSelectedMonth(month);\r\n    if (month !== \"All\") {\r\n      const selectedMonthHolidays = yearData?.filter(\r\n        (values) =>\r\n          moment(values?.date).month() + 1 == moment(month, \"MMMM\").format(\"M\")\r\n      );\r\n      setData(selectedMonthHolidays);\r\n    } else {\r\n      setData(yearData);\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"\">\r\n      <div className=\"card-box border shadow-none\">\r\n        {role === \"client\" ? (\r\n          <div className=\"mb-0\">\r\n            <Button className=\"main-btn font-14\" onClick={handleShowEvent}>\r\n              + Create New Holiday\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div className=\"d-flex justify-content-between align-items-center\">\r\n          <div className=\"skill-filters\">\r\n            {MONTH_NAME.map((month) => (\r\n              <span\r\n                key={month}\r\n                className={selectedMonth === month ? \"active\" : \"\"}\r\n                onClick={() => handleMonthFilter(month)}\r\n              >\r\n                {month}\r\n              </span>\r\n            ))}\r\n          </div>\r\n\r\n          <Form className=\"d-flex gap-2\">\r\n            <Form.Select\r\n              className=\"common-field font-14 w-auto\"\r\n              onChange={(e) => handleYearFilter(e.target.value)}\r\n              value={selectedYear}\r\n            >\r\n              {/* <option>Select Year</option> */}\r\n              {SELECT_YEAR?.map((item, idx) => (\r\n                <option key={idx}>{item}</option>\r\n              ))}\r\n            </Form.Select>\r\n          </Form>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-ui-custom mb-0\">\r\n            <thead>\r\n              <tr>\r\n                <th>Date</th>\r\n                <th>Name</th>\r\n                {/* <th>Type</th> */}\r\n                {role === \"client\" ? <th>Action</th> : \"\"}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data?.length > 0 ? (\r\n                role === \"developer\" ? (\r\n                  FilteredDeveloperData?.map((field, idx) => (\r\n                    <>\r\n                      <tr key={idx}>\r\n                        <td className=\"font-14 align-middle\">\r\n                          <strong>{field?.date}</strong>\r\n                        </td>\r\n                        <td className=\"font-14 align-middle\">\r\n                          {field?.name}\r\n                        </td>\r\n                      </tr>\r\n                    </>\r\n                  ))\r\n                ) : (\r\n                  data?.map((holiday, index) => (\r\n                    <tr key={index}>\r\n                      <td className=\"font-14 align-middle\">\r\n                        <strong>{holiday?.date}</strong>\r\n                      </td>\r\n                      <td className=\"font-14 align-middle\">\r\n                        {holiday?.name}\r\n                        {role === \"client\" && holiday?.added_by === \"client\" ? (\r\n                          <span className=\"associate-text\">\r\n                            <span className=\"associate\">Created</span>\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </td>\r\n                      {/* <td className=\"font-14 align-middle\">\r\n                      {holiday.type}\r\n                    </td> */}\r\n                      <td>\r\n                        {role === \"client\" ? (\r\n                          holiday?.added_by === \"system\" ? (\r\n                            holiday?.is_approved_by_client === true ? (\r\n                              <div>\r\n                                <h6>Approved</h6>\r\n                              </div>\r\n                            ) : (\r\n                              <div>\r\n                                <div className=\"d-flex gap-2\">\r\n                                  <ToolTip text=\"Approve\">\r\n                                    <RexettButton\r\n                                      variant=\"transparent\"\r\n                                      className=\"px-3 arrow-btn primary-arrow font-16 text-decoration-none\"\r\n                                      icon = {selectedIndex == index ? <RexettSpinner/> : <IoCheckmark />}\r\n                                      onClick={() =>\r\n                                        handleAproveDisapprove(\r\n                                          holiday?.id,\r\n                                          \"approve\",\r\n                                          index\r\n                                        )\r\n                                      }\r\n                                    >\r\n                                      \r\n                                    </RexettButton>\r\n                                  </ToolTip>\r\n                                  <ToolTip text=\"Disapprove\">\r\n                                    <Button\r\n                                      variant=\"transparent\"\r\n                                      className=\"px-3 arrow-btn danger-arrow font-16 text-decoration-none\"\r\n                                      onClick={() =>\r\n                                        handleAproveDisapprove(\r\n                                          holiday?.id,\r\n                                          \"disapprove\",\r\n                                          index\r\n                                        )\r\n                                      } \r\n                                    >\r\n                                      <IoCloseOutline />\r\n                                    </Button>\r\n                                  </ToolTip>\r\n                                </div>\r\n                              </div>\r\n                            )\r\n                          ) : (\r\n                            <div className=\"d-flex gap-2\">\r\n                              <ToolTip text=\"Edit\">\r\n                                <Button\r\n                                  variant=\"transparent\"\r\n                                  className=\"px-3 arrow-btn info-arrow font-16 text-decoration-none\"\r\n                                  onClick={() =>\r\n                                    handleShowEvent(holiday?.id, \"edit\")\r\n                                  }\r\n                                >\r\n                                  <TiEdit />\r\n                                </Button>\r\n                              </ToolTip>\r\n                              <ToolTip text=\"Delete\">\r\n                                <Button\r\n                                  variant=\"transparent\"\r\n                                  className=\"px-3 arrow-btn danger-arrow font-16 text-decoration-none\"\r\n                                  onClick={() => handleDelete(holiday?.id)}\r\n                                >\r\n                                  <IoCloseOutline />\r\n                                </Button>\r\n                              </ToolTip>\r\n                            </div>\r\n                          )\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                )\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan=\"3\" className=\"font-14\">\r\n                    <p className=\"text-danger mb-0\">\r\n                      No holidays in this month\r\n                    </p>\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ListOfHolidays;\r\n","import { Row, Col, Form } from 'react-bootstrap';\r\nimport RexettButton from \"../../components/atomic/RexettButton\";\r\nimport { LEAVE_TYPE } from \"../../components/clients/TimeReporiting/constant\";\r\nimport React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { DateRangePicker } from \"react-date-range\";; // Adjust import according to your date picker library\r\n\r\n\r\nconst ApplyLeaveSection=({ allContracts, handleRange, selectionRange, onSubmit, smallLoader }) =>{\r\n  const { register,handleSubmit, formState: { errors } } = useForm({});\r\n  const { t } = useTranslation();\r\n  const [isEdit, setIsEdit] = useState({\r\n    status: false,\r\n    leaveId: '',\r\n  });\r\n  const today = new Date();\r\n\r\n  return (\r\n    <Row className=\"gx-4\">\r\n      <Col lg={7}>\r\n        <div className=\"leave-calendar h-100\">\r\n          <DateRangePicker\r\n            ranges={[selectionRange]}\r\n            onChange={handleRange}\r\n            minDate={today}\r\n          />\r\n        </div>\r\n      </Col>\r\n      <Col lg={5}>\r\n        <div className=\"plan-leave-wrapper\">\r\n          <h3 className=\"section-head border-0 mb-3\">Apply Leave</h3>\r\n          <form onSubmit={handleSubmit(onSubmit)} noValidate>\r\n            <div className=\"mb-4\">\r\n              <Form.Label className=\"mb-2 font-14\">Select Client</Form.Label>\r\n              <Form.Select\r\n                className=\"common-field font-14 mb-4\"\r\n                {...register(\"client_name\", {\r\n                  required: t(\"clientNameRequired\"),\r\n                })}\r\n                defaultValue=\"\"\r\n              >\r\n                <option value=\"\" disabled>\r\n                  Select client\r\n                </option>\r\n                {allContracts?.map((item, idx) => (\r\n                  <option key={idx} value={item?.id}>\r\n                    {item?.client?.name}\r\n                  </option>\r\n                ))}\r\n              </Form.Select>\r\n              {errors.client_name && <span className=\"error-message\">{errors.client_name.message}</span>}\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <Form.Label className=\"mb-2 font-14\">Leave Type</Form.Label>\r\n              <Form.Select\r\n                className=\"common-field font-10 mb-4\"\r\n                {...register(\"leave_type\", {\r\n                  required: t(\"leaveTypeRequired\"),\r\n                })}\r\n                defaultValue=\"\"\r\n              >\r\n                <option value=\"\" disabled>\r\n                  Select leave type\r\n                </option>\r\n                {LEAVE_TYPE.map((item, idx) => (\r\n                  <option key={idx} value={item.value}>\r\n                    {item.key}\r\n                  </option>\r\n                ))}\r\n              </Form.Select>\r\n              {errors.leave_type && <span className=\"error-message\">{errors.leave_type.message}</span>}\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <Form.Label className=\"mb-2 font-14\">Reason</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows=\"3\"\r\n                className=\"common-field font-14\"\r\n                placeholder=\"Enter Reason\"\r\n                {...register(\"reason\", {\r\n                  required: {\r\n                    value: true,\r\n                    message: t(\"reasonRequired\"),\r\n                  },\r\n                })}\r\n              />\r\n              {errors.reason && <span className=\"error-message\">{errors.reason.message}</span>}\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <RexettButton\r\n                type=\"submit\"\r\n                text={t(\"Submit\")}\r\n                className=\"main-btn font-14 px-4 py-2\"\r\n                variant=\"transparent\"\r\n                isLoading={smallLoader}\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default ApplyLeaveSection;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Form, Button, Nav, Tab } from \"react-bootstrap\";\r\nimport { DateRangePicker } from \"react-date-range\";\r\nimport { IoClose } from \"react-icons/io5\";\r\nimport { MdModeEditOutline } from \"react-icons/md\";\r\nimport companyLogo from \"../../assets/img/amazon.png\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Calendar from \"react-calendar\";\r\nimport {\r\n  applyLeave,\r\n  getAllContracts,\r\n  getLeaveHistory,\r\n  getCancelLeave,\r\n  getUpdateLeave,\r\n  getHolidaysList,\r\n} from \"../../redux/slices/developerDataSlice\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport moment from \"moment\";\r\nimport RexettButton from \"../../components/atomic/RexettButton\";\r\nimport { HOLIDAY_GUIDE_LINES, generateLeave } from \"../../components/clients/TimeReporiting/constant\";\r\nimport { LEAVE_TYPE } from \"../../components/clients/TimeReporiting/constant\";\r\nimport RejectModal from \"../views/Modals/EndJob\";\r\nimport ToolTip from \"../../components/common/Tooltip/ToolTip\";\r\nimport NoDataFound from \"../../components/atomic/NoDataFound\";\r\nimport ScreenLoader from \"../../components/atomic/ScreenLoader\";\r\nimport { IoCheckmark, IoCloseOutline } from \"react-icons/io5\";\r\nimport { TiEdit } from \"react-icons/ti\";\r\nimport ListOfHolidays from \"../../components/common/LeaveRequest/ListOfHolidays\";\r\nimport ApplyLeaveSection from \"./ApplyLeaveSection\";\r\nimport Guidelines from \"../../components/common/Guidelines/Guidelines\";\r\n\r\nconst LeavePlan = () => {\r\n  const [selectionRange, setSelectionRange] = useState({\r\n    startDate: new Date(),\r\n    endDate: new Date(),\r\n    key: \"selection\",\r\n  });\r\n  const { screenLoader, leaveDetails, allContracts, holidayList ,smallLoader } = useSelector(\r\n    (state) => state.developerData\r\n  );\r\n\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    setValue,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({});\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n  const [currentTab, setCurrentTab] = useState(\"first\");\r\n  const [isEdit, setIsEdit] = useState({\r\n    status: false,\r\n    leaveId: \"\",\r\n  });\r\n  const today = new Date();\r\n  const start_date = moment(selectionRange?.startDate).format(\"MM-DD-YYYY\");\r\n  const end_date = moment(selectionRange?.endDate).format(\"MM-DD-YYYY\");\r\n  const user_id = localStorage.getItem(\"userId\");\r\n\r\n  useEffect(() => {\r\n    dispatch(getHolidaysList());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let data;\r\n    if (currentTab === \"first\") {\r\n      data = {\r\n        approval_status: \"Under Approval\",\r\n      };\r\n    }\r\n    dispatch(getLeaveHistory(user_id, data));\r\n    dispatch(getAllContracts());\r\n  }, [currentTab]);\r\n\r\n  const handleSelect = (selectedTab) => {\r\n    setCurrentTab(selectedTab);\r\n  };\r\n  const handleRange = (ranges) => {\r\n    setSelectionRange(ranges.selection);\r\n  };\r\n\r\n  const handleEditLeave = (id) => {\r\n    const selectedLeave = leaveDetails.find((item) => item.id == id);\r\n    if (selectedLeave) {\r\n      setSelectionRange({\r\n        startDate: new Date(selectedLeave.start_date),\r\n        endDate: new Date(selectedLeave.end_date),\r\n        key: \"selection\",\r\n      });\r\n\r\n      setIsEdit({ status: true, leaveId: id });\r\n      setValue(\"client_name\", selectedLeave?.contract_id);\r\n      setValue(\"leave_type\", selectedLeave?.type);\r\n      setValue(\"reason\", selectedLeave?.reason_for_leave);\r\n    }\r\n  };\r\n  const handleCancelLeave = async (id) => {\r\n    let data = {\r\n      withdrawal_reason: \"reason\",\r\n    };\r\n    await dispatch(getCancelLeave(id, data));\r\n    let payload = {\r\n      approval_status: \"Under Approval\",\r\n    };\r\n    dispatch(getLeaveHistory(user_id, payload));\r\n  };\r\n\r\n  const onSubmit = async (values) => {\r\n    let data = {\r\n      contract_id: +values.client_name,\r\n      start_date: start_date,\r\n      end_date: end_date,\r\n      start_time: null,\r\n      end_time: null,\r\n      type: values.leave_type,\r\n      reason_for_leave: values.reason,\r\n  }\r\n\r\n    if (isEdit?.status === true) {\r\n      await dispatch(getUpdateLeave(isEdit?.leaveId, data));\r\n    } else {\r\n      await dispatch(applyLeave(data));\r\n    }\r\n    let payload = {\r\n      approval_status: \"Under Approval\",\r\n    };\r\n    dispatch(getLeaveHistory(user_id, payload));\r\n    setIsEdit({ status: false, leaveId: \"\" });\r\n    reset()\r\n\r\n  };\r\n\r\n  const listHolidays = (data) => {\r\n    const holidays = data?.map((value) => new Date(value?.date));\r\n    return holidays;\r\n  };\r\n\r\n  const [value, onChange] = useState(new Date());\r\n  // Define the dates you want to mark\r\n  const markedDates = listHolidays(holidayList);\r\n\r\n  // Function to add custom content to tile\r\n  const tileContent = ({ date, view }) => {\r\n    if (\r\n      view === \"month\" &&\r\n      markedDates.find((d) => d.toDateString() === date.toDateString())\r\n    ) {\r\n      return <div className=\"dot\"></div> ;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {screenLoader ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <Tab.Container defaultActiveKey=\"plan-leave\">\r\n          <Nav variant=\"pills\" className=\"mb-4 application-pills\">\r\n            <Nav.Item className=\"application-item\">\r\n              <Nav.Link className=\"application-link\" eventKey=\"plan-leave\">\r\n                Plan Leave\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item className=\"application-item\">\r\n              <Nav.Link className=\"application-link\" eventKey=\"public-holiday\">\r\n                Public Holiday\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content>\r\n            <Tab.Pane eventKey=\"plan-leave\">\r\n              <Tab.Container\r\n                id=\"left-tabs-example\"\r\n                defaultActiveKey=\"first\"\r\n                onSelect={handleSelect}\r\n              >\r\n                <Nav variant=\"pills\" className=\"mb-4 application-pills\">\r\n                  <Nav.Item className=\"application-item\">\r\n                    <Nav.Link className=\"application-link\" eventKey=\"first\">\r\n                      Apply Leave\r\n                    </Nav.Link>\r\n                  </Nav.Item>\r\n                  <Nav.Item className=\"application-item\">\r\n                    <Nav.Link className=\"application-link\" eventKey=\"second\">\r\n                      Leave History\r\n                    </Nav.Link>\r\n                  </Nav.Item>\r\n                </Nav>\r\n\r\n                <Tab.Content>\r\n                  <Tab.Pane eventKey=\"first\">\r\n                    <div className=\"card-box mb-4\">\r\n                      <h3 className=\"section-head border-0 mb-2\">\r\n                        Applied Leaves\r\n                      </h3>\r\n                      <Row>\r\n                        {leaveDetails.length > 0 ? (\r\n                          leaveDetails?.map((field, idx) => (\r\n                            <Col xxl={3} xl={6} className=\"mb-xxl-0 mb-3\">\r\n                              <div className=\"leave-wrapper-box\">\r\n                                <div>\r\n                                  <h4 className=\"project-heading\">{}</h4>\r\n                                  <h4 className=\"leave-type-heading\">\r\n                                    {generateLeave(field?.type)}\r\n                                  </h4>\r\n                                  <div>\r\n                                    <p className=\"leave-date\">\r\n                                      {\" \"}\r\n                                      {moment(field?.start_date).format(\r\n                                        \"MM-DD-YYYY\"\r\n                                      )}{\" \"}\r\n                                      to{\" \"}\r\n                                      {moment(field?.end_date).format(\r\n                                        \"MM-DD-YYYY\"\r\n                                      )}\r\n                                    </p>\r\n                                  </div>\r\n                                  <p className=\"status-finished mb-0\">\r\n                                    {field?.approval_status}\r\n                                  </p>\r\n                                </div>\r\n                                <div className=\"d-flex gap-3\">\r\n                                  <ToolTip text=\"Cancel Leave\">\r\n                                    <Button\r\n                                      className=\"px-3 mb-2 arrow-btn danger-arrow font-16 text-decoration-none\"\r\n                                      onClick={() =>\r\n                                        handleCancelLeave(field?.id)\r\n                                      }\r\n                                    >\r\n                                      <IoClose />\r\n                                    </Button>\r\n                                  </ToolTip>\r\n                                  <ToolTip text=\"Edit Leave\">\r\n                                    <Button\r\n                                      className=\"px-3 mb-2 arrow-btn info-arrow font-16 text-decoration-none\"\r\n                                      onClick={() => handleEditLeave(field?.id)}\r\n                                    >\r\n                                      <MdModeEditOutline />\r\n                                    </Button>\r\n                                  </ToolTip>\r\n                                </div>\r\n                              </div>\r\n                            </Col>\r\n                          ))\r\n                        ) : (\r\n                          <p className=\"text-muted font-14 mb-0\">\r\n                            No Leave Applied\r\n                          </p>\r\n                        )}\r\n                      </Row>\r\n                    </div>\r\n                      <ApplyLeaveSection allContracts={allContracts} handleRange={handleRange} selectionRange ={selectionRange} handleSubmit = {handleSubmit} onSubmit={onSubmit} smallLoader = {smallLoader}/>\r\n                  </Tab.Pane>\r\n                  <Tab.Pane eventKey=\"second\">\r\n                    <div className=\"table-responsive\">\r\n                      <table className=\"table time-table table-bordered table-ui-custom\">\r\n                        <thead>\r\n                          <th className=\"time-table-head text-start\">\r\n                            Leave Type\r\n                          </th>\r\n                          <th className=\"time-table-head text-start\">\r\n                            Leave Date\r\n                          </th>\r\n                          <th className=\"time-table-head text-start\">Reason</th>\r\n                          <th className=\"time-table-head text-start\">\r\n                            Project\r\n                          </th>\r\n                          <th className=\"time-table-head text-start\">\r\n                            Client Name\r\n                          </th>\r\n                          <th className=\"time-table-head text-start\">\r\n                            Leave Status\r\n                          </th>\r\n                        </thead>\r\n                        <tbody>\r\n                          {leaveDetails?.map((item, idx) => (\r\n                            <>\r\n                              <tr>\r\n                                <td className=\"time-table-data text-start\">\r\n                                  <h4 className=\"leave-type-heading mb-0 white-nowrap\">\r\n                                    {generateLeave(item?.type)}\r\n                                  </h4>\r\n                                </td>\r\n                                <td className=\"time-table-data text-start\">\r\n                                  <p className=\"leave-date white-nowrap\">\r\n                                    {moment(item.start_date).format(\r\n                                      \"MM-DD-YYYY\"\r\n                                    )}{\" \"}\r\n                                    to{\" \"}\r\n                                    {moment(item.end_date).format(\"MM-DD-YYYY\")}\r\n                                  </p>\r\n                                </td>\r\n                                <td className=\"time-table-data text-start reason-data\">\r\n                                  <p className=\"font-14 mb-0\">\r\n                                    {item.reason_for_leave}\r\n                                  </p>\r\n                                </td>\r\n                                <td className=\"time-table-data text-start white-nowrap\">\r\n                                  AI Bot Project\r\n                                </td>\r\n                                <td className=\"time-table-data text-start\">\r\n                                  <div className=\"d-flex align-items-center gap-2\">\r\n                                    {/* <div className=\"user-imgbx application-imgbx mx-0 mb-0\">\r\n                                        <img src={companyLogo} className=\"user-img\" />\r\n                                      </div> */}\r\n                                    {item?.contract?.client?.name}\r\n                                  </div>\r\n                                </td>\r\n                                <td className=\"time-table-data text-start\">\r\n                                  <span className=\"status-progress\">\r\n                                    {item.approval_status}\r\n                                  </span>\r\n                                </td>\r\n                              </tr>\r\n                            </>\r\n                          ))}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </Tab.Pane>\r\n                </Tab.Content>\r\n              </Tab.Container>\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"public-holiday\">\r\n              <ListOfHolidays\r\n                onChange={onChange}\r\n                value={value}\r\n                tileContent={tileContent}\r\n                holidayList={holidayList}\r\n              />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n        </Tab.Container>\r\n      )}\r\n      <Guidelines heading={\"Guiding You Through: Helpful Text to Apply Leaves\"} guideLines={HOLIDAY_GUIDE_LINES}/>\r\n    </>\r\n  );\r\n};\r\nexport default LeavePlan;\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport RexettSpinner from \"../../../components/atomic/RexettSpinner\";\r\nimport { useStateManager } from \"react-select\";\r\nconst RejectModal = ({\r\n  show,\r\n  handleClose,\r\n  handleClick,\r\n  smallLoader,\r\n  header,\r\n  feedbacks,\r\n  submit,\r\n}) => {\r\n  const [feedback, setFeedback] = useState(\"\");\r\n  const handleFeedback = (e) => {\r\n    setFeedback(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={handleClose}\r\n      centered\r\n      className=\"custom-modal\"\r\n      animation\r\n    >\r\n      <Modal.Header closeButton className=\"border-0 pb-3\"></Modal.Header>\r\n\r\n      <Modal.Body>\r\n        <h3 className=\"popup-heading\">{header} </h3>\r\n        <Form>\r\n          <Form.Group className=\"mb-4\">\r\n            <Form.Label>{feedbacks}</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows=\"6\"\r\n              placeholder={\r\n                feedbacks === \"Reasons\"\r\n                  ? \"Enter your reason, why you want to reject the leave ?\"\r\n                  : \"Enter your feedback, why you want to reject?\"\r\n              }\r\n              onChange={handleFeedback}\r\n              required\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <div className=\"text-center\">\r\n            <Button\r\n              variant=\"transparent\"\r\n              className=\"main-btn px-4\"\r\n              onClick={(e) => {\r\n                let data;\r\n                if (feedbacks === \"Reasons\") {\r\n                  data = feedback\r\n                } else {\r\n                  data = {\r\n                    status: \"ended\",\r\n                    end_reason: feedback,\r\n                  };\r\n                }\r\n                handleClick(e, data);\r\n              }}\r\n              disabled={feedback?.length === 0}\r\n            >\r\n              {smallLoader ? <RexettSpinner /> : submit}{\" \"}\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\nexport default RejectModal;\r\n"],"names":["_ref","data","_jsx","className","children","_jsxs","src","errorImg","heading","guideLines","map","lines","index","holidayList","handleShowEvent","handleDelete","handleAproveDisapprove","approvedLoader","selectedIndex","setData","useState","yearData","setYearData","selectedMonth","setSelectedMonth","selectedYear","setSelectedYear","role","localStorage","getItem","console","log","useEffect","yearDetails","filter","values","moment","date","year","FilteredDeveloperData","is_approved_by_client","Button","onClick","MONTH_NAME","month","selectedMonthHolidays","format","handleMonthFilter","Form","Select","onChange","e","handleYearFilter","target","value","SELECT_YEAR","item","idx","length","field","_Fragment","name","holiday","added_by","ToolTip","text","RexettButton","variant","icon","RexettSpinner","IoCheckmark","id","IoCloseOutline","TiEdit","colSpan","allContracts","handleRange","selectionRange","onSubmit","smallLoader","register","handleSubmit","formState","errors","useForm","t","useTranslation","isEdit","setIsEdit","status","leaveId","today","Date","Row","Col","lg","DateRangePicker","ranges","minDate","noValidate","Label","required","defaultValue","disabled","_item$client","client","client_name","message","LEAVE_TYPE","key","leave_type","Control","as","rows","placeholder","reason","type","isLoading","LeavePlan","setSelectionRange","startDate","endDate","screenLoader","leaveDetails","useSelector","state","developerData","setValue","reset","dispatch","useDispatch","currentTab","setCurrentTab","start_date","end_date","user_id","getHolidaysList","approval_status","getLeaveHistory","getAllContracts","markedDates","holidays","listHolidays","ScreenLoader","Tab","Container","defaultActiveKey","Nav","Item","Link","eventKey","Content","Pane","onSelect","selectedTab","xxl","xl","generateLeave","async","getCancelLeave","withdrawal_reason","handleCancelLeave","IoClose","selectedLeave","find","contract_id","reason_for_leave","handleEditLeave","MdModeEditOutline","ApplyLeaveSection","selection","start_time","end_time","getUpdateLeave","applyLeave","_item$contract","_item$contract$client","contract","ListOfHolidays","tileContent","view","d","toDateString","Guidelines","HOLIDAY_GUIDE_LINES","show","handleClose","handleClick","header","feedbacks","submit","feedback","setFeedback","Modal","onHide","centered","animation","Header","closeButton","Body","Group","end_reason"],"sourceRoot":""}
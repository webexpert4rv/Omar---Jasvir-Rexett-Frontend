{"version":3,"file":"static/js/562.7474bfe1.chunk.js","mappings":"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","sources":["pages/views/Modals/EditTimeModal.jsx","pages/views/TimeReporting.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport RexettButton from \"../../../components/atomic/RexettButton\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { editTimeReportOfDev } from \"../../../redux/slices/clientDataSlice\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst EditTimeModal = ({ show, handleClose, data ,smallLoader}) => {\r\n    const { t } = useTranslation()\r\n    const dispatch=useDispatch()\r\n    const {\r\n        register,\r\n        setValue,\r\n        handleSubmit,\r\n        formState: { errors, isDirty, isValid, isSubmitting },\r\n    } = useForm({});\r\n\r\n\r\n    const onSubmit = (value) => {\r\n        dispatch(editTimeReportOfDev(value,()=>{\r\n            handleClose()\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <Modal show={show} onHide={handleClose} className=\"custom-modal\" centered animation>\r\n            <Modal.Header closeButton className=\"border-0 pb-3 shadow-none\">\r\n                {/* <Modal.Title>Time Reports</Modal.Title> */}\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <h3 className=\"popup-heading\">{t(\"timeReports\")}</h3>\r\n                <form onSubmit={handleSubmit(onSubmit)} noValidate>\r\n                    <div>\r\n                        <Form.Group className=\"mb-4\">\r\n                            {/* <Form.Label>Select Developer</Form.Label> */}\r\n                            <Form.Select\r\n                                {...register(\"contract_id\", { required: \"Please select a developer\" })}\r\n                            >\r\n                                <option value=\"\" selected disabled>{t(\"selectDeveloper\")}</option>\r\n                                {\r\n                                    data?.map((item) => {\r\n                                        return (\r\n                                            <React.Fragment key={item?.contractDetails?.contract_id}>\r\n                                                <option value={item?.contractDetails?.contract_id}>{item?.contractDetails?.user_details?.name}</option>\r\n                                            </React.Fragment>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n                            </Form.Select>\r\n                            {errors.contract_id && (\r\n                                <p className=\"error-message\">{errors.contract_id.message}</p>\r\n                            )}\r\n                        </Form.Group>\r\n                    </div>\r\n                    <Form.Group className=\"mb-4\">\r\n                        <Form.Label className=\"font-14\">Having issue in time report?</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows=\"6\" placeholder=\"Enter your reason, why do you request for edit time request?\"\r\n                            name=\"message\"\r\n                            {...register(\"message\", {\r\n                                required: {\r\n                                    value: true,\r\n                                    message: \"Message is required\",\r\n                                },\r\n                            })}\r\n                        ></Form.Control>\r\n                        <p className=\"error-message\">\r\n                            {errors.message?.message}\r\n                        </p>\r\n                    </Form.Group>\r\n                    <div className=\"text-center\">\r\n                        <RexettButton\r\n                            type=\"submit\"\r\n                            text=\"Send Request\"\r\n                            className=\"main-btn px-4 font-14 fw-semibold\"\r\n                            variant=\"transparent\"\r\n                            isLoading={smallLoader}\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\nexport default EditTimeModal;","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport EditTimeModal from \"./Modals/EditTimeModal\";\r\nimport RexettTimeReporting from \"../../components/clients/TimeReporiting/RexettTimeReporting\";\r\nimport { timeReporting } from \"../../redux/slices/clientDataSlice\";\r\nconst TimeReporting = () => {\r\n    const dispatch = useDispatch()\r\n    const [selectedPeriod, setSelectedPeriod] = useState(\"weekly\");\r\n    const [selectedFilter, setSelectedFilter] = useState({});\r\n    const [showEditTimeModal, setShowEditTimeModal] = useState(false);\r\n    const { timeReportingData, smallLoader } = useSelector(state => state.clientData)\r\n    \r\n    useEffect(() => {\r\n        let filterData = {\r\n            ...selectedFilter,\r\n            filter: selectedPeriod\r\n        }\r\n        dispatch(timeReporting(filterData,\"client\"))\r\n    }, [dispatch])\r\n   \r\n    const handleShowEditTimeModal = () => {\r\n        setShowEditTimeModal(true);\r\n    };\r\n\r\n    const handleCloseEditTimeModal = () => {\r\n        setShowEditTimeModal(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <RexettTimeReporting  timeReportingData={timeReportingData} handleShowModal={handleShowEditTimeModal} role=\"client\"/>\r\n            <EditTimeModal show={showEditTimeModal} handleClose={handleCloseEditTimeModal} data={timeReportingData} smallLoader={smallLoader} />\r\n        </>\r\n    )\r\n}\r\nexport default TimeReporting;"],"names":["_ref","_errors$message","show","handleClose","data","smallLoader","t","useTranslation","dispatch","useDispatch","register","setValue","handleSubmit","formState","errors","isDirty","isValid","isSubmitting","useForm","_jsxs","Modal","onHide","className","centered","animation","children","_jsx","Header","closeButton","Body","onSubmit","value","editTimeReportOfDev","noValidate","Form","Group","Select","required","selected","disabled","map","item","_item$contractDetails","_item$contractDetails2","_item$contractDetails3","_item$contractDetails4","React","contractDetails","contract_id","user_details","name","message","Label","Control","as","rows","placeholder","RexettButton","type","text","variant","isLoading","TimeReporting","selectedPeriod","setSelectedPeriod","useState","selectedFilter","setSelectedFilter","showEditTimeModal","setShowEditTimeModal","timeReportingData","useSelector","state","clientData","useEffect","filterData","filter","timeReporting","_Fragment","RexettTimeReporting","handleShowModal","handleShowEditTimeModal","role","EditTimeModal","handleCloseEditTimeModal"],"sourceRoot":""}
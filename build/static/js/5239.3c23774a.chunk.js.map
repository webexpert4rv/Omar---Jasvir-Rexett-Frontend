{"version":3,"file":"static/js/5239.3c23774a.chunk.js","mappings":"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","sources":["components/atomic/NoDataFound.jsx","pages/admin/Modals/UploadInvoice.jsx","pages/admin/AdminTimeReporting.jsx","pages/admin/Modals/EditTimeReportModal.jsx"],"sourcesContent":["import React from 'react'\r\nimport errorImg from '../../assets/img/warning-icon.gif'\r\nconst NoDataFound = ({data}) => {\r\n  return (\r\n    <div className='no-data-container'>\r\n      <div className='no-data'>\r\n        <img src={errorImg} />{data?data:\"No Data Found\"}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NoDataFound","import React, { useState } from \"react\";\r\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { createNewFolderAndFile, filePreassignedUrlGenerate } from \"../../../redux/slices/clientDataSlice\";\r\nimport RexettButton from \"../../../components/atomic/RexettButton\";\r\nimport { MdPictureAsPdf } from \"react-icons/md\";\r\nconst UploadInvoice = ({ show, handleClose,contractId ,role}) => {\r\n    const [selectedFile, setSelectedFile] = useState(null)\r\n    const dispatch = useDispatch()\r\n    const { smallLoader } = useSelector(state => state.clientData);\r\n    const {\r\n        register,\r\n        setValue,\r\n        handleSubmit,\r\n        formState: { errors, isDirty, isValid, isSubmitting },\r\n    } = useForm({});\r\n\r\n    const onSubmit = (values) => {\r\n        console.log(values?.file?.type, \"values\");\r\n    \r\n       \r\n         if (values.category === \"3\" && values.file_name[0].type !== \"application/pdf\") {\r\n            alert(\"Only PDF files are allowed for Invoices category.\");\r\n            return; \r\n        }\r\n    \r\n        let fileData = new FormData();\r\n        fileData.append(\"file\", selectedFile);\r\n    \r\n        dispatch(filePreassignedUrlGenerate(fileData, (url) => {\r\n            let data = {\r\n                \"contract_id\": contractId,\r\n                \"file_type\": 0,\r\n                \"parent_id\": 0,\r\n                \"type\": values.category,\r\n                \"s3_path\": url,\r\n                \"file_extension\": \"pdf\" \r\n            };\r\n            dispatch(createNewFolderAndFile(data, () => {\r\n                handleClose();\r\n            }));\r\n        }));\r\n    };\r\n    return (\r\n        <Modal show={show} onHide={handleClose} centered animation size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Upload File</Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <form onSubmit={handleSubmit(onSubmit)} noValidate>\r\n                    <div className=\"experience-container\">\r\n                        <Row>\r\n                            <Col md=\"12\">\r\n                                <Form.Group className=\"mb-4\">\r\n                                    <Form.Label>Select Category</Form.Label>\r\n                                   { role ===\"admin\" ?  <Form.Select\r\n                                        {...register(\"category\", { required: \"Please select a Category\" })}\r\n                                    >\r\n                                        <option value=\"\" selected disabled>Select Category</option>\r\n                                        <option value=\"3\">Invoices</option>\r\n                                    </Form.Select> : <Form.Select\r\n                                        {...register(\"category\", { required: \"Please select a Category\" })}\r\n                                    >\r\n                                        <option value=\"\" selected disabled>Select Category</option>\r\n                                        <option value=\"3\">Invoices</option>\r\n                                        <option value=\"1\">Contracts</option>\r\n                                        <option value=\"2\">CV</option>\r\n                                        <option value=\"4\">Others</option>\r\n                                    </Form.Select>}\r\n                                    <Form.Control type=\"file\" className=\"d-none\" id=\"upload-file\"\r\n                                        name=\"file_name\"\r\n                                        {...register(\"file_name\", {\r\n                                            onChange: (e) => setSelectedFile(e.target.files[0]),\r\n                                            required: {\r\n                                                value: true,\r\n                                            },\r\n                                        })}\r\n                                    />\r\n                                    <Form.Label htmlFor=\"upload-file\" className=\"upload-file-label\">Upload File</Form.Label>\r\n                                </Form.Group>\r\n                                {selectedFile ? <div>Selected File:<span className=\"fs-6\">{selectedFile?.name}</span></div> : \"\"}\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                        <RexettButton\r\n                            type=\"submit\"\r\n                            text=\"Create\"\r\n                            className=\"main-btn px-4\"\r\n                            variant=\"transparent\"\r\n                            disabled={smallLoader}\r\n                            isLoading={smallLoader}\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\nexport default UploadInvoice;","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { HiUpload } from \"react-icons/hi\";\r\nimport EditTimeReport from \"./Modals/EditTimeReportModal\";\r\nimport UploadInvoice from \"./Modals/UploadInvoice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { adminTimeReporting } from \"../../redux/slices/adminDataSlice\";\r\nimport ScreenLoader from \"../../components/atomic/ScreenLoader\";\r\nimport { getClientList } from \"../../redux/slices/vendorDataSlice\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { IoSearch } from \"react-icons/io5\";\r\nimport NoDataFound from \"../../components/atomic/NoDataFound\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst AdminTimeReporting = () => {\r\n    const dispatch = useDispatch()\r\n    const { adminTimeReportingList, screenLoader, adminClientList } = useSelector(state => state.adminData)\r\n    const { clientList } = useSelector(state => state.vendorData);\r\n    const [contractId, setContractID] = useState(null);\r\n    const [showEditTimeModal, setShowEditTimeModal] = useState(false);\r\n    const [developerData, setDeveloperData] = useState([])\r\n    const { t } = useTranslation()\r\n    const navigate=useNavigate()\r\n\r\n    // useEffect(() => {\r\n    //     let newContacts = [...adminTimeReportingList?.raisedByDeveloperVendor];\r\n    //     let d = newContacts.map((item, index) => {\r\n    //         return {\r\n    //             ...item,\r\n    //             newData: item.contracts[index] ? item.contracts[index] : item.contracts[0]\r\n    //         };\r\n    //     });\r\n\r\n    //     setDeveloperData(d)\r\n\r\n    // }, [adminTimeReportingList])\r\n\r\n\r\n    // useEffect(()=>{\r\n    //     dispatch(getClientList())\r\n    //      },[])\r\n\r\n\r\n    const handleShowEditTimeModal = () => {\r\n        setShowEditTimeModal(true);\r\n    };\r\n    const handleCloseEditTimeModal = () => {\r\n        setShowEditTimeModal(false);\r\n    };\r\n\r\n    const [showUploadInvoice, setShowUploadInvoice] = useState(false);\r\n    const handleShowUploadInvoice = (id) => {\r\n        setShowUploadInvoice(true);\r\n        setContractID(id)\r\n    };\r\n\r\n    const handleCloseUploadInvoice = () => {\r\n        setShowUploadInvoice(false);\r\n    };\r\n    useEffect(() => {\r\n        dispatch(adminTimeReporting())\r\n    }, [])\r\n\r\n    const contractName = (data) => {\r\n        let devName = data.map((item) => {\r\n            return { dev: item?.contractDetails?.developer.name }\r\n        })\r\n        return devName\r\n    }\r\n\r\n    const handleDeveloper = (e, inx) => {\r\n        let newInx = e.target.value\r\n        let newDev = [...developerData]\r\n        newDev[inx].newData = newDev[inx].contracts[newInx]\r\n        setDeveloperData(newDev)\r\n    }\r\n\r\n    const handleClientClick = (e) => {\r\n        dispatch(adminTimeReporting(e))\r\n    }\r\n    \r\n    const redirectToTimeReporting = (clientId) => {\r\n        navigate(`/admin-time-reporting-detail/${clientId}`)\r\n    }\r\n    return (\r\n        <>\r\n            <section>\r\n                <div className=\"filter-section mb-4\">\r\n                    <Form>\r\n                        <div className=\"d-md-flex gap-3 justify-content-between align-items-end\">\r\n                            <div className=\"mb-md-0 mb-3\">\r\n                                {/* <div>\r\n                                    <Form.Select className=\"filter-select shadow-none\" onClick={(e) => handleClientClick(e.target.value)}>\r\n                                        <option value=\"\" selected disabled>{t(\"selectClients\")}</option>\r\n                                        {\r\n                                            adminClientList?.map((item, index) => {\r\n                                                return (<>\r\n                                                    <option key={index} value={item.id}  >{item?.name}</option>\r\n                                                </>)\r\n                                            })\r\n                                        }\r\n                                    </Form.Select>\r\n                                </div> */}\r\n                            </div>\r\n                            <div className=\"d-flex align-items-center gap-3\">\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    className=\"common-field font-14 shadow-none\"\r\n                                    placeholder=\"Enter Keyword...\"\r\n                                />\r\n                                <Button variant=\"transparent\" className=\"main-btn px-3 search-btn\">\r\n                                    <IoSearch />\r\n                                </Button>\r\n                            </div>\r\n                            {/* <div>\r\n                                <Button className=\"main-btn px-5\" onClick={handleShowEditTimeModal}>{t(\"editTimeReport\")}</Button>\r\n                            </div> */}\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n                <div>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table time-table table-bordered table-ui-custom\">\r\n                            <thead>\r\n                                <th className=\"time-table-head\">\r\n                                    {t(\"clientName\")}\r\n                                </th>\r\n                                <th className=\"time-table-head\">\r\n                                    {t(\"totalHiredDevelopers\")}\r\n                                </th>\r\n                                <th className=\"time-table-head\">\r\n                                    {t(\"totalProjects\")}\r\n                                </th>\r\n                                <th className=\"time-table-head\">\r\n                                    {t(\"totalVendorDev\")}\r\n                                </th>\r\n                                <th className=\"time-table-head\">\r\n                                    {t(\"totalIndivisualDev\")}\r\n\r\n                                </th>\r\n                                {/* <th className=\"time-table-head\">\r\n                                    {t(\"contract\")}\r\n                                </th> */}\r\n                            </thead>\r\n                            <tbody>\r\n                                {screenLoader ? <ScreenLoader /> : <>\r\n                                    {adminTimeReportingList?.length > 0 ?\r\n                                        adminTimeReportingList?.map(({client_name,client_id,total_hired_developers,total_individual_dev,total_projects,total_vendors_dev,contracts}, index) => {\r\n                                            return (\r\n                                                <Fragment key={index}>\r\n                                                    <tr key={index} className=\"row-hover\" onClick={()=>{redirectToTimeReporting(client_id)}}>\r\n                                                        <td className=\"time-table-data\">{client_name}</td>\r\n                                                        <td className=\"time-table-data\">{total_hired_developers}</td>\r\n                                                        <td className=\"time-table-data\">{total_projects}</td>\r\n                                                        <td className=\"time-table-data\">{total_vendors_dev}</td>\r\n                                                        <td className=\"time-table-data\">{total_individual_dev}</td>\r\n                                                        {/* <td className=\"time-table-data\">{}</td> */}\r\n                                                    </tr>\r\n                                                </Fragment>\r\n                                            )\r\n                                        })\r\n                                        :<td colSpan={10}> <div className=\"simple-no-data\">  <NoDataFound/></div>  </td>}\r\n                                </>}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div className=\"helper-text-section\">\r\n                        <h3>Guiding You Through: Helpful Text to Navigate Time Reporting</h3>\r\n                        <p>Admin can effortlessly review daily time sheets and promptly raise invoices for clients. Click on any client's name in the table above to delve deeper into their project and time reporting details. Gain insights and manage project progress with precision. Also you can raise invoice for clients and track the invoices for Devs , Vendors and Clients.</p>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <EditTimeReport show={showEditTimeModal} handleClose={handleCloseEditTimeModal} adminTimeReportingList={adminTimeReportingList} />\r\n            <UploadInvoice show={showUploadInvoice} handleClose={handleCloseUploadInvoice} contractId={contractId} role={\"admin\"} />\r\n        </>\r\n    )\r\n}\r\nexport default AdminTimeReporting;","import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport RexettButton from \"../../../components/atomic/RexettButton\";\r\nimport { adminTimeReporting, editTimeReporting } from \"../../../redux/slices/adminDataSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useTranslation } from \"react-i18next\";\r\nconst EditTimeReport = ({ show, handleClose,adminTimeReportingList }) => {\r\n    const [devloperState,setDeveloperState]=useState([])\r\n    const {smallLoader}=useSelector(state=>state.adminData)\r\n    const dispatch =useDispatch()\r\n    const [time,setTime]=useState(null)\r\n    const [hours,setHours]=useState(null)\r\n    const { t } = useTranslation()\r\n\r\n    const handleClient=(e)=>{\r\n     let copyList=[...adminTimeReportingList]\r\n     let findData=copyList.find((item)=>item.client_details.id==e.target.value)\r\n     let devName=findData?.contracts.map((item)=>{\r\n        return { dev:item?.contractDetails?.developer.name,\r\n        time:item?.time_report?.totalDuration,\r\n        contract_id:item?.contractDetails?.id\r\n        }\r\n    })\r\n    setDeveloperState(devName)\r\n    }\r\n\r\n    useEffect(()=>{\r\n      return ()=>{\r\n        setTime(null)\r\n      }\r\n    },[])\r\n\r\n    const handleDeveloper=(e)=>{\r\n    let obj=JSON.parse(e.target.value)\r\n        setTime(obj)\r\n    }\r\n\r\n    const handleEditTime=async (e)=>{\r\n        e.preventDefault()\r\n        if(time==null){\r\n            return \r\n        }\r\n\r\n   let paylaod={\r\n    \"contract_id\": time?.contract_id,\r\n    \"total_hours\": hours\r\n  }\r\n  console.log(time.contractId,\"contractId\");\r\n  await dispatch(editTimeReporting(paylaod))\r\n  dispatch(adminTimeReporting())\r\n  setTime(null)\r\n  \r\n  handleClose()\r\n    }\r\n\r\n    const handleChange=(e)=>{\r\n        setHours(e.target.value)\r\n        setTime({\r\n            ...time,\r\n            time:e.target.value\r\n        })\r\n    }\r\n    return (\r\n        <Modal show={show} onHide={handleClose} centered className=\"custom-modal\" animation>\r\n            <Modal.Header closeButton className=\"border-0 pb-3\">\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <h3 className=\"popup-heading\">{t(\"endTimeReport\")}</h3>\r\n                <Form>\r\n                    <Row>   \r\n                        {/* <Col md=\"12\">\r\n                            <Form.Group className=\"mb-4\">\r\n                                <Form.Select className=\"common-field\" onChange={handleClient}>\r\n                                    <option selected disabled>Select Client</option>\r\n                                     {\r\n                                       adminTimeReportingList?.map((item)=>{\r\n                                        return( <>\r\n                                          <option value={item?.client_details?.id}>{item?.client_details?.name}</option>\r\n                                        </>)\r\n                                       }) \r\n                                     }\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                        </Col> */}\r\n                        <Col md=\"12\">\r\n                            <Form.Group className=\"mb-4\">\r\n                                <Form.Select className=\"common-field\" onChange={handleDeveloper}>\r\n                                    <option selected disabled>Select Developer</option>\r\n                                     {\r\n                                       devloperState?.map((item)=>{\r\n                                        return( <>\r\n                                          <option value={JSON.stringify(item)}>{item?.dev}</option>\r\n                                        </>)\r\n                                       }) \r\n                                     }\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"12\">\r\n                            <Form.Group className=\"mb-4\">\r\n                                <Form.Select className=\"common-field\" onChange={handleDeveloper}>\r\n                                    <option selected disabled>Select Client</option>\r\n                                    <option>Amazon</option>\r\n                                    <option>Google</option>\r\n                                    <option>Volvo</option>\r\n                                    <option>BMW</option>\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                            <Form.Group className=\"mb-4\">\r\n                                <Form.Select className=\"common-field\" onChange={handleDeveloper}>\r\n                                    <option selected disabled>Select Month</option>\r\n                                    <option>January</option>\r\n                                    <option>Feburary</option>\r\n                                    <option>March</option>\r\n                                    <option>April</option>\r\n                                    <option>May</option>\r\n                                    <option>June</option>\r\n                                    <option>July</option>\r\n                                    <option>August</option>\r\n                                    <option>September</option>\r\n                                    <option>October</option>\r\n                                    <option>November</option>\r\n                                    <option>December</option>\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                            <Form.Group className=\"mb-4\">\r\n                                <Form.Select className=\"common-field\" onChange={handleDeveloper}>\r\n                                    <option selected disabled>Select Year</option>\r\n                                    <option>2024</option>\r\n                                    <option>2023</option>\r\n                                    <option>2022</option>\r\n                                    <option>2021</option>\r\n                                    <option>2020</option>\r\n                                    <option>2019</option>\r\n                                    <option>2018</option>\r\n                                    <option>2017</option>\r\n                                    </Form.Select>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"12\">\r\n                            <Form.Group className=\"mb-4\">\r\n                                <Form.Control type=\"text\" className=\"common-field\" placeholder=\"Enter Total Hours\" value={time?.time} name=\"name\" onChange={handleChange} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"12\">\r\n                            <Form.Group className=\"mb-4\">\r\n                                <Form.Control type=\"text\" as=\"textarea\" className=\"common-field\" placeholder=\"Enter reason for edit time sheet\" />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <div className=\"text-center\">\r\n                        <RexettButton\r\n                            type=\"submit\"\r\n                            text=\"Submit\"\r\n                            className=\"main-btn px-4 font-14 fw-semibold\"\r\n                            variant=\"transparent\"\r\n                            onClick={handleEditTime}\r\n                            isLoading={smallLoader}\r\n                        />\r\n                    </div>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\nexport default EditTimeReport;"],"names":["_ref","data","_jsx","className","children","_jsxs","src","errorImg","show","handleClose","contractId","role","selectedFile","setSelectedFile","useState","dispatch","useDispatch","smallLoader","useSelector","state","clientData","register","setValue","handleSubmit","formState","errors","isDirty","isValid","isSubmitting","useForm","Modal","onHide","centered","animation","size","Header","closeButton","Title","Body","onSubmit","values","_values$file","console","log","file","type","category","file_name","alert","fileData","FormData","append","filePreassignedUrlGenerate","url","createNewFolderAndFile","noValidate","Row","Col","md","Form","Group","Label","Select","required","value","selected","disabled","Control","id","name","onChange","e","target","files","htmlFor","RexettButton","text","variant","isLoading","AdminTimeReporting","adminTimeReportingList","screenLoader","adminClientList","adminData","clientList","vendorData","setContractID","showEditTimeModal","setShowEditTimeModal","developerData","setDeveloperData","t","useTranslation","navigate","useNavigate","showUploadInvoice","setShowUploadInvoice","useEffect","adminTimeReporting","_Fragment","placeholder","Button","IoSearch","ScreenLoader","length","map","index","client_name","client_id","total_hired_developers","total_individual_dev","total_projects","total_vendors_dev","contracts","Fragment","onClick","concat","colSpan","NoDataFound","EditTimeReport","handleCloseEditTimeModal","UploadInvoice","handleCloseUploadInvoice","devloperState","setDeveloperState","time","setTime","hours","setHours","handleDeveloper","obj","JSON","parse","item","stringify","dev","as","async","preventDefault","paylaod","contract_id","editTimeReporting"],"sourceRoot":""}
{"version":3,"file":"static/js/5215.0ad7b4f4.chunk.js","mappings":"qSAcA,MAoLA,EApLmBA,IAAiB,IAADC,EAAAC,EAAA,IAAf,SAACC,GAASH,EAC1B,MAAMI,GAAUC,EAAAA,EAAAA,MACVC,GAASC,EAAAA,EAAAA,OACT,YAACC,IAAcC,EAAAA,EAAAA,KAAYC,GAAOA,EAAMC,YACvCC,EAAWC,IAAaC,EAAAA,EAAAA,WAAS,IACjCC,EAAMC,IAAUF,EAAAA,EAAAA,UAAS,KACzBG,EAAWC,IAAaJ,EAAAA,EAAAA,WAAS,IAClC,EAAEK,IAAMC,EAAAA,EAAAA,MAUZ,MAAMC,EATR,WACI,MAAMC,EAAYC,UAAUD,UACtBE,EAAcC,OAAOC,OAAOC,MAC5BC,EAAeH,OAAOC,OAAOG,OAC7BC,EAAaL,OAAOM,iBAE1B,MADe,GAAAC,OAAMV,EAAS,KAAAU,OAAIR,EAAW,KAAAQ,OAAIJ,EAAY,KAAAI,OAAIF,EAEnE,CAEkBG,IAEd,SACFC,EAAQ,SACRC,EAAQ,aACRC,EAEAC,WAAW,OAAEC,EAAM,QAAEC,EAAO,QAAEC,EAAO,aAAEC,KACrCC,EAAAA,EAAAA,IAAQ,CAAC,IAEbC,EAAAA,EAAAA,YAAU,KACR,IAAI5B,EAAM6B,aAAaC,QAAQ,SAC5B9B,IACCoB,EAAS,QAAQpB,GACjBF,GAAY,GAChB,GAEA,IAiDJ,OACIiC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,KAAA,WAASG,UAAU,eAAcD,UAC7BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,UAClBE,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACF,UAAU,aAAYD,SAAA,EACvBF,EAAAA,EAAAA,KAACM,EAAAA,EAAG,CAACC,GAAI,EAAGJ,UAAU,OAAMD,UACxBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,uFAAsFD,UACjGE,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACIF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,qCAAoCD,UACnDE,EAAAA,EAAAA,MAAA,KAAGI,KAAK,0BAAyBN,SAAA,CAAC,MAAEF,EAAAA,EAAAA,KAAA,OAAKS,IAAKC,EAAaC,IAAI,uBAE/DX,EAAAA,EAAAA,KAAA,OAAKG,UAAU,oEAAmED,UAE9EF,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACC,GAAI,IAAKV,UAAU,iCAAgCD,SAzBxE7C,KACJ,CACTyD,OAAOzC,EAAE,eACT0C,UAAU1C,EAAE,kBACZ2C,MAAM3C,EAAE,cACR4C,OAAO5C,EAAE,gBAGGhB,IAiB2E6D,CAAa7D,QAK5E+C,EAAAA,EAAAA,MAAA,QAAMe,SAAU7B,GAjE9B8B,IACdtB,aAAauB,QAAQ,QAAQD,EAAOnD,OACpC,IAMIqD,EAAK,CACLrD,MAAMmD,EAAOnD,MACbsD,SAASH,EAAOG,SAChBC,KATS,CACTV,OAAO,SACPC,UAAU,YACVC,MAAM,QACNC,OAAO,UAKO,GAAD/B,OAAI7B,IACjBoE,YAAalD,GAGjBjB,GAASoE,EAAAA,EAAAA,IAAUJ,GAAK,KACpB9D,EAAS,OAAO,IACjB,IAgDiEmE,YAAU,EAAAzB,SAAA,EAC9CE,EAAAA,EAAAA,MAACwB,EAAAA,EAAKC,MAAK,CAAC1B,UAAU,OAAMD,SAAA,EACxBF,EAAAA,EAAAA,KAAC4B,EAAAA,EAAKE,MAAK,CAAC3B,UAAU,aAAYD,SAAE7B,EAAE,YACtC2B,EAAAA,EAAAA,KAAC4B,EAAAA,EAAKG,QAAO,CAACC,KAAK,QAAQ7B,UAAU,aACrC8B,KAAK,WACD7C,EAAS,QAAS,CAClB8C,SAAUC,GAAIjE,EAASiE,EAAEC,OAAOC,OAChCC,SAAU,CACRD,OAAO,EACPE,QAAS,qBAEXC,QAAS,CACLH,MAAO,6BACPE,QAAS,6BAIhBvC,EAAAA,EAAAA,KAAA,KAAGG,UAAU,gBAAeD,SACZ,QADY/C,EACxBqC,EAAOvB,aAAK,IAAAd,OAAA,EAAZA,EAAcoF,cAGvBnC,EAAAA,EAAAA,MAACwB,EAAAA,EAAKC,MAAK,CAAC1B,UAAU,OAAMD,SAAA,EACxBF,EAAAA,EAAAA,KAAC4B,EAAAA,EAAKE,MAAK,CAAC3B,UAAU,aAAYD,SAAE7B,EAAE,eACtC+B,EAAAA,EAAAA,MAAA,OAAKD,UAAU,oBAAmBD,SAAA,EAC9BF,EAAAA,EAAAA,KAAC4B,EAAAA,EAAKG,QAAO,CAACC,KAAM7D,EAAW,OAAO,WAAYgC,UAAU,kBAC5D8B,KAAK,cACD7C,EAAS,WAAY,CACrBkD,SAAU,CACRD,OAAO,EACPE,QAAS,6BAKfvC,EAAAA,EAAAA,KAAA,QAAMG,UAAU,UAAUsC,QAASA,IAAIrE,GAAaD,GAAY+B,SAE1D/B,GAAa6B,EAAAA,EAAAA,KAAC0C,EAAAA,IAAU,KAAK1C,EAAAA,EAAAA,KAAC2C,EAAAA,IAAK,UAI7C3C,EAAAA,EAAAA,KAAA,KAAGG,UAAU,gBAAeD,SACR,QADQ9C,EACvBoC,EAAO+B,gBAAQ,IAAAnE,OAAA,EAAfA,EAAiBmF,cAG1BnC,EAAAA,EAAAA,MAAA,OAAKD,UAAU,8DAA6DD,SAAA,EACxEF,EAAAA,EAAAA,KAAC4B,EAAAA,EAAKgB,MAAK,CACPZ,KAAK,WACLa,GAAG,cACHC,MAAOzE,EAAE,cACT6D,SAzFrBC,IAChBA,EAAEC,OAAOW,SACRjD,aAAauB,QAAQ,QAAQpD,GAC7BF,GAAY,KAEZ+B,aAAakD,WAAW,SACxBjF,GAAY,GAChB,EAmFwCgF,QAASjF,EACTqC,UAAU,mBAEdH,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACC,GAAI,mBAAoBV,UAAU,YAAWD,SAAG7B,EAAE,wBAE5D2B,EAAAA,EAAAA,KAACiD,EAAAA,EAAY,CACbjB,KAAK,SACLkB,KAAM7E,EAAE,SACR8B,UAAU,wCACVsC,QAASnD,EACT6D,QAAQ,cACRC,SAAU1F,EACV2F,UAAW3F,eAM3BsC,EAAAA,EAAAA,KAACM,EAAAA,EAAG,CAACC,GAAI,EAAGJ,UAAU,0BAAyBD,UAC3CF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,oBAAmBD,UAC9BF,EAAAA,EAAAA,KAAA,OAAKS,IAAK6C,EAAcnD,UAAU,yBAMvD,C,mFC5LX,MAOA,EAPcoD,KAENvD,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACwD,EAAAA,EAAU,CAACnG,SAAS,Y","sources":["components/common/RexetLogin/RexetLogin.jsx","pages/Authentication/Login.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { FaEye } from \"react-icons/fa\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport authLoginImg from '../../../assets/img/login-img-new.png'\r\nimport RexettButton from \"../../../components/atomic/RexettButton\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginUser } from \"../../../redux/slices/authenticationDataSlice\";\r\nimport sidebarLogo from '../../../assets/img/rexett-logo-white.png'\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { FaEyeSlash } from \"react-icons/fa6\";\r\n\r\n\r\nconst RexetLogin = ({userType}) => {\r\n    const dispatch =useDispatch();\r\n    const navigate=useNavigate()\r\n    const {smallLoader }=useSelector(state=>state.authData);\r\n    const [isRemember,setRemember]=useState(false)\r\n    const [email,setEmail]=useState(\"\")\r\n    const [isPassword,setPassword]=useState(false)\r\n    const { t } = useTranslation()\r\n    function generateBrowserId() {\r\n        const userAgent = navigator.userAgent;\r\n        const screenWidth = window.screen.width;\r\n        const screenHeight = window.screen.height;\r\n        const pixelRatio = window.devicePixelRatio;\r\n        const browserId = `${userAgent}-${screenWidth}-${screenHeight}-${pixelRatio}`;\r\n        return browserId;\r\n      }\r\n      \r\n      const browserId = generateBrowserId();\r\n\r\n    const {\r\n        register,\r\n        setValue,\r\n        handleSubmit,\r\n\r\n        formState: { errors, isDirty, isValid, isSubmitting },\r\n      } = useForm({});\r\n\r\n      useEffect(()=>{\r\n        let email=localStorage.getItem(\"email\")\r\n        if(email){\r\n            setValue(\"email\",email)\r\n            setRemember(true)\r\n        }\r\n\r\n      },[])\r\n     \r\n      const onSubmit=(values)=>{\r\n        localStorage.setItem(\"email\",values.email)\r\n        let allRoles={\r\n            client:\"client\",\r\n            developer:\"developer\",\r\n            admin:\"admin\",\r\n            vendor:\"vendor\"\r\n        }\r\n        let data={\r\n            email:values.email,\r\n            password:values.password,\r\n            role:allRoles[`${userType}`],\r\n            mac_address: browserId\r\n        }   \r\n        \r\n        dispatch(loginUser(data,()=>{\r\n            navigate(`/otp`)\r\n        }))\r\n      }\r\n    \r\n\r\n      const handleRoles=(e)=>{\r\n     navigate(`/${e.target.value}`)\r\n      }\r\n\r\n     const handleRemember=(e)=>{\r\n        if(e.target.checked){\r\n            localStorage.setItem(\"email\",email)\r\n            setRemember(true)\r\n        }else{\r\n            localStorage.removeItem(\"email\")\r\n            setRemember(false)\r\n        }\r\n     } \r\n\r\n     const currentRoles=(userType)=>{\r\n        let allRoles={\r\n            client:t(\"clientLogin\"),\r\n            developer:t(\"developerLogin\"),\r\n            admin:t(\"adminLogin\"),\r\n            vendor:t(\"vendorLogin\")\r\n        }\r\n\r\n        return allRoles[userType]\r\n     }\r\n     \r\n\r\n    return (\r\n        <>\r\n            <section className=\"auth-wrapper\">\r\n                <div className=\"h-100\">\r\n                    <Row className=\"mx-0 h-100\">\r\n                        <Col md={5} className=\"px-0\">\r\n                            <div className=\"inner-auth-wrapper h-100 d-flex justify-content-center flex-column position-relative\">\r\n                                <div>\r\n                                    <div className=\"text-center mb-5 logo-auth-wrapper\">\r\n                                    <a href=\"https://www.rexett.com/\">  <img src={sidebarLogo} alt=\"Sidebar Logo\"/></a>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-between align-items-center mb-4 text-white\">\r\n                                      \r\n                                        <Link to={\"#\"} className=\"link-text text-decoration-none\">{currentRoles(userType)}</Link>\r\n                                        \r\n                                        {/* <Link to={\"#\"} className=\"link-text text-decoration-none\">Client Login</Link> */}\r\n                                        {/* <Link to={\"#\"} className=\"link-text\">Register</Link> */}\r\n                                    </div>\r\n                                    <form onSubmit={handleSubmit(onSubmit)} noValidate>\r\n                                        <Form.Group className=\"mb-3\">\r\n                                            <Form.Label className=\"label-form\">{t(\"email\")}</Form.Label>\r\n                                            <Form.Control type=\"email\" className=\"auth-field\"\r\n                                            name=\"email\"\r\n                                            {...register(\"email\", {\r\n                                                onChange:(e)=>setEmail(e.target.value),\r\n                                                required: {\r\n                                                  value: true,\r\n                                                  message: \"Email is required\",\r\n                                                },\r\n                                                pattern: {\r\n                                                    value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\r\n                                                    message: 'Invalid email format',\r\n                                                  },\r\n                                              })}\r\n                                            />\r\n                                             <p className=\"error-message\">\r\n                                                {errors.email?.message}\r\n                                                </p>\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"mb-3\">\r\n                                            <Form.Label className=\"label-form\">{t(\"password\")}</Form.Label>\r\n                                            <div className=\"position-relative\">\r\n                                                <Form.Control type={isPassword?\"text\":\"password\"} className=\"auth-field pe-5\" \r\n                                                name=\"password\"\r\n                                                {...register(\"password\", {\r\n                                                    required: {\r\n                                                      value: true,\r\n                                                      message: \"Password is required\",\r\n                                                    },\r\n                                                  \r\n                                                  })}\r\n                                                />\r\n                                                <span className=\"eye-btn\" onClick={()=>setPassword(!isPassword)}>\r\n                                                    {\r\n                                                      isPassword ? <FaEyeSlash/> : <FaEye/>\r\n                                                    }\r\n                                                </span>\r\n                                            </div>\r\n                                            <p className=\"error-message\">\r\n                                                {errors.password?.message}\r\n                                                </p>\r\n                                        </Form.Group>\r\n                                        <div className=\"d-flex justify-content-between align-items-center mt-3 mb-4\">\r\n                                            <Form.Check\r\n                                                type=\"checkbox\"\r\n                                                id=\"remember_me\"\r\n                                                label={t(\"rememberMe\")}\r\n                                                onChange={handleRemember}\r\n                                                checked={isRemember}\r\n                                                className=\"remeber-check\"\r\n                                            />\r\n                                            <Link to={\"/forgot-password\"} className=\"link-text\" >{t(\"forgotPassword\")}</Link>\r\n                                        </div>\r\n                                        <RexettButton \r\n                                        type=\"submit\" \r\n                                        text={t(\"login\")}\r\n                                        className=\"auth-btn d-block text-decoration-none\"\r\n                                        onClick={handleSubmit}\r\n                                        variant=\"transparent\"\r\n                                        disabled={smallLoader}\r\n                                        isLoading={smallLoader}\r\n                                        />\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                        <Col md={7} className=\"h-100 d-md-block d-none\">\r\n                            <div className=\"h-100 text-center\">\r\n                                <img src={authLoginImg} className=\"auth-img\" />\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\nexport default RexetLogin;","import React from \"react\";\r\nimport RexetLogin from \"../../components/common/RexetLogin/RexetLogin\";\r\n\r\nconst Login = () => {\r\n    return (\r\n        <>\r\n          <RexetLogin userType=\"client\"/>\r\n        </>\r\n    )\r\n}\r\nexport default Login;"],"names":["_ref","_errors$email","_errors$password","userType","dispatch","useDispatch","navigate","useNavigate","smallLoader","useSelector","state","authData","isRemember","setRemember","useState","email","setEmail","isPassword","setPassword","t","useTranslation","browserId","userAgent","navigator","screenWidth","window","screen","width","screenHeight","height","pixelRatio","devicePixelRatio","concat","generateBrowserId","register","setValue","handleSubmit","formState","errors","isDirty","isValid","isSubmitting","useForm","useEffect","localStorage","getItem","_jsx","_Fragment","children","className","_jsxs","Row","Col","md","href","src","sidebarLogo","alt","Link","to","client","developer","admin","vendor","currentRoles","onSubmit","values","setItem","data","password","role","mac_address","loginUser","noValidate","Form","Group","Label","Control","type","name","onChange","e","target","value","required","message","pattern","onClick","FaEyeSlash","FaEye","Check","id","label","checked","removeItem","RexettButton","text","variant","disabled","isLoading","authLoginImg","Login","RexetLogin"],"sourceRoot":""}
{"version":3,"file":"static/js/3311.fb4228f0.chunk.js","mappings":"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","sources":["components/atomic/NoDataFound.jsx","components/atomic/NotificationList.jsx","components/atomic/RexettPagination.jsx","pages/developer/NotificationScreen.jsx","../node_modules/react-bootstrap/esm/Tabs.js"],"sourcesContent":["import React from 'react'\r\nimport errorImg from '../../assets/img/warning-icon.gif'\r\nconst NoDataFound = ({data}) => {\r\n  return (\r\n    <div className='no-data-container'>\r\n      <div className='no-data'>\r\n        <img src={errorImg} />{data?data:\"No Data Found\"}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NoDataFound","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Tab, Tabs } from \"react-bootstrap\";\r\nimport { FaBell } from \"react-icons/fa6\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ScreenLoader from \"./ScreenLoader\";\r\nimport { getNotification, markAsRead } from \"../../redux/slices/adminDataSlice\";\r\nimport NoDataFound from \"../atomic/NoDataFound\"\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { timeReporting } from \"../../redux/slices/clientDataSlice\";\r\nimport RexettPagination from \"./RexettPagination\";\r\n\r\n\r\nconst NotificationList = ({ job, doc }) => {\r\n  const [page, setPage] = useState(1);\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n  const [currenTab, setCurrentTabs] = useState('allNotifications')\r\n  const [nottificationData, setNotificationData] = useState([])\r\n  const { notificationList, screenLoader } = useSelector((state) => state.adminData);\r\n  const { t } = useTranslation() \r\n\r\n  useEffect(() => {\r\n    setNotificationData(notificationList[currenTab])\r\n  }, [notificationList, currenTab])\r\n\r\n  useEffect(() => {\r\n    let data={\r\n      page:page\r\n    }\r\n    \r\n    dispatch(getNotification(data));\r\n  }, [page]);\r\n\r\n  const handleNotification = (notificationId, id, data) => {\r\n    dispatch(markAsRead(notificationId, () => {\r\n      let data={\r\n        page:page\r\n      }\r\n      dispatch(getNotification(data));\r\n    }))\r\n    if (data == \"Documents\") {\r\n      navigate(`/${doc}`);\r\n    } else if (data == \"Jobs\") {\r\n      navigate(`/${job}/${id}`);\r\n    } else if (data == \"Time_reports\") {\r\n      navigate(`/${timeReporting}`);\r\n    } else if (data == \"Users\") {\r\n      navigate(`/admin-single-developer/${id}`);\r\n    }\r\n  };\r\n\r\n  const handleSelect = (key) => {\r\n    setNotificationData(notificationList[key])\r\n  }\r\n\r\n  const newTitleFunction = (data) => {\r\n    const today = new Date();\r\n    const targetDate = new Date(data);\r\n    if (targetDate > today) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  // const markAllAsRead = () => {\r\n  //   dispatch(markAsRead(undefined, () => {\r\n\r\n  //   }))\r\n  // }\r\n  return (\r\n    <>\r\n      {screenLoader ? <ScreenLoader /> : <section className=\"notification-screen card-box\">\r\n        <div className=\"d-flex justify-content-between align-items-start\">\r\n          <div>\r\n            <h2 className=\"overview-card-heading fw-bold\">{t(\"notification\")}</h2>\r\n            {/* {notificationList['unreadNotifications']?.length > 0 ? <p className=\"notification-text\">{`You've ${notificationList['unreadNotifications']?.length} unread notifications`}</p> : \"\"} */}\r\n          </div>\r\n          {/* <Button variant=\"transparent\" className=\"mark-read-btn\" onClick={markAllAsRead}>\r\n            Mark all as read\r\n          </Button> */}\r\n        </div>\r\n        <Tabs\r\n          defaultActiveKey=\"allNotifications\"\r\n          id=\"justify-tab-example\"\r\n          className=\"mb-3 notification-tabs notify-tabs\"\r\n          justify\r\n          onSelect={handleSelect}\r\n        >\r\n          <Tab eventKey=\"allNotifications\" title=\"All\">\r\n            <div className=\"notification-main pt-4 d-block\">\r\n              <div className=\"notification-list\">\r\n                {nottificationData?.notifications?.length > 0 ? nottificationData?.notifications.map((item) => {\r\n                  return (\r\n                    <>\r\n                      <div className=\"notification-wrapper\" onClick={() => handleNotification(item?.id, item?.reference_id, item?.reference_model)}>\r\n                        <span className=\"bell-icon\">\r\n                          <FaBell />\r\n                        </span>\r\n                        <div className=\"d-flex gap-4 justify-content-between w-100\">\r\n                          <div>\r\n                            <h3 className=\"notification-heading\">\r\n                              {item?.title}\r\n                              {newTitleFunction(item?.created_at) && <span className=\"new-notify\">{t(\"new\")}</span>}\r\n                            </h3>\r\n                            <p className=\"notification-text\">\r\n                              {\r\n                                item?.message\r\n                              }\r\n                            </p>\r\n                          </div>\r\n                          <div className=\"notify-recieve\">\r\n                            <span className=\"notify-date\">{item?.created_at.slice(0, 10)}</span>\r\n                            {/* <span className=\"notify-time\">Just Now</span> */}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  );\r\n                }) : <NoDataFound />}\r\n              </div>\r\n            </div>\r\n          </Tab>\r\n          <Tab eventKey=\"readNotifications\" title=\"Read\">\r\n            <div className=\"notification-main pt-4 d-block\">\r\n              <div className=\"notification-list\">\r\n                {nottificationData?.notifications?.map((item) => {\r\n                  return (\r\n                    <>\r\n                      <div className=\"notification-wrapper\" onClick={() => handleNotification(item?.id, item?.reference_id, item?.reference_model)}>\r\n                        <span className=\"bell-icon\">\r\n                          <FaBell />\r\n                        </span>\r\n                        <div className=\"d-flex gap-4 w-100 justify-content-between\">\r\n                          <div>\r\n                            <h3 className=\"notification-heading\">\r\n                              {item?.title}\r\n                              {newTitleFunction(item?.created_at) && <span className=\"new-notify\">{t(\"new\")}</span>}\r\n                            </h3>\r\n                            <p className=\"notification-text\">\r\n                              {\r\n                                item?.message\r\n                              }\r\n                            </p>\r\n                          </div>\r\n                          <div className=\"notify-recieve\">\r\n                            <span className=\"notify-date\">{item?.created_at.slice(0, 10)}</span>\r\n                            {/* <span className=\"notify-time\">Just Now</span> */}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </Tab>\r\n          <Tab eventKey=\"unreadNotifications\" title=\"New\">\r\n            <div className=\"notification-main pt-4 d-block\">\r\n              <div className=\"notification-list\">\r\n                {nottificationData?.notifications?.map((item) => {\r\n                  return (\r\n                    <>\r\n                      <div className=\"notification-wrapper\" onClick={() => handleNotification(item?.id, item?.reference_id, item?.reference_model)}>\r\n                        <span className=\"bell-icon\">\r\n                          <FaBell />\r\n                        </span>\r\n                        <div className=\"d-flex gap-4 w-100 justify-content-between\">\r\n                          <div>\r\n                            <h3 className=\"notification-heading\">\r\n                              {item?.title}\r\n                              {newTitleFunction(item?.created_at) && <span className=\"new-notify\">{t(\"new\")}</span>}\r\n                            </h3>\r\n                            <p className=\"notification-text\">\r\n                              {\r\n                                item?.message\r\n                              }\r\n                            </p>\r\n                          </div>\r\n                          <div className=\"notify-recieve\">\r\n                            <span className=\"notify-date\">{item?.created_at.slice(0, 10)}</span>\r\n                            {/* <span className=\"notify-time\">Just Now</span> */}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </Tab>\r\n        </Tabs>\r\n        {nottificationData?.pagination?.totalCount > 5 ? (\r\n                <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                  <p className=\"showing-result\">\r\n                    {t(\"showing\")} {nottificationData?.pagination?.length} {t(\"results\")}\r\n                  </p>\r\n                  <RexettPagination\r\n                    number={nottificationData?.pagination?.totalPages}\r\n                    setPage={setPage}\r\n                    page={page}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n      </section>}\r\n    </>\r\n  );\r\n};\r\nexport default NotificationList;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ResponsivePagination from 'react-responsive-pagination';\r\nimport 'react-responsive-pagination/themes/classic.css';\r\nimport { adminJobListing } from \"../../redux/slices/adminDataSlice\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\nconst RexettPagination = ({ number, setPage, page }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    setPage(pageNumber);\r\n  };\r\n\r\n  const renderPaginationItems = () => {\r\n    const paginationItems = [];\r\n\r\n    if (number <= 6) {\r\n      // If total number of pages is 6 or less, render all pages\r\n      for (let i = 1; i <= number; i++) {\r\n        paginationItems.push(\r\n          <Pagination.Item\r\n            key={i}\r\n            className=\"custom-pagination-item\"\r\n            active={i === page}\r\n            onClick={() => handlePageChange(i)}\r\n          >\r\n            {i}\r\n          </Pagination.Item>\r\n        );\r\n      }\r\n    } else {\r\n      // If total number of pages is greater than 6, render first 3 pages, last 3 pages, and dots\r\n      paginationItems.push(\r\n        <Pagination.Item\r\n          key={1}\r\n          className=\"custom-pagination-item\"\r\n          active={1 === page}\r\n          onClick={() => handlePageChange(1)}\r\n        >\r\n          {1}\r\n        </Pagination.Item>\r\n      );\r\n\r\n      if (page > 4) {\r\n        paginationItems.push(\r\n          <Pagination.Ellipsis key=\"start-dots\" disabled />\r\n        );\r\n      }\r\n\r\n      for (let i = Math.max(2, page - 1); i <= Math.min(page + 1, number - 1); i++) {\r\n        paginationItems.push(\r\n          <Pagination.Item\r\n            key={i}\r\n            className=\"custom-pagination-item\"\r\n            active={i === page}\r\n            onClick={() => handlePageChange(i)}\r\n          >\r\n            {i}\r\n          </Pagination.Item>\r\n        );\r\n      }\r\n\r\n      if (page < number - 3) {\r\n        paginationItems.push(\r\n          <Pagination.Ellipsis key=\"end-dots\" disabled />\r\n        );\r\n      }\r\n\r\n      paginationItems.push(\r\n        <Pagination.Item\r\n          key={number}\r\n          className=\"custom-pagination-item\"\r\n          active={number === page}\r\n          onClick={() => handlePageChange(number)}\r\n        >\r\n          {number}\r\n        </Pagination.Item>\r\n      );\r\n    }\r\n\r\n    return paginationItems;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Pagination className=\"pagination flex-wrap\">\r\n        <Pagination.Prev\r\n          className=\"pagination-arrow custom-pagination-item me-1\"\r\n          onClick={() => handlePageChange(page - 1)}\r\n          disabled={page === 1}\r\n        />\r\n        <div className=\"pages-link flex-wrap\">\r\n          {renderPaginationItems()}\r\n        </div>\r\n        <Pagination.Next\r\n          className=\"pagination-arrow next-arrow ms-1 custom-pagination-item\"\r\n          onClick={() => handlePageChange(page + 1)}\r\n          disabled={page === number}\r\n        />\r\n      </Pagination>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RexettPagination;\r\n","import React from \"react\";\r\nimport NotificationList from \"../../components/atomic/NotificationList\";\r\nconst NotificationDeveloper = () => {\r\n    return (\r\n        <>\r\n         <NotificationList job=\"\" doc=\"developer-documents\"/>\r\n        </>\r\n    )\r\n}\r\nexport default NotificationDeveloper;","import * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseTabs from '@restart/ui/Tabs';\nimport Nav from './Nav';\nimport NavLink from './NavLink';\nimport NavItem from './NavItem';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\nimport { forEach, map } from './ElementChildren';\nimport getTabTransitionComponent from './getTabTransitionComponent';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction getDefaultActiveKey(children) {\n  let defaultActiveKey;\n  forEach(children, child => {\n    if (defaultActiveKey == null) {\n      defaultActiveKey = child.props.eventKey;\n    }\n  });\n  return defaultActiveKey;\n}\nfunction renderTab(child) {\n  const {\n    title,\n    eventKey,\n    disabled,\n    tabClassName,\n    tabAttrs,\n    id\n  } = child.props;\n  if (title == null) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(NavItem, {\n    as: \"li\",\n    role: \"presentation\",\n    children: /*#__PURE__*/_jsx(NavLink, {\n      as: \"button\",\n      type: \"button\",\n      eventKey: eventKey,\n      disabled: disabled,\n      id: id,\n      className: tabClassName,\n      ...tabAttrs,\n      children: title\n    })\n  });\n}\nconst Tabs = props => {\n  const {\n    id,\n    onSelect,\n    transition,\n    mountOnEnter = false,\n    unmountOnExit = false,\n    variant = 'tabs',\n    children,\n    activeKey = getDefaultActiveKey(children),\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  return /*#__PURE__*/_jsxs(BaseTabs, {\n    id: id,\n    activeKey: activeKey,\n    onSelect: onSelect,\n    transition: getTabTransitionComponent(transition),\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    children: [/*#__PURE__*/_jsx(Nav, {\n      id: id,\n      ...controlledProps,\n      role: \"tablist\",\n      as: \"ul\",\n      variant: variant,\n      children: map(children, renderTab)\n    }), /*#__PURE__*/_jsx(TabContent, {\n      children: map(children, child => {\n        const childProps = {\n          ...child.props\n        };\n        delete childProps.title;\n        delete childProps.disabled;\n        delete childProps.tabClassName;\n        delete childProps.tabAttrs;\n        return /*#__PURE__*/_jsx(TabPane, {\n          ...childProps\n        });\n      })\n    })]\n  });\n};\nTabs.displayName = 'Tabs';\nexport default Tabs;"],"names":["_ref","data","_jsx","className","children","_jsxs","src","errorImg","_nottificationData$no","_nottificationData$no2","_nottificationData$no3","_nottificationData$pa","_nottificationData$pa2","_nottificationData$pa3","job","doc","page","setPage","useState","navigate","useNavigate","dispatch","useDispatch","currenTab","setCurrentTabs","nottificationData","setNotificationData","notificationList","screenLoader","useSelector","state","adminData","t","useTranslation","useEffect","getNotification","handleNotification","notificationId","id","markAsRead","concat","timeReporting","newTitleFunction","today","Date","_Fragment","ScreenLoader","Tabs","defaultActiveKey","justify","onSelect","key","Tab","eventKey","title","notifications","length","map","item","onClick","reference_id","reference_model","FaBell","created_at","message","slice","NoDataFound","pagination","totalCount","RexettPagination","number","totalPages","handlePageChange","pageNumber","Pagination","Prev","disabled","renderPaginationItems","paginationItems","i","push","Item","active","Ellipsis","Math","max","min","Next","NotificationDeveloper","NotificationList","getDefaultActiveKey","forEach","child","props","renderTab","tabClassName","tabAttrs","NavItem","as","role","NavLink","type","transition","mountOnEnter","unmountOnExit","variant","activeKey","controlledProps","useUncontrolled","BaseTabs","getTabTransitionComponent","Nav","TabContent","childProps","TabPane","displayName"],"sourceRoot":""}
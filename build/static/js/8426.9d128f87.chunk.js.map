{"version":3,"file":"static/js/8426.9d128f87.chunk.js","mappings":"2MAEA,MAUA,EAVoBA,IAAa,IAAZ,KAACC,GAAKD,EACzB,OACEE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,UAChCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,UAASC,SAAA,EACtBF,EAAAA,EAAAA,KAAA,OAAKI,IAAKC,IAAaN,GAAU,oBAE/B,C,0QCFV,MAgHA,EAhHqBD,IAAqF,IAADQ,EAAA,IAAnF,KAAEC,EAAI,YAAEC,EAAW,qBAACC,EAAoB,KAACV,EAAI,WAACW,EAAU,YAACC,EAAW,QAACC,GAASd,EAChG,MAAM,YAACe,IAAaC,EAAAA,EAAAA,KAAYC,GAAOA,EAAMC,aACvCC,GAASC,EAAAA,EAAAA,OACT,SACFC,EAAQ,SACRC,EAAQ,aACRC,EACAC,WAAW,OAAEC,EAAM,QAAEC,EAAO,QAAEC,EAAO,aAAEC,KACvCC,EAAAA,EAAAA,IAAQ,CAAC,IACbC,EAAAA,EAAAA,YAAU,KACRR,EAAS,UAAc,OAAJrB,QAAI,IAAJA,OAAI,EAAJA,EAAM8B,KAAK,GAC9B,CAAC9B,IAmDH,OACII,EAAAA,EAAAA,MAAC2B,EAAAA,EAAK,CAACvB,KAAMA,EAAMwB,OAAQvB,EAAawB,UAAQ,EAAC/B,UAAU,eAAegC,WAAS,EAAA/B,SAAA,EAC/EF,EAAAA,EAAAA,KAAC8B,EAAAA,EAAMI,OAAM,CAACC,aAAW,EAAClC,UAAU,mBAIpCE,EAAAA,EAAAA,MAAC2B,EAAAA,EAAMM,KAAI,CAAAlC,SAAA,EACPF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gBAAeC,SAAM,OAAJH,QAAI,IAAJA,GAAAA,EAAM8B,KAAK,cAAc,mBACxD1B,EAAAA,EAAAA,MAAA,QAAMkC,SAAUhB,GAzDViB,IAEZ,GAAO,OAAJvC,QAAI,IAAJA,GAAAA,EAAM8B,KAAK,CACZ,IAAIU,EAAS,CACTV,KAAKS,EAAOE,SAEhBvB,GAASwB,EAAAA,EAAAA,IAAoBF,EAAa,OAAJxC,QAAI,IAAJA,OAAI,EAAJA,EAAM2C,IAAIC,IAC5C,IAAIC,EAAW,CACXD,UAA8B,OAApBlC,QAAoB,IAApBA,OAAoB,EAApBA,EAAsBiC,IAEpClC,IACAI,GAAQ,GACRQ,EAAS,UAAU,IACnBH,GAAS4B,EAAAA,EAAAA,IAAcD,EAAWjC,GAAa,IAErD,KAAK,CACH,IAAID,EAAY,CACZ,YAAmC,OAApBD,QAAoB,IAApBA,OAAoB,EAApBA,EAAsBqC,YACrC,UAAa,EACb,UAAiC,OAApBrC,QAAoB,IAApBA,OAAoB,EAApBA,EAAsBiC,GACnC,SAAY/B,EACZ,KAAQ,EACR,QAAW2B,EAAOE,SAEtBvB,GAAS8B,EAAAA,EAAAA,IAAuBrC,GAAaiC,IACzC,IAAIC,EAAW,CACXD,UAAUA,GAEdnC,IACAY,EAAS,UAAU,IACnBH,GAAS4B,EAAAA,EAAAA,IAAcD,EAAWjC,GAAa,IAErD,KAyB8CqC,YAAU,EAAA9C,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAsBC,UACjCF,EAAAA,EAAAA,KAACiD,EAAAA,EAAG,CAAA/C,UACAF,EAAAA,EAAAA,KAACkD,EAAAA,EAAG,CAACC,GAAG,KAAIjD,UAaRC,EAAAA,EAAAA,MAACiD,EAAAA,EAAKC,MAAK,CAACpD,UAAU,QAAOC,SAAA,EACzBF,EAAAA,EAAAA,KAACoD,EAAAA,EAAKE,QAAO,CAACC,KAAK,OAAOtD,UAAU,eAAeuD,YAAY,oBAC3D3B,KAAK,aACDV,EAAS,UAAW,CACpBsC,SArCZC,GACnBA,GALsBA,IACV,OAAVhD,QAAU,IAAVA,OAAU,EAAVA,EAAYiD,MAAKC,GAAkBA,EAAepB,UAAYkB,IAM1DG,CAAsBH,IACtB,wBAFA,gCAsCO1D,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gBAAeC,SAAgB,QAAhBI,EAAEiB,EAAOiB,eAAO,IAAAlC,OAAA,EAAdA,EAAgBwD,oBAKpD9D,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UACxBF,EAAAA,EAAAA,KAAC+D,EAAAA,EAAY,CACTR,KAAK,SACLS,KAAU,OAAJjE,QAAI,IAAJA,GAAAA,EAAM8B,KAAO,OAAO,SAC1B5B,UAAU,oCACVgE,QAAQ,cACRC,UAAWrD,cAKvB,ECThB,EApGyBf,IAAwE,IAAvE,KAAES,EAAI,YAAEC,EAAW,qBAAEC,EAAoB,YAAEE,EAAW,QAAEC,GAASd,EACvF,MAAOqE,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,OAC3CC,EAAQC,IAAcF,EAAAA,EAAAA,YACtBpD,GAAWC,EAAAA,EAAAA,OACX,YAAEL,IAAgBC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,cAC7C,SACFG,EAAQ,SACRC,EAAQ,aACRC,EACAC,WAAW,OAAEC,EAAM,QAAEC,EAAO,QAAEC,EAAO,aAAEC,KACvCC,EAAAA,EAAAA,IAAQ,CAAC,GAEb6C,QAAQC,IAAIH,EAAQ,WAEpBE,QAAQC,IAAIhE,EAAuB,wBAkCnC,OACIN,EAAAA,EAAAA,MAAC2B,EAAAA,EAAK,CAACvB,KAAMA,EAAMwB,OAAQvB,EAAawB,UAAQ,EAAC/B,UAAU,eAAegC,WAAS,EAAA/B,SAAA,EAC/EF,EAAAA,EAAAA,KAAC8B,EAAAA,EAAMI,OAAM,CAACC,aAAW,EAAClC,UAAU,mBAGpCE,EAAAA,EAAAA,MAAC2B,EAAAA,EAAMM,KAAI,CAAAlC,SAAA,EACPF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gBAAeC,SAAC,iBAC9BC,EAAAA,EAAAA,MAAA,QAAMkC,SAAUhB,GAvCXqD,UAAmB,IAADC,EAC/BH,QAAQC,IAAInC,EAAQ,UACpBiC,EAAWjC,GACX,IAAIsC,EAAW,IAAIC,SACnBD,EAASE,OAAO,OAAQxC,EAAOyC,UAAU,IACzCP,QAAQC,IAAIN,EAAe,gBAEF,OAAf,OAAN7B,QAAM,IAANA,OAAM,EAANA,EAAQ0C,WAAmD,qBAAzB,OAAN1C,QAAM,IAANA,GAAoB,QAAdqC,EAANrC,EAAQyC,UAAU,UAAE,IAAAJ,OAAd,EAANA,EAAsBpB,MAItDtC,GAASgE,EAAAA,EAAAA,IAA2BL,GAAWM,IAC3C,IAAIC,EAAW,CACX,YAAe1E,EAAqBqC,YACpC,UAAa,EACb,UAAarC,EAAqBiC,GAClC,SAAY/B,EACZ,MAAS2B,EAAO0C,SAChB,QAAWE,GAEfjE,GAAS8B,EAAAA,EAAAA,IAAuBoC,GAAWxC,IACvC,IAAI5C,EAAO,CACP4C,UAAWA,GAEfnC,IACAI,GAAQ,GACRwD,EAAgB,MAChBnD,GAAS4B,EAAAA,EAAAA,IAAc9C,EAAMY,GAAa,IAC3C,KApBHyE,MAAM,oDAqBP,IAU6CpC,YAAU,EAAA9C,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAsBC,UACjCF,EAAAA,EAAAA,KAACiD,EAAAA,EAAG,CAAA/C,UACAC,EAAAA,EAAAA,MAAC+C,EAAAA,EAAG,CAACC,GAAG,KAAIjD,SAAA,EACRC,EAAAA,EAAAA,MAACiD,EAAAA,EAAKC,MAAK,CAACpD,UAAU,OAAMC,SAAA,EAExBC,EAAAA,EAAAA,MAACiD,EAAAA,EAAKiC,OAAM,CAACpF,UAAU,kBACfkB,EAAS,WAAY,CAAEmE,SAAU,6BAA6BpF,SAAA,EAElEF,EAAAA,EAAAA,KAAA,UAAQuF,MAAM,GAAGC,UAAQ,EAACC,UAAQ,EAAAvF,SAAC,qBACnCF,EAAAA,EAAAA,KAAA,UAAQuF,MAAM,IAAGrF,SAAC,cAClBF,EAAAA,EAAAA,KAAA,UAAQuF,MAAM,IAAGrF,SAAC,eAClBF,EAAAA,EAAAA,KAAA,UAAQuF,MAAM,IAAGrF,SAAC,QAClBF,EAAAA,EAAAA,KAAA,UAAQuF,MAAM,IAAGrF,SAAC,eAEtBF,EAAAA,EAAAA,KAACoD,EAAAA,EAAKE,QAAO,CAACC,KAAK,OAAOtD,UAAU,SAASyC,GAAG,cAC5Cb,KAAK,eACDV,EAAS,YAAa,CACtBuE,SAAWC,GAAMvB,EAAgBuB,EAAEC,OAAOC,MAAM,IAChDP,SAAU,CACNC,OAAO,QAInBvF,EAAAA,EAAAA,KAACoD,EAAAA,EAAK0C,MAAK,CAACC,QAAQ,cAAc9F,UAAU,oBAAmBC,SAAC,mBAEnEiE,GAAehE,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CAAK,kBAAcF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,OAAMC,SAAc,OAAZiE,QAAY,IAAZA,OAAY,EAAZA,EAActC,UAAqB,WAI1G7B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UACxBF,EAAAA,EAAAA,KAAC+D,EAAAA,EAAY,CACTR,KAAK,SACLS,KAAK,SACL/D,UAAU,oCACVgE,QAAQ,cACRwB,YAAU5E,GAAmC,OAAb,OAAPyD,QAAO,IAAPA,OAAO,EAAPA,EAASU,WAClCd,UAAWrD,cAKvB,E,iFC7FhB,MA6GA,EA7GyBf,IAA8H,IAA7H,WAACY,EAAU,oBAACsF,EAAmB,eAACC,EAAc,YAACC,EAAW,kBAACC,EAAiB,iBAACC,EAAgB,yBAACC,GAAyBvG,EAC/I,MAAM,EAAEwG,IAAMC,EAAAA,EAAAA,MACZ,OACAvG,EAAAA,EAAAA,KAAA,OAAAE,UACAF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBC,UAC7BC,EAAAA,EAAAA,MAAA,SAAOF,UAAU,uCAAsCC,SAAA,EACnDC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,+BAA8BC,SAAEoG,EAAE,WAChDtG,EAAAA,EAAAA,KAAA,MAAIC,UAAU,uBAAsBC,SAAEoG,EAAE,YACxCtG,EAAAA,EAAAA,KAAA,MAAIC,UAAU,0BAAyBC,SAAEoG,EAAE,eAC3CtG,EAAAA,EAAAA,KAAA,MAAIC,UAAU,wBAAuBC,SAAEoG,EAAE,gBAE7CtG,EAAAA,EAAAA,KAAA,SAAAE,SACIQ,EAAW8F,OAAO,EAAY,OAAV9F,QAAU,IAAVA,OAAU,EAAVA,EAAY+F,KAAI,CAACC,EAAKC,KAAS,IAADC,EAClD,OACE5G,EAAAA,EAAAA,KAAA6G,EAAAA,SAAA,CAAA3G,UACAC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mCAAkCC,UAC5CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gDAA+CC,SAGrC,IAAjBwG,EAAKI,WAAc3G,EAAAA,EAAAA,MAAA0G,EAAAA,SAAA,CAAA3G,SAAA,EACnBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,SACzBiG,EAAsB,OAAJO,QAAI,IAAJA,OAAI,EAAJA,EAAMlE,YAE7BxC,EAAAA,EAAAA,KAAA,QAAAE,SAAOgG,EAAgB,OAAJQ,QAAI,IAAJA,OAAI,EAAJA,EAAMlE,eAGrBrC,EAAAA,EAAAA,MAAA0G,EAAAA,SAAA,CAAA3G,SAAA,EACMF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAc8G,cAAeA,IAAIX,EAAiBM,GAAMxG,UAC7EF,EAAAA,EAAAA,KAACgH,EAAAA,IAAQ,OAEbhH,EAAAA,EAAAA,KAAA,QAAAE,SAAOwG,EAAKlE,kBAMpBxC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gBAAeC,UACzBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,6CAA4CC,SAAA,EACvDF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,UAASC,UAACF,EAAAA,EAAAA,KAACiH,EAAAA,IAAU,OAAUjH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,OAAMC,SAAM,OAAJwG,QAAI,IAAJA,GAAAA,EAAMQ,KAAW,OAAJR,QAAI,IAAJA,GAAU,QAANE,EAAJF,EAAMQ,YAAI,IAAAN,OAAN,EAAJA,EAAY/E,KAAK,aAG1G7B,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gBAAeC,SAAM,OAAJwG,QAAI,IAAJA,GAAAA,EAAMQ,KAAO,SAAS,kBACrDlH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gBAAeC,UACzBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,8BAA8BkH,QAASA,IAAMlB,EAAmB,OAAJS,QAAI,IAAJA,OAAI,EAAJA,EAAMlE,SAAStC,UAACF,EAAAA,EAAAA,KAACoH,EAAAA,IAAU,OAEzGpH,EAAAA,EAAAA,KAAA,UAAQC,UAAU,2BAA2BkH,QAASA,IAAMnB,EAAoBU,EAAKhE,GAAoB,GAAhBgE,EAAKI,UAAa,SAAU,QAAQ5G,UAAEF,EAAAA,EAAAA,KAACqH,EAAAA,IAAU,OAC1IrH,EAAAA,EAAAA,KAAA,UAAQmH,QAASA,IAAId,EAA6B,OAAJK,QAAI,IAAJA,OAAI,EAAJA,EAAMhE,IAAKzC,UAAU,0BAAyBC,UAACF,EAAAA,EAAAA,KAACsH,EAAAA,IAAa,eAIlH,KAEHtH,EAAAA,EAAAA,KAACuH,EAAAA,EAAW,YAkDxB,E,yBCzGN,MAAMC,EAAqB,CACzBC,UAAW,CAAC,MAAO,MAAO,OAC1BC,QAAS,EACTlE,YAAa,aACbmE,SAAU,CACRC,QAAS,EACTC,SAAU,IA6Fd,EAzFmB/H,IAAoC,IAADgI,EAAA,IAAlC,KAAEvH,EAAI,YAAEC,EAAW,OAAEuH,GAAQjI,GAC5BkI,EAAAA,EAAAA,UAAnB,MACM/G,GAAWC,EAAAA,EAAAA,OACV+G,EAAgBC,IAAqB7D,EAAAA,EAAAA,UAASmD,IAC9CW,EAAaC,IAAkB/D,EAAAA,EAAAA,UAAS,CAAC,IACzCgE,EAAYC,IAAiBjE,EAAAA,EAAAA,aAC7BtE,EAAMwI,IAAWlE,EAAAA,EAAAA,aAClB,cAAEmE,EAAa,YAAE3H,IAAgBC,EAAAA,EAAAA,KACpCC,GAAUA,EAAM0H,gBAEbC,GACS,OAAbF,QAAa,IAAbA,GAAmB,QAANV,EAAbU,EAAezI,YAAI,IAAA+H,OAAN,EAAbA,EAAqBrB,KAAKC,IACjB,CAAEnB,MAAOmB,EAAKhE,GAAIiG,MAAOjC,EAAK7E,WACjC,IAERD,EAAAA,EAAAA,YAAU,KACRX,GAAS2H,EAAAA,EAAAA,OACTL,GAAS,GACR,IA0BH,OACEpI,EAAAA,EAAAA,MAAC2B,EAAAA,EAAK,CACJvB,KAAMA,EACNwB,OAAQvB,EACRwB,UAAQ,EACR/B,UAAU,eACVgC,WAAS,EAAA/B,SAAA,EAETF,EAAAA,EAAAA,KAAC8B,EAAAA,EAAMI,OAAM,CAACC,aAAW,EAAClC,UAAU,mBAEpCE,EAAAA,EAAAA,MAAC2B,EAAAA,EAAMM,KAAI,CAAAlC,SAAA,EACTF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gBAAeC,SAAC,WAC9BF,EAAAA,EAAAA,KAACoD,EAAAA,EAAI,CAAAlD,UACHF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAsBC,UACnCF,EAAAA,EAAAA,KAACiD,EAAAA,EAAG,CAAA/C,UACFC,EAAAA,EAAAA,MAAC+C,EAAAA,EAAG,CAACC,GAAG,KAAIjD,SAAA,EACVF,EAAAA,EAAAA,KAACoD,EAAAA,EAAKC,MAAK,CAACpD,UAAU,OAAMC,UAC1BF,EAAAA,EAAAA,KAACqF,EAAAA,GAAM,CACLpF,UAAU,eACV4I,QAASH,EACThD,SA5CIC,IAAO,IAADmD,EAE1B,GADAP,EAAQ5C,GACI,QAAZmD,EAAInD,EAAEoD,cAAM,IAAAD,GAARA,EAAUvD,MAAO,CACnB,IAAIyD,EAAIC,KAAKC,MAAMvD,EAAEoD,OAAOxD,OAC5B+C,EAAcU,EAChB,MACEV,GACF,OAwCYtI,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBC,UAC/BF,EAAAA,EAAAA,KAAC+D,EAAAA,EAAY,CACXR,KAAK,SACLS,KAAK,QACL/D,UAAU,oCACVkH,QA3CAzC,UAAc,IAADyE,EAC/BxD,EAAEyD,iBACF,IAAIC,EAAuB,OAAbb,QAAa,IAAbA,GAAmB,QAANW,EAAbX,EAAezI,YAAI,IAAAoJ,OAAN,EAAbA,EAAqB1C,KAAKC,GAASA,EAAKhE,KAClD4G,EAAU,CACZC,QAASxB,EACTyB,SAAUH,GAERA,EAAQ7C,OAAS,UACbvF,GAASwI,EAAAA,EAAAA,IAAkBH,IACjC9I,IACA+H,IACF,EAiCkBtE,QAAQ,UACRwB,UAAU1F,EACVmE,UAAWrD,sBASrB,ECggBZ,EA1jBwBf,IAAsB,IAArB,YAAEa,GAAab,EACtC,MAAMmB,GAAWC,EAAAA,EAAAA,OACV6G,EAAQ2B,IAAarF,EAAAA,EAAAA,UAAS,OAC9BsF,EAAWC,IAAevF,EAAAA,EAAAA,UAAS,KACnCwF,EAAgBC,IAA4BzF,EAAAA,EAAAA,UAAS,CAAC,IACtD0F,EAAgBC,IAAqB3F,EAAAA,EAAAA,UAAS,CAAC,IAC/C4F,EAAgBC,IAAqB7F,EAAAA,EAAAA,WAAS,IAC9C5D,EAAsB0J,IAA2B9F,EAAAA,EAAAA,UAAS,CAAC,IAC3D+F,EAAgBC,IAAqBhG,EAAAA,EAAAA,WAAS,IAC9C9D,EAAM+J,IAAWjG,EAAAA,EAAAA,WAAS,IAC1BkG,EAAUC,IAAanG,EAAAA,EAAAA,UAAS,CAAEkG,UAAU,EAAO7H,GAAI,MACvD+H,EAAYC,IAAiBrG,EAAAA,EAAAA,UAAS,KACtCsG,EAAQC,IAAavG,EAAAA,EAAAA,UAAS,KAC9BwG,EAAMjK,IAAWyD,EAAAA,EAAAA,WAAS,IAC3B,WAAE3D,GAAU,YAAEG,GAAW,aAAEiK,KAAiBhK,EAAAA,EAAAA,KAC/CC,GAAUA,EAAMC,cAEb,cAAEwH,KAAkB1H,EAAAA,EAAAA,KAAaC,GAAUA,EAAM0H,iBAChDsC,GAAqBC,KAA0B3G,EAAAA,EAAAA,WAAS,IACzD,EAAEiC,KAAMC,EAAAA,EAAAA,MAER0E,GAA4BA,CAACvI,EAAIb,KACrC2C,QAAQC,IAAI/B,EAAG,SACf8B,QAAQC,IAAI5C,EAAK,QACba,GACFsI,IAAuB,GACvBhB,EAAkB,CAAEtH,GAAIA,EAAIb,KAAMA,MAElCmJ,IAAuB,GACvBpK,GAASiK,GACX,EAGIxE,GAA4B3D,IAChC2H,GAAkB,GAClBX,EAAUhH,EAAG,EAMTwI,GAA6BA,KACjCF,IAAuB,GACvBV,GAAQ,GACR1J,GAAQ,GACR4J,EAAU,CAAED,UAAU,EAAO7H,GAAI,IAAK,EAGlC0D,GAAoBM,IACxB,IAAI3G,EAAO,CACT8B,KAAU,OAAJ6E,QAAI,IAAJA,OAAI,EAAJA,EAAMlE,QACZG,UAAe,OAAJ+D,QAAI,IAAJA,OAAI,EAAJA,EAAM/D,WAEnB6B,QAAQC,IAAI1E,EAAK,QACjB6J,EAAY,IAAID,EAAW5J,IAC3BmK,GAAkB,GAClB,IAAItH,EAAa,CACfD,UAAW+D,EAAKhE,IAGlBzB,GAAS4B,EAAAA,EAAAA,IAAcD,EAAYjC,GAAa,GAGlDiB,EAAAA,EAAAA,YAAU,KAIRX,GAAS4B,EAAAA,EAAAA,IAHQ,CACfF,UAAW,KAEsBhC,GAAa,GAC/C,CAACM,IAEJ,MAAMgF,GAAkBf,IACtB,MAAMiG,EAASC,OAAOP,KAAK3F,EAAK,UAC5BiG,EACFA,EAAOE,QAGPjG,MACE,wEAEJ,EAGIc,GAAehB,IACnB,IAAIoG,EAAc,OAAHpG,QAAG,IAAHA,OAAG,EAAHA,EAAKqG,MAAM,KAC1B,GAAID,EAAU,CACZ,IAAIE,EAAeF,EAASA,EAAS9E,OAAS,GAAG+E,MAAM,KACvD,MAAM,GAANE,OAAUD,EAAaA,EAAahF,OAAS,GAAE,KAAAiF,OAC7CD,EAAaA,EAAahF,OAAS,GAEvC,GAGIL,GAAqBjB,IACzB,IAAIoG,EAAc,OAAHpG,QAAG,IAAHA,OAAG,EAAHA,EAAKqG,MAAM,KAEtBG,EADeJ,EAASA,EAAS9E,OAAS,GACZ+E,MAAM,KAExC,OADcG,EAAeA,EAAelF,OAAS,IAEnD,IAAK,KACL,IAAK,KACL,IAAK,MACL,IAAK,OAEL,IAAK,MAEL,IAAK,MACL,IAAK,MACL,IAAK,OACH,OAAOxG,EAAAA,EAAAA,KAAA,OAAKI,IAAK8E,EAAKjF,UAAU,cAGpC,EAGI+F,GAAsBA,CAACtD,EAAIb,KAC/B2I,EAAU,CAAED,UAAU,EAAM7H,GAAIA,EAAIb,KAAMA,GAAO,EAgB7C8J,GAAmBA,CAAChG,EAAGiG,KAC3B,GAAsB,OAAlBjG,EAAEC,OAAOL,MAAgB,CAC3B,IAAI3C,EAAa,CACfD,UAAW,KAEb1B,GAAS4B,EAAAA,EAAAA,IAAcD,EAAYjC,IACnCmJ,EAAyB,CACvB,CAAC8B,GAASjG,EAAEC,OAAOL,OAEvB,KAAO,CACL,IAAI3C,EAAa,IACZiH,EACH,CAAC+B,GAASjG,EAAEC,OAAOL,MACnB5C,UAAW,KAEbmH,EAAyB,CACvB,CAAC8B,GAASjG,EAAEC,OAAOL,QAErBtE,GAAS4B,EAAAA,EAAAA,IAAcD,EAAYjC,GACrC,GAEF6D,QAAQC,IAAIoF,EAAgB,kBAC5B,MA0COgC,GAAgBC,KAAqBzH,EAAAA,EAAAA,WAAS,GAK/C0H,IACJ/L,EAAAA,EAAAA,KAACgM,EAAAA,EAAO,CAACtJ,GAAG,UAASxC,SAAC,kCAExB,OACEC,EAAAA,EAAAA,MAAA0G,EAAAA,SAAA,CAAA3G,SAAA,EACEF,EAAAA,EAAAA,KAAA,WAAAE,UACEF,EAAAA,EAAAA,KAAA,OAAAE,UACEC,EAAAA,EAAAA,MAAC8C,EAAAA,EAAG,CAAA/C,SAAA,EACFF,EAAAA,EAAAA,KAACkD,EAAAA,EAAG,CAACC,GAAI,GAAGjD,UACVF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iDAAgDC,UAK7DF,EAAAA,EAAAA,KAAA,OAAAE,UACEC,EAAAA,EAAAA,MAAC8L,EAAAA,EAAM,CACLhI,QAAQ,cACRkD,QApBW+E,KAC3BJ,IAAmBD,GAAe,EAoBlB5L,UAAU,iCAAgCC,SAAA,EAE1CF,EAAAA,EAAAA,KAACmM,EAAAA,IAAQ,IAAG,IAAE7F,GAAE,mBAMvB2D,GAA4B,IAAVU,GACjBxK,EAAAA,EAAAA,MAAC+C,EAAAA,EAAG,CAACC,GAAI,GAAGjD,SAAA,EACVF,EAAAA,EAAAA,KAAA,WAASC,UAAU,cAAaC,UAC9BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,SACf,OAATyJ,QAAS,IAATA,OAAS,EAATA,EAAWlD,KAAI,CAACC,EAAMC,KAEnBxG,EAAAA,EAAAA,MAAA0G,EAAAA,SAAA,CAAA3G,SAAA,EACEF,EAAAA,EAAAA,KAACoM,EAAAA,GAAI,CACHnM,UAAU,aACVkH,QAASA,IAxDVzE,KACvB,IAAI2J,EAAc,IAAI1C,GAClBhD,EAAQ0F,EAAYC,WAAW5F,GAASA,EAAK/D,WAAaD,IAC9D,MAAM6J,EAAUF,EAAYG,MAAM,EAAG7F,GACrCiD,EAAY2C,GACZ,IAAI3J,EAAa,CACfD,UAAWD,GAGbzB,GAAS4B,EAAAA,EAAAA,IAAcD,EAAYjC,IACzB,KAAN+B,IACFkH,EAAY,IACZM,GAAkB,GACpB,EA2CuCuC,CAAgB/F,EAAK/D,WAAWzC,SAE9CwG,EAAK7E,QAER7B,EAAAA,EAAAA,KAAA,QAAMC,UAAU,UAASC,SAAC,iBAKzB,OAGb,IAEFF,EAAAA,EAAAA,KAACkD,EAAAA,EAAG,CAACC,GAAI,GAAGjD,UACVC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,MAAA,OACEF,UACE4L,GAAiB,qBAAuB,cACzC3L,SAAA,EAEDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mBAAkBC,SAAEoG,GAAE,aACpCtG,EAAAA,EAAAA,KAACoD,EAAAA,EAAI,CAACnD,UAAU,OAAMC,UACpBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,0CAAyCC,SAAA,EACtDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAACoD,EAAAA,EAAK0C,MAAK,CAAC7F,UAAU,eAAcC,SACjCoG,GAAE,aAELtG,EAAAA,EAAAA,KAACoD,EAAAA,EAAKE,QAAO,CACXC,KAAK,OACLC,YAAa8C,GAAE,UACfZ,SAnGIC,IAC1BiF,EAAUjF,EAAEC,OAAOL,OACnBmH,aAAajC,GACb,MAAMkC,EAAQC,YAAW,KACvB,IAAIhK,EAAa,CACfD,UAA+B,OAApBlC,QAAoB,IAApBA,OAAoB,EAApBA,EAAsBiC,GACjCiI,OAAQhF,EAAEC,OAAOL,OAEnBtE,GAAS4B,EAAAA,EAAAA,IAAcD,EAAYjC,GAAa,GAC/C,KACH+J,EAAciC,EAAM,EA0FEpH,MAAOoF,EACP1K,UAAU,qBAGdE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,KAACoD,EAAAA,EAAK0C,MAAK,CAAC7F,UAAU,eAAcC,SACjCoG,GAAE,qBAELnG,EAAAA,EAAAA,MAACiD,EAAAA,EAAKiC,OAAM,CACVpF,UAAU,uCACVsF,MAAqB,OAAdsE,QAAc,IAAdA,OAAc,EAAdA,EAAgB7E,SACvBU,SAAWC,GAAMgG,GAAiBhG,EAAG,YAAYzF,SAAA,EAEjDF,EAAAA,EAAAA,KAAA,UAAQuF,MAAM,MAAKrF,SAAEoG,GAAE,UACvBtG,EAAAA,EAAAA,KAAA,UAAQuF,MAAM,IAAGrF,SAAEoG,GAAE,gBACrBtG,EAAAA,EAAAA,KAAA,UAAQuF,MAAM,IAAGrF,SAAEoG,GAAE,qBAGzBnG,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,KAACoD,EAAAA,EAAK0C,MAAK,CAAC7F,UAAU,eAAcC,SACjCoG,GAAE,qBAELnG,EAAAA,EAAAA,MAACiD,EAAAA,EAAKiC,OAAM,CACVpF,UAAU,uCACVsF,MAAqB,OAAdsE,QAAc,IAAdA,OAAc,EAAdA,EAAgBgD,eACvBnH,SAAWC,GACTgG,GAAiBhG,EAAG,kBACrBzF,SAAA,EAEDF,EAAAA,EAAAA,KAAA,UAAQuF,MAAM,MAAKrF,SAAEoG,GAAE,UACvBtG,EAAAA,EAAAA,KAAA,UAAQuF,MAAM,MAAKrF,SAAEoG,GAAE,WACvBtG,EAAAA,EAAAA,KAAA,UAAQuF,MAAM,MAAKrF,SAAEoG,GAAE,gBACvBtG,EAAAA,EAAAA,KAAA,UAAQuF,MAAM,MAAKrF,SAAEoG,GAAE,aACvBtG,EAAAA,EAAAA,KAAA,UAAQuF,MAAM,QAAOrF,SAAEoG,GAAE,mBAa7BtG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACnBF,EAAAA,EAAAA,KAACiM,EAAAA,EAAM,CACLhI,QAAQ,cACRhE,UAAU,sBACVkH,QApKD2F,KACrBhD,EAAyB,CACvBiD,KAAM,aACN/H,SAAU,MACV6H,eAAgB,QAElB3C,GAAkB,GAClBU,EAAU,IAIV3J,GAAS4B,EAAAA,EAAAA,IAHQ,CACfF,UAAW,KAEsBhC,GAAa,EAyJFT,SAEvBoG,GAAE,sBAMbtG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOC,UACpBC,EAAAA,EAAAA,MAAC6M,EAAAA,EAAIC,UAAS,CAAChN,UAAU,QAAQiN,iBAAiB,YAAWhN,SAAA,EAC3DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iFAAgFC,SAAA,EAC7FF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kCAAiCC,UAC9CC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kCAAiCC,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,wBAAuBC,SAClCoG,GAAE,gBAELnG,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAACmN,EAAAA,EAAc,CACbC,UAAU,SACVC,QAAStB,GAAW7L,UAEpBF,EAAAA,EAAAA,KAACiM,EAAAA,EAAM,CACL9E,QAASA,IAAMvG,GAASiK,GACxB5K,UAAU,2DACV,gBAAc,wBACd,gBAAe4K,EAAK3K,SACrB,SAIHF,EAAAA,EAAAA,KAACsN,EAAAA,EAAQ,CAACC,GAAI1C,EAAM5K,UAAU,mBAAkBC,UAC9CC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAACiD,EAAAA,EAAK0C,MAAK,CACTqB,QAAS8D,GACThL,UAAU,sEAAqEC,SAAA,CAChF,KACIoG,GAAE,oBAEPnG,EAAAA,EAAAA,MAACiD,EAAAA,EAAK0C,MAAK,CACTqB,QAASA,IAAMmD,GAAQ,GACvBrK,UAAU,sEAAqEC,SAAA,CAChF,KACIoG,GAAE,+BAOjBnG,EAAAA,EAAAA,MAACqN,EAAAA,EAAG,CAACvJ,QAAQ,QAAQhE,UAAU,qBAAoBC,SAAA,EACjDF,EAAAA,EAAAA,KAACwN,EAAAA,EAAIC,KAAI,CAACxN,UAAU,qBAAoBC,UACtCF,EAAAA,EAAAA,KAACwN,EAAAA,EAAIpB,KAAI,CACPnM,UAAU,qBACVyN,SAAS,YAAWxN,UAEpBF,EAAAA,EAAAA,KAAC2N,EAAAA,IAAM,SAGX3N,EAAAA,EAAAA,KAACwN,EAAAA,EAAIC,KAAI,CAACxN,UAAU,qBAAoBC,UACtCF,EAAAA,EAAAA,KAACwN,EAAAA,EAAIpB,KAAI,CACPnM,UAAU,qBACVyN,SAAS,YAAWxN,UAEpBF,EAAAA,EAAAA,KAAC4N,EAAAA,IAAQ,eAKjBzN,EAAAA,EAAAA,MAAC6M,EAAAA,EAAIa,QAAO,CAAA3N,SAAA,EACVF,EAAAA,EAAAA,KAACgN,EAAAA,EAAIc,KAAI,CAACJ,SAAS,YAAWxN,SAC3B4K,IACC9K,EAAAA,EAAAA,KAAC+N,EAAAA,EAAY,KAEb/N,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,UAClB,OAAVQ,SAAU,IAAVA,QAAU,EAAVA,GAAY8F,QAAS,EACV,OAAV9F,SAAU,IAAVA,QAAU,EAAVA,GAAY+F,KAAKC,IAAU,IAADE,EACxB,OACE5G,EAAAA,EAAAA,KAAA6G,EAAAA,SAAA,CAAA3G,SACsB,IAAnBwG,EAAKI,WACJ9G,EAAAA,EAAAA,KAAA6G,EAAAA,SAAA,CAAA3G,UACEF,EAAAA,EAAAA,KAAA,OACEC,UAAU,cACV8G,cAAeA,IACbX,GAAiBM,GAClBxG,UAEDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAACgH,EAAAA,IAAQ,CAAC/G,UAAU,iBACpBE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,mBAAkBC,SAC3B,OAAJwG,QAAI,IAAJA,OAAI,EAAJA,EAAMlE,UAEJ,OAAJkE,QAAI,IAAJA,GAAAA,EAAMQ,MACLlH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,UACzBC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,cAAaC,SAAA,CACvBoG,GAAE,YAAa,IACX,OAAJI,QAAI,IAAJA,GAAU,QAANE,EAAJF,EAAMQ,YAAI,IAAAN,OAAN,EAAJA,EAAY/E,UAIjB,OAGJ1B,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,UACEC,UAAU,2BACVkH,QAASA,IACPnB,GACEU,EAAKhE,GACL,UAEHxC,UAEDF,EAAAA,EAAAA,KAACqH,EAAAA,IAAU,OAEbrH,EAAAA,EAAAA,KAAA,UACEC,UAAU,0BACVkH,QAASA,IACP8D,GACEvE,EAAKhE,GACD,OAAJgE,QAAI,IAAJA,OAAI,EAAJA,EAAMlE,SAETtC,UAEDF,EAAAA,EAAAA,KAACgO,EAAAA,IAAM,OAEThO,EAAAA,EAAAA,KAAA,UACEmH,QAASA,IACPd,GACM,OAAJK,QAAI,IAAJA,OAAI,EAAJA,EAAMhE,IAGVzC,UAAU,0BAAyBC,UAEnCF,EAAAA,EAAAA,KAACsH,EAAAA,IAAa,iBAOxBtH,EAAAA,EAAAA,KAAA6G,EAAAA,SAAA,CAAA3G,UACEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,SACtBiG,GAAsB,OAAJO,QAAI,IAAJA,OAAI,EAAJA,EAAMlE,YAE3BrC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWC,SACxBiG,GAAsB,OAAJO,QAAI,IAAJA,OAAI,EAAJA,EAAMlE,YAE3BxC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,kBAAiBC,SAC9BgG,GAAgB,OAAJQ,QAAI,IAAJA,OAAI,EAAJA,EAAMlE,eAGvBrC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EAEzBF,EAAAA,EAAAA,KAAA,UACEC,UAAU,8BACVkH,QAASA,IACPlB,GAAmB,OAAJS,QAAI,IAAJA,OAAI,EAAJA,EAAMlE,SACtBtC,UAEDF,EAAAA,EAAAA,KAACoH,EAAAA,IAAU,OAEbpH,EAAAA,EAAAA,KAAA,UACEC,UAAU,2BACVkH,QAASA,IACPnB,GACEU,EAAKhE,GACL,QAEHxC,UAEDF,EAAAA,EAAAA,KAACqH,EAAAA,IAAU,OAEbrH,EAAAA,EAAAA,KAAA,UACEmH,QAASA,IACPd,GACM,OAAJK,QAAI,IAAJA,OAAI,EAAJA,EAAMhE,IAGVzC,UAAU,0BAAyBC,UAEnCF,EAAAA,EAAAA,KAACsH,EAAAA,IAAa,eAMvB,KAIPtH,EAAAA,EAAAA,KAACuH,EAAAA,EAAW,SAKpBvH,EAAAA,EAAAA,KAACgN,EAAAA,EAAIc,KAAI,CAACJ,SAAS,YAAWxN,UAC5BF,EAAAA,EAAAA,KAACiO,EAAgB,CACfvN,WAAYA,GACZsF,oBAAqBA,GACrBC,eAAgBA,GAChBC,YAAaA,GACbC,kBAAmBA,GACnBC,iBAAkBA,GAClBC,yBAA0BA,4BAW9CrG,EAAAA,EAAAA,KAACkO,EAAY,CACX3N,KAAMwK,GACNvK,YAAa0K,GACbzK,qBAAsBA,EACtBV,KAAMgK,EACNrJ,WAAYA,GACZC,YAAaA,EACbC,QAASA,KAEXZ,EAAAA,EAAAA,KAACmO,EAAgB,CACf5N,KAAMA,EACNC,YAAa0K,GACbzK,qBAAsBA,EACtBE,YAAaA,EACbC,QAASA,KAEXZ,EAAAA,EAAAA,KAACoO,EAAU,CACT7N,KAAM6J,EACN5J,YAngB4B6N,KAChChE,GAAkB,EAAM,EAmgBpBtC,OAAQA,KAEV/H,EAAAA,EAAAA,KAACsO,EAAAA,EAAiB,CAChBtK,KACoB,WAAV,OAARuG,QAAQ,IAARA,OAAQ,EAARA,EAAU1I,MAAgB,wHAAA4J,OAEiB,OAARlB,QAAQ,IAARA,OAAQ,EAARA,EAAU1I,KAAI,KAEnDtB,KAAc,OAARgK,QAAQ,IAARA,OAAQ,EAARA,EAAUA,SAChB/J,YAAa0K,GACb/D,QA7bgBxB,IACpBA,EAAEyD,iBACFnI,GACEsN,EAAAA,EAAAA,IAA6B,OAARhE,QAAQ,IAARA,OAAQ,EAARA,EAAU7H,IAAI,KACjC,IAAIE,EAAa,CACfD,UAA+B,OAApBlC,QAAoB,IAApBA,OAAoB,EAApBA,EAAsBiC,IAEnC8H,EAAU,CAAED,UAAU,EAAO7H,GAAI,KACjCzB,GAAS4B,EAAAA,EAAAA,IAAcD,EAAYjC,GAAa,IAEnD,EAobGE,YAAaA,OAEd,C,gHChmBP,MAoCA,EApC0Bf,IAAyF,IAAxF,KAAEkE,EAAI,KAACzD,EAAI,YAAEC,EAAW,QAAC2G,EAAO,aAAEqH,EAAY,YAAC3N,EAAW,KAAC0C,EAAI,UAACkL,EAAS,QAACC,GAAQ5O,EAOzG,OACIK,EAAAA,EAAAA,MAAC2B,EAAAA,EAAK,CAACvB,KAAMA,EAAMwB,OAAS4D,GAAInF,EAAYmF,GAAI3D,UAAQ,EAACC,WAAS,EAAChC,UAAU,eAAcC,SAAA,EACvFF,EAAAA,EAAAA,KAAC8B,EAAAA,EAAMI,OAAM,CAACC,aAAW,EAAClC,UAAU,mBAIpCD,EAAAA,EAAAA,KAAC8B,EAAAA,EAAMM,KAAI,CAAAlC,UACPC,EAAAA,EAAAA,MAACiD,EAAAA,EAAI,CAAAlD,SAAA,EACDF,EAAAA,EAAAA,KAACoD,EAAAA,EAAKC,MAAK,CAACpD,UAAU,OAAMC,UACxBF,EAAAA,EAAAA,KAACoD,EAAAA,EAAK0C,MAAK,CAAC7F,UAAU,sBAAqBC,SAAE8D,OAEjD7D,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EACxBF,EAAAA,EAAAA,KAAC+D,EAAAA,EAAY,CACTR,KAAK,SACLS,KAAK,MACLmD,QAAS5D,EArBdoC,IAIfwB,EAAQxB,EAHC,CACLgJ,OAAQpL,GAEG,EAiBmCiL,EAE9BvO,UAAU,yCACVgE,QAAQ,cACRwB,SAAU5E,EACVqD,UAAWrD,KAEfb,EAAAA,EAAAA,KAACiM,EAAAA,EAAM,CAAChI,QAAQ,cAAckD,QAAS3G,EAAaP,UAAU,mFAAkFC,SAAE,iBAI1J,C","sources":["components/atomic/NoDataFound.jsx","components/atomic/CreateFolder.jsx","components/atomic/RexettUploadFile.jsx","components/common/Documents/DocumentListView.jsx","components/common/Documents/ShareModal.jsx","components/common/Documents/RexettDocuments.jsx","pages/views/Modals/ConfirmationModal.jsx"],"sourcesContent":["import React from 'react'\r\nimport errorImg from '../../assets/img/warning-icon.gif'\r\nconst NoDataFound = ({data}) => {\r\n  return (\r\n    <div className='no-data-container'>\r\n      <div className='no-data'>\r\n        <img src={errorImg} />{data?data:\"No Data Found\"}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NoDataFound","import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport RexettButton from \"./RexettButton\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {createNewFolderAndFile, getFolderData, renameFolderAndFile } from \"../../redux/slices/clientDataSlice\";\r\nconst CreateFolder = ({ show, handleClose,currentFolderDetails,data,folderData,currentRole,setOpen }) => {\r\n    const {smallLoader}=useSelector(state=>state.clientData);\r\n    const dispatch=useDispatch()\r\n    const {\r\n        register,\r\n        setValue,\r\n        handleSubmit,\r\n        formState: { errors, isDirty, isValid, isSubmitting },\r\n    } = useForm({});\r\n    useEffect(()=>{\r\n      setValue(\"s3_path\",data?.name)\r\n    },[data])\r\n\r\n    const onSubmit = (values) => {\r\n      \r\n          if(data?.name){\r\n            let editName={\r\n                name:values.s3_path,\r\n            }\r\n            dispatch(renameFolderAndFile(editName,data?.id,(parent_id)=>{\r\n                let filterData={\r\n                    parent_id:currentFolderDetails?.id\r\n                }\r\n                handleClose()\r\n                setOpen(false)\r\n                setValue(\"s3_path\",\"\")\r\n                dispatch(getFolderData(filterData,currentRole))\r\n            }))\r\n          }else{\r\n            let folderData= {\r\n                \"contract_id\": currentFolderDetails?.contract_id,\r\n                \"file_type\": 0,\r\n                \"parent_id\": currentFolderDetails?.id,\r\n                \"added_by\": currentRole,\r\n                \"type\": 1,\r\n                \"s3_path\": values.s3_path,\r\n              }\r\n            dispatch(createNewFolderAndFile(folderData, (parent_id)=>{\r\n                let filterData={\r\n                    parent_id:parent_id\r\n                }\r\n                handleClose()\r\n                setValue(\"s3_path\",\"\")\r\n                dispatch(getFolderData(filterData,currentRole))\r\n            }))\r\n          }\r\n       \r\n    }\r\n\r\n    const isFolderAlreadyExists = (folderName) => {\r\n        return folderData?.some(existingFolder => existingFolder.s3_path === folderName);\r\n    };\r\n\r\n    const validateFolderName = (folderName) => {\r\n        if (!folderName) {\r\n            return \"Please Enter Folder Name\";\r\n        } else if (isFolderAlreadyExists(folderName)) {\r\n            return \"Folder already exists\";\r\n        }\r\n        return true;\r\n    };\r\n\r\n    return (\r\n        <Modal show={show} onHide={handleClose} centered className=\"custom-modal\" animation>\r\n            <Modal.Header closeButton className=\"border-0 pb-3\">\r\n                {/* <Modal.Title></Modal.Title> */}\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <h3 className=\"popup-heading\">{data?.name?\"Edit Folder\":\"Create Folder\"}</h3>\r\n                <form onSubmit={handleSubmit(onSubmit)} noValidate>\r\n                    <div className=\"experience-container\">\r\n                        <Row>\r\n                            <Col md=\"12\">\r\n                                {/* <Form.Group className=\"mb-4\">\r\n                                    <Form.Label>Select Category</Form.Label>\r\n                                    <Form.Select>\r\n                                        <option value=\"\" selected disabled>Select Category</option>\r\n                                        <option value=\"invoices\">Invoices</option>\r\n                                        <option value=\"contracts\">Contracts</option>\r\n                                        <option value=\"cv\">CV</option>\r\n                                        <option value=\"others\">Others</option>\r\n                                    </Form.Select>\r\n                                    <input type=\"text\"/>\r\n                                    \r\n                                </Form.Group> */}\r\n                                <Form.Group className=\"mb-4 \">\r\n                                    <Form.Control type=\"text\" className=\"common-field\" placeholder=\"Enter Folder Name\"\r\n                                        name=\"s3_path\"\r\n                                        {...register(\"s3_path\", {\r\n                                            validate: validateFolderName\r\n                                        })}\r\n                                    />\r\n                          <p className=\"error-message\">{errors.s3_path?.message}</p>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                        <RexettButton\r\n                            type=\"submit\"\r\n                            text={data?.name ? \"Edit\":\"Create\"}\r\n                            className=\"main-btn px-4 font-14 fw-semibold\"\r\n                            variant=\"transparent\"\r\n                            isLoading={smallLoader}\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\nexport default CreateFolder;","import React, { useState } from \"react\";\r\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport { callPreSignedUrlResponse, createNewFolderAndFile, filePreassignedUrlGenerate, getFolderData } from \"../../redux/slices/clientDataSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport RexettButton from \"./RexettButton\";\r\nimport { useForm } from \"react-hook-form\";\r\nconst RexettUploadFile = ({ show, handleClose, currentFolderDetails, currentRole, setOpen }) => {\r\n    const [selectedFile, setSelectedFile] = useState(null)\r\n    const[details,setDetails] = useState()\r\n    const dispatch = useDispatch()\r\n    const { smallLoader } = useSelector(state => state.clientData);\r\n    const {\r\n        register,\r\n        setValue,\r\n        handleSubmit,\r\n        formState: { errors, isDirty, isValid, isSubmitting },\r\n    } = useForm({});\r\n\r\n    console.log(details,\"details\")\r\n\r\n    console.log(currentFolderDetails , \"currentFolderDetails\")\r\n   \r\n    const onSubmit = async (values) => {\r\n        console.log(values ,\"values\")\r\n        setDetails(values)\r\n        let formData = new FormData();\r\n        formData.append(\"file\", values.file_name[0]);\r\n        console.log(selectedFile , \"selectedFile\")\r\n        \r\n        if (values?.category === \"3\" && values?.file_name[0]?.type !== \"application/pdf\") {\r\n            alert(\"Only PDF files are allowed for Invoices category.\");\r\n            return; \r\n        }\r\n        dispatch(filePreassignedUrlGenerate(formData, (url) => {\r\n            let fileData = {\r\n                \"contract_id\": currentFolderDetails.contract_id,\r\n                \"file_type\": 1,\r\n                \"parent_id\": currentFolderDetails.id,\r\n                \"added_by\": currentRole,\r\n                \"type\": +values.category,\r\n                \"s3_path\": url,\r\n            }\r\n            dispatch(createNewFolderAndFile(fileData, (parent_id) => {\r\n                let data = {\r\n                    parent_id: parent_id\r\n                }\r\n                handleClose();\r\n                setOpen(false);\r\n                setSelectedFile(null);\r\n                dispatch(getFolderData(data, currentRole));\r\n            }));\r\n        }));\r\n    };\r\n    \r\n    return (\r\n        <Modal show={show} onHide={handleClose} centered className=\"custom-modal\" animation>\r\n            <Modal.Header closeButton className=\"border-0 pb-3\">\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <h3 className=\"popup-heading\">Upload file</h3>\r\n                <form onSubmit={handleSubmit(onSubmit)} noValidate>\r\n                    <div className=\"experience-container\">\r\n                        <Row>\r\n                            <Col md=\"12\">\r\n                                <Form.Group className=\"mb-4\">\r\n                                    {/* <Form.Label>Select Category</Form.Label> */}\r\n                                    <Form.Select className=\"common-field\"\r\n                                        {...register(\"category\", { required: \"Please select a Category\" })}\r\n                                    >\r\n                                        <option value=\"\" selected disabled>Select Category</option>\r\n                                        <option value=\"3\">Invoices</option>\r\n                                        <option value=\"1\">Contracts</option>\r\n                                        <option value=\"2\">CV</option>\r\n                                        <option value=\"4\">Others</option>\r\n                                    </Form.Select>\r\n                                    <Form.Control type=\"file\" className=\"d-none\" id=\"upload-file\"\r\n                                        name=\"file_name\"\r\n                                        {...register(\"file_name\", {\r\n                                            onChange: (e) => setSelectedFile(e.target.files[0]),\r\n                                            required: {\r\n                                                value: true,\r\n                                            },\r\n                                        })}\r\n                                    />\r\n                                    <Form.Label htmlFor=\"upload-file\" className=\"upload-file-label\">Upload File</Form.Label>\r\n                                </Form.Group>\r\n                                {selectedFile ? <div>Selected File:<span className=\"fs-6\">{selectedFile?.name}</span></div> : \"\"}\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                        <RexettButton\r\n                            type=\"submit\"\r\n                            text=\"Upload\"\r\n                            className=\"main-btn px-4 font-14 fw-semibold\"\r\n                            variant=\"transparent\"\r\n                            disabled={smallLoader && details?.category===\"3\" ? true : false}\r\n                            isLoading={smallLoader}\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\nexport default RexettUploadFile;","import React from 'react'\r\nimport { FaFilePdf } from \"react-icons/fa\";\r\nimport { HiMiniUser } from \"react-icons/hi2\";\r\nimport { FaTrashCan } from \"react-icons/fa6\";\r\nimport { FaDownload } from \"react-icons/fa6\";\r\nimport { FaFolder } from \"react-icons/fa\";\r\nimport NoDataFound from '../../atomic/NoDataFound';\r\nimport { IoIosShareAlt } from 'react-icons/io';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst DocumentListView = ({folderData,deleteFileAndFolder,handleDownload,getFileName,generateFileImage,toggleFolderView,handleShowShareFileModal}) => {\r\n  const { t } = useTranslation()\r\n    return (\r\n    <div>\r\n    <div className=\"table-responsive\">\r\n        <table className=\"table document-table table-ui-custom\">\r\n            <thead>\r\n                <th className=\"document-th filename-th px-3\">{t(\"name\")}</th>\r\n                <th className=\"document-th owner-th\">{t(\"owner\")}</th>\r\n                <th className=\"document-th location-th\">{t(\"location\")}</th>\r\n                <th className=\"document-th action-th\">{t(\"action\")}</th>\r\n            </thead>\r\n            <tbody>\r\n               {folderData.length>0?folderData?.map((item,index)=>{\r\n                return (\r\n                  <>\r\n                  <tr>\r\n                    <td className=\"document-data filename-data px-3\">\r\n                        <div className=\"d-flex gap-2 align-items-center filename-data\">\r\n\r\n                            {\r\n                                item.file_type!==0?<>\r\n                                <div className=\"file-icon\">\r\n                                {generateFileImage(item?.s3_path)}\r\n                            </div>\r\n                            <span>{getFileName(item?.s3_path)}</span>\r\n                                </>\r\n                                :\r\n                                <>\r\n                                      <div className=\"folder-icon\" onDoubleClick={()=>toggleFolderView(item)}>\r\n                                <FaFolder />\r\n                            </div>\r\n                            <span>{item.s3_path}</span>\r\n                                </>\r\n                            }\r\n                            </div>\r\n                        \r\n                    </td>\r\n                    <td className=\"document-data\">\r\n                        <div className=\"d-flex align-items-center owner-icon gap-1\">\r\n                            <span className=\"me-icon\"><HiMiniUser /></span><p className=\"mb-0\">{item?.user ? item?.user?.name:\"Me\"}</p>\r\n                        </div>        \r\n                    </td>\r\n                    <td className=\"document-data\">{item?.user ? \"Shared\":\"My Documents\"}</td>\r\n                    <td className=\"document-data\">\r\n                        <div className=\"d-flex gap-3\">\r\n                            <button className=\"download-btn doc-action-btn\" onClick={() => handleDownload(item?.s3_path)}><FaDownload />\r\n                            </button>\r\n                            <button className=\"trash-btn doc-action-btn\" onClick={() => deleteFileAndFolder(item.id, item.file_type==0?\"folder\": \"file\")} ><FaTrashCan /></button>\r\n                            <button onClick={()=>handleShowShareFileModal(item?.id)} className=\"view-btn doc-action-btn\"><IoIosShareAlt /></button>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n                  </>\r\n                )\r\n               }):<NoDataFound/> }\r\n                {/* <tr>\r\n                    <td className=\"document-data filename-data\">\r\n                        <div className=\"d-flex gap-2 align-items-center\">\r\n                            <div className=\"file-icon\">\r\n                                <FaFilePdf />\r\n                            </div>\r\n                            <span>PDF Presentation</span>\r\n                        </div>\r\n                    </td>\r\n                    <td className=\"document-data\">\r\n                        <div className=\"d-flex align-items-center owner-icon gap-1\">\r\n                            <span className=\"share-user-icon\">C</span><p className=\"mb-0 owner-email\">client123@gmail.com</p>\r\n                        </div>        \r\n                    </td>\r\n                    <td className=\"document-data\">Shared with me</td>\r\n                    <td className=\"document-data\">\r\n                        <div className=\"d-flex gap-3\">\r\n                            <button className=\"download-btn doc-action-btn\"><FaDownload />\r\n                            </button>\r\n                            <button className=\"trash-btn doc-action-btn\" ><FaTrashCan /></button>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td className=\"document-data filename-data px-3\">\r\n                        <div className=\"d-flex gap-2 align-items-center filename-data\">\r\n                            <div className=\"folder-icon\">\r\n                                <FaFolder />\r\n                            </div>\r\n                            <span>New Folder</span>\r\n                        </div>\r\n                    </td>\r\n                    <td className=\"document-data\">\r\n                        <div className=\"d-flex align-items-center owner-icon gap-1\">\r\n                            <span className=\"me-icon\"><HiMiniUser /></span><p className=\"mb-0\">Me</p>\r\n                        </div>      \r\n                    </td>\r\n                    <td className=\"document-data\">My Documents</td>\r\n                    <td className=\"document-data\">\r\n                        <div className=\"d-flex gap-3\">\r\n                            <button className=\"download-btn doc-action-btn\"><FaDownload />\r\n                            </button>\r\n                            <button className=\"trash-btn doc-action-btn\" ><FaTrashCan /></button>\r\n                        </div>\r\n                    </td>\r\n                </tr> */}\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>\r\n  )\r\n}\r\n\r\nexport default DocumentListView\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport RexettButton from \"../../atomic/RexettButton\";\r\nimport {\r\n  getDocumentShare,\r\n  shareBelongisFile,\r\n} from \"../../../redux/slices/developerDataSlice\";\r\n\r\nconst baseTagifySettings = {\r\n  blacklist: [\"xxx\", \"yyy\", \"zzz\"],\r\n  maxTags: 6,\r\n  placeholder: \"Add People\",\r\n  dropdown: {\r\n    enabled: 1,\r\n    maxItems: 5,\r\n  },\r\n};\r\n\r\nconst ShareModal = ({ show, handleClose, fileId }) => {\r\n  const tagifyRef1 = useRef();\r\n  const dispatch = useDispatch();\r\n  const [tagifySettings, setTagifySettings] = useState(baseTagifySettings);\r\n  const [tagifyProps, setTagifyProps] = useState({});\r\n  const [sharedTags, setSharedTags] = useState();\r\n  const [data, setData] = useState();\r\n  const { shareDocument, smallLoader } = useSelector(\r\n    (state) => state.developerData\r\n  );\r\n  const suggestedTags =\r\n    shareDocument?.data?.map((item) => {\r\n      return { value: item.id, label: item.name };\r\n    }) || [];\r\n\r\n  useEffect(() => {\r\n    dispatch(getDocumentShare());\r\n    setData();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setData(e);\r\n    if (e.detail?.value) {\r\n      let d = JSON.parse(e.detail.value);\r\n      setSharedTags(d);\r\n    } else {\r\n      setSharedTags();\r\n    }\r\n  };\r\n\r\n  const handleShare = async (e) => {\r\n    e.preventDefault();\r\n    let user_id = shareDocument?.data?.map((item) => item.id);\r\n    let payload = {\r\n      file_id: fileId,\r\n      user_ids: user_id,\r\n    };\r\n    if (user_id.length > 0) {\r\n      await dispatch(shareBelongisFile(payload));\r\n      handleClose();\r\n      setData();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={handleClose}\r\n      centered\r\n      className=\"custom-modal\"\r\n      animation\r\n    >\r\n      <Modal.Header closeButton className=\"border-0 pb-3\"></Modal.Header>\r\n\r\n      <Modal.Body>\r\n        <h3 className=\"popup-heading\">Share</h3>\r\n        <Form>\r\n          <div className=\"experience-container\">\r\n            <Row>\r\n              <Col md=\"12\">\r\n                <Form.Group className=\"mb-4\">\r\n                  <Select\r\n                    className=\"basic-single\"\r\n                    options={suggestedTags}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <div>\r\n                  <div className=\"text-center mt-4\">\r\n                    <RexettButton\r\n                      type=\"submit\"\r\n                      text=\"Share\"\r\n                      className=\"main-btn px-4 font-14 fw-semibold\"\r\n                      onClick={handleShare}\r\n                      variant=\"success\"\r\n                      disabled={data ? false : true}\r\n                      isLoading={smallLoader}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ShareModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Button,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Tabs,\r\n  Tab,\r\n  Nav,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n} from \"react-bootstrap\";\r\nimport { FaFolder } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaEye } from \"react-icons/fa\";\r\nimport { FaTrashCan } from \"react-icons/fa6\";\r\nimport { FaDownload } from \"react-icons/fa6\";\r\nimport { FaImage } from \"react-icons/fa6\";\r\nimport { MdEdit } from \"react-icons/md\";\r\nimport { MdPictureAsPdf } from \"react-icons/md\";\r\nimport { FaFileAlt } from \"react-icons/fa\";\r\nimport userImage from \"../../../assets/img/user-img.jpg\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  _deleteFileAndFolder,\r\n  createNewFolderAndFile,\r\n  filePreassignedUrlGenerate,\r\n  getFolderData,\r\n} from \"../../../redux/slices/clientDataSlice\";\r\nimport CreateFolder from \"../../atomic/CreateFolder\";\r\nimport RexettUploadFile from \"../../atomic/RexettUploadFile\";\r\nimport ConfirmationModal from \"../../../pages/views/Modals/ConfirmationModal\";\r\nimport ScreenLoader from \"../../atomic/ScreenLoader\";\r\nimport NoDataFound from \"../../atomic/NoDataFound\";\r\nimport { IoGrid } from \"react-icons/io5\";\r\nimport { FaListUl } from \"react-icons/fa6\";\r\nimport { FaFilePdf } from \"react-icons/fa\";\r\nimport { HiMiniUser } from \"react-icons/hi2\";\r\nimport DocumentListView from \"./DocumentListView\";\r\nimport { IoIosShareAlt } from \"react-icons/io\";\r\nimport ShareModal from \"./ShareModal\";\r\nimport { FaFilter } from \"react-icons/fa\";\r\nimport { getDocumentShare } from \"../../../redux/slices/developerDataSlice\";\r\nimport { shareDocument } from \"../../../redux/slices/developerDataSlice\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst RexettDocuments = ({ currentRole }) => {\r\n  const dispatch = useDispatch();\r\n  const [fileId, setFileID] = useState(null);\r\n  const [bradCrump, setBradCrum] = useState([]);\r\n  const [allFilterValue, setAllCurrentFilterValue] = useState({});\r\n  const [editFolderName, setEditFolderName] = useState({});\r\n  const [showFolderView, setShowFolderView] = useState(false);\r\n  const [currentFolderDetails, setCurrentFolderDetails] = useState({});\r\n  const [sharefileModal, setShareFileModal] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [isDelete, setDelete] = useState({ isDelete: false, id: \"\" });\r\n  const [timerValue, setTimerValue] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const { folderData, smallLoader, screenLoader } = useSelector(\r\n    (state) => state.clientData\r\n  );\r\n  const { shareDocument } = useSelector((state) => state.developerData);\r\n  const [showUploadFileModal, setShowUploadFileModal] = useState(false);\r\n  const { t } = useTranslation();\r\n\r\n  const handleShowUploadFileModal = (id, name) => {\r\n    console.log(id,\"idddd\")\r\n    console.log(name,\"name\")\r\n    if (id) {\r\n      setShowUploadFileModal(true);\r\n      setEditFolderName({ id: id, name: name });\r\n    } else {\r\n      setShowUploadFileModal(true);\r\n      setOpen(!open);\r\n    }\r\n  };\r\n\r\n  const handleShowShareFileModal = (id) => {\r\n    setShareFileModal(true);\r\n    setFileID(id);\r\n  };\r\n  const handleCloseShareFileModal = () => {\r\n    setShareFileModal(false);\r\n  };\r\n\r\n  const handleCloseUploadFileModal = () => {\r\n    setShowUploadFileModal(false);\r\n    setShow(false);\r\n    setOpen(false);\r\n    setDelete({ isDelete: false, id: \"\" });\r\n  };\r\n\r\n  const toggleFolderView = (item) => {\r\n    let data = {\r\n      name: item?.s3_path,\r\n      parent_id: item?.parent_id,\r\n    };\r\n    console.log(data,\"data\")\r\n    setBradCrum([...bradCrump, data]);\r\n    setShowFolderView(true);\r\n    let filterData = {\r\n      parent_id: item.id,\r\n    };\r\n\r\n    dispatch(getFolderData(filterData, currentRole));\r\n  };\r\n\r\n  useEffect(() => {\r\n    let filterData = {\r\n      parent_id: \"0\",\r\n    };\r\n    dispatch(getFolderData(filterData, currentRole));\r\n  }, [dispatch]);\r\n\r\n  const handleDownload = (url) => {\r\n    const newTab = window.open(url, \"_blank\");\r\n    if (newTab) {\r\n      newTab.focus();\r\n    } else {\r\n      // If the popup blocker prevents opening the new tab\r\n      alert(\r\n        \"Please allow pop-ups for this site to download the file in a new tab.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const getFileName = (url) => {\r\n    let fileName = url?.split(\"/\");\r\n    if (fileName) {\r\n      let splitWithDot = fileName[fileName.length - 1].split(\".\");\r\n      return `${splitWithDot[splitWithDot.length - 2]}.${\r\n        splitWithDot[splitWithDot.length - 1]\r\n      }`;\r\n    }\r\n  };\r\n\r\n  const generateFileImage = (url) => {\r\n    let fileName = url?.split(\"/\");\r\n    let splitWithDot = fileName[fileName.length - 1];\r\n    let fileExtWithDot = splitWithDot.split(\".\");\r\n    let fileExt = fileExtWithDot[fileExtWithDot.length - 1];\r\n    switch (fileExt) {\r\n      case \"ts\":\r\n      case \"js\":\r\n      case \"txt\":\r\n      case \"docx\":\r\n      // return <FaFileAlt />\r\n      case \"pdf\":\r\n      // return <MdPictureAsPdf />\r\n      case \"png\":\r\n      case \"jpg\":\r\n      case \"jpeg\":\r\n        return <img src={url} className=\"doc-image\" />;\r\n\r\n      default:\r\n    }\r\n  };\r\n\r\n  const deleteFileAndFolder = (id, name) => {\r\n    setDelete({ isDelete: true, id: id, name: name });\r\n  };\r\n\r\n  const handleDelete = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      _deleteFileAndFolder(isDelete?.id, () => {\r\n        let filterData = {\r\n          parent_id: currentFolderDetails?.id,\r\n        };\r\n        setDelete({ isDelete: false, id: \"\" });\r\n        dispatch(getFolderData(filterData, currentRole));\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleFilterData = (e, filter) => {\r\n    if (e.target.value == \"All\") {\r\n      let filterData = {\r\n        parent_id: \"0\",\r\n      };\r\n      dispatch(getFolderData(filterData, currentRole));\r\n      setAllCurrentFilterValue({\r\n        [filter]: e.target.value,\r\n      });\r\n    } else {\r\n      let filterData = {\r\n        ...allFilterValue,\r\n        [filter]: e.target.value,\r\n        parent_id: \"0\",\r\n      };\r\n      setAllCurrentFilterValue({\r\n        [filter]: e.target.value,\r\n      });\r\n      dispatch(getFolderData(filterData, currentRole));\r\n    }\r\n  };\r\n  console.log(allFilterValue, \"allFilterValue\");\r\n  const clearAllFilter = () => {\r\n    setAllCurrentFilterValue({\r\n      date: \"dd-mm-yyyy\",\r\n      category: \"All\",\r\n      file_extension: \"All\",\r\n    });\r\n    setShowFolderView(false);\r\n    setSearch(\"\");\r\n    let filterData = {\r\n      parent_id: \"0\",\r\n    };\r\n    dispatch(getFolderData(filterData, currentRole));\r\n  };\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearch(e.target.value);\r\n    clearTimeout(timerValue);\r\n    const timer = setTimeout(() => {\r\n      let filterData = {\r\n        parent_id: currentFolderDetails?.id,\r\n        search: e.target.value,\r\n      };\r\n      dispatch(getFolderData(filterData, currentRole));\r\n    }, 500);\r\n    setTimerValue(timer);\r\n  };\r\n  const bradCrumpHandle = (id) => {\r\n    let copyBrdCrmb = [...bradCrump];\r\n    let index = copyBrdCrmb.findIndex((item) => item.parent_id == id);\r\n    const newData = copyBrdCrmb.slice(0, index);\r\n    setBradCrum(newData);\r\n    let filterData = {\r\n      parent_id: id,\r\n    };\r\n\r\n    dispatch(getFolderData(filterData, currentRole));\r\n    if (id == \"0\") {\r\n      setBradCrum([]);\r\n      setShowFolderView(false);\r\n    }\r\n  };\r\n\r\n  const [showFilterMenu, setShowFilterMenu] = useState(false);\r\n\r\n  const handleShowFilterMenu = () => {\r\n    setShowFilterMenu(!showFilterMenu);\r\n  };\r\n  const doctooltip = (\r\n    <Tooltip id=\"tooltip\">Create folder or Upload files</Tooltip>\r\n  );\r\n  return (\r\n    <>\r\n      <section>\r\n        <div>\r\n          <Row>\r\n            <Col md={12}>\r\n              <div className=\"d-flex flex-wrap align-items-center gap-2 mb-4\">\r\n                {/* <Button onClick={() => setOpen(!open)} aria-controls=\"example-collapse-text\" aria-expanded={open}>+ New</Button> */}\r\n                {/* <div>\r\n                                    <Form.Label className=\"main-btn px-4 cursor-pointer upload-btn mb-0\" onClick={() => setShow(true)}>+ Upload File</Form.Label>\r\n                                </div> */}\r\n                <div>\r\n                  <Button\r\n                    variant=\"transparent\"\r\n                    onClick={handleShowFilterMenu}\r\n                    className=\"main-btn outline-main-btn px-4\"\r\n                  >\r\n                    <FaFilter /> {t(\"filter\")}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n\r\n            {showFolderView && search == \"\" ? (\r\n              <Col md={12}>\r\n                <section className=\"folder-view\">\r\n                  <div className=\"breadcrumb\">\r\n                    {bradCrump?.map((item, index) => {\r\n                      return (\r\n                        <>\r\n                          <Link\r\n                            className=\"bread-link\"\r\n                            onClick={() => bradCrumpHandle(item.parent_id)}\r\n                          >\r\n                            {item.name}\r\n                          </Link>\r\n                          <span className=\"divider\"> &gt; </span>\r\n                        </>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </section>{\" \"}\r\n              </Col>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <Col md={12}>\r\n              <div className=\"d-md-flex gap-3\">\r\n                <div\r\n                  className={\r\n                    showFilterMenu ? \"side-filter active\" : \"side-filter\"\r\n                  }\r\n                >\r\n                  <h3 className=\"section-head-sub\">{t(\"filter\")}</h3>\r\n                  <Form className=\"mb-4\">\r\n                    <div className=\"filter-section gap-3 align-items-center\">\r\n                      <div className=\"mb-2\">\r\n                        <Form.Label className=\"common-label\">\r\n                          {t(\"search\")}\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          placeholder={t(\"search\")}\r\n                          onChange={handleSearchChange}\r\n                          value={search}\r\n                          className=\"search-field\"\r\n                        ></Form.Control>\r\n                      </div>\r\n                      <div className=\"flex-none mb-2\">\r\n                        <Form.Label className=\"common-label\">\r\n                          {t(\"selectCategory\")}\r\n                        </Form.Label>\r\n                        <Form.Select\r\n                          className=\"filter-select width-full shadow-none\"\r\n                          value={allFilterValue?.category}\r\n                          onChange={(e) => handleFilterData(e, \"category\")}\r\n                        >\r\n                          <option value=\"All\">{t(\"all\")}</option>\r\n                          <option value=\"1\">{t(\"contracts\")}</option>\r\n                          <option value=\"3\">{t(\"invoices\")}</option>\r\n                        </Form.Select>\r\n                      </div>\r\n                      <div className=\"flex-none mb-2\">\r\n                        <Form.Label className=\"common-label\">\r\n                          {t(\"selectFileType\")}\r\n                        </Form.Label>\r\n                        <Form.Select\r\n                          className=\"filter-select width-full shadow-none\"\r\n                          value={allFilterValue?.file_extension}\r\n                          onChange={(e) =>\r\n                            handleFilterData(e, \"file_extension\")\r\n                          }\r\n                        >\r\n                          <option value=\"All\">{t(\"all\")}</option>\r\n                          <option value=\"pdf\">{t(\"pdfs\")}</option>\r\n                          <option value=\"doc\">{t(\"documents\")}</option>\r\n                          <option value=\"img\">{t(\"images\")}</option>\r\n                          <option value=\"other\">{t(\"others\")}</option>\r\n                        </Form.Select>\r\n                      </div>\r\n                      {/* <div className=\"flex-none mb-2\">\r\n                                                <Form.Label className=\"common-label\">Shared By</Form.Label>\r\n                                                <Form.Select className=\"filter-select width-full shadow-none\">\r\n                                                    <option value=\"\">Select</option>\r\n                                                    <option value=\"amazon\">Amazon</option>\r\n                                                    <option value=\"volvo\">Volvo</option>\r\n                                                    <option value=\"google\">Google</option>\r\n                                                    <option value=\"bmw\">BMW</option>\r\n                                                </Form.Select>\r\n                                            </div> */}\r\n                      <div className=\"mt-4\">\r\n                        <Button\r\n                          variant=\"transparent\"\r\n                          className=\"main-btn px-3 py-2 \"\r\n                          onClick={clearAllFilter}\r\n                        >\r\n                          {t(\"clear\")}\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </Form>\r\n                </div>\r\n                <div className=\"w-100\">\r\n                  <Tab.Container className=\"w-100\" defaultActiveKey=\"grid-view\">\r\n                    <div className=\"d-flex justify-content-between align-items-center mb-3 pb-2 border-bottom-grey\">\r\n                      <div className=\"d-flex align-items-center gap-3\">\r\n                        <div className=\"d-flex align-items-center gap-3\">\r\n                          <h3 className=\"section-head-sub mb-0\">\r\n                            {t(\"documents\")}\r\n                          </h3>\r\n                          <div className=\"position-relative\">\r\n                            <OverlayTrigger\r\n                              placement=\"bottom\"\r\n                              overlay={doctooltip}\r\n                            >\r\n                              <Button\r\n                                onClick={() => setOpen(!open)}\r\n                                className=\"main-btn px-2 add-new-btn cursor-pointer upload-btn mb-0\"\r\n                                aria-controls=\"example-collapse-text\"\r\n                                aria-expanded={open}\r\n                              >\r\n                                +\r\n                              </Button>\r\n                            </OverlayTrigger>\r\n                            <Collapse in={open} className=\"new-doc-collapse\">\r\n                              <div>\r\n                                <Form.Label\r\n                                  onClick={handleShowUploadFileModal}\r\n                                  className=\"main-btn outline-main-btn px-4 cursor-pointer upload-btn mb-2 w-100\"\r\n                                >\r\n                                  + {t(\"createFolder\")}\r\n                                </Form.Label>\r\n                                <Form.Label\r\n                                  onClick={() => setShow(true)}\r\n                                  className=\"main-btn outline-main-btn px-4 cursor-pointer upload-btn mb-0 w-100\"\r\n                                >\r\n                                  + {t(\"uploadFile\")}\r\n                                </Form.Label>\r\n                              </div>\r\n                            </Collapse>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <Nav variant=\"pills\" className=\"document-view-pill\">\r\n                        <Nav.Item className=\"document-view-item\">\r\n                          <Nav.Link\r\n                            className=\"document-view-link\"\r\n                            eventKey=\"grid-view\"\r\n                          >\r\n                            <IoGrid />\r\n                          </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item className=\"document-view-item\">\r\n                          <Nav.Link\r\n                            className=\"document-view-link\"\r\n                            eventKey=\"list-view\"\r\n                          >\r\n                            <FaListUl />\r\n                          </Nav.Link>\r\n                        </Nav.Item>\r\n                      </Nav>\r\n                    </div>\r\n                    <Tab.Content>\r\n                      <Tab.Pane eventKey=\"grid-view\">\r\n                        {screenLoader ? (\r\n                          <ScreenLoader />\r\n                        ) : (\r\n                          <div className=\"folder-listing\">\r\n                            {folderData?.length > 0 ? (\r\n                              folderData?.map((item) => {\r\n                                return (\r\n                                  <>\r\n                                    {item.file_type === 0 ? (\r\n                                      <>\r\n                                        <div\r\n                                          className=\"folder-list\"\r\n                                          onDoubleClick={() =>\r\n                                            toggleFolderView(item)\r\n                                          }\r\n                                        >\r\n                                          <div className=\"position-relative\">\r\n                                            <FaFolder className=\"folder-icon\" />\r\n                                            <div className=\"name-folder\">\r\n                                              <span className=\"name_folder_text\">\r\n                                                {item?.s3_path}\r\n                                              </span>\r\n                                              {item?.user ? (\r\n                                                <div className=\"shared-doc\">\r\n                                                  <p className=\"shared-text\">\r\n                                                    {t(\"sharedBy\")}{\" \"}\r\n                                                    {item?.user?.name}\r\n                                                  </p>\r\n                                                </div>\r\n                                              ) : (\r\n                                                \"\"\r\n                                              )}\r\n                                            </div>\r\n                                            <div className=\"doc-action\">\r\n                                              <button\r\n                                                className=\"trash-btn doc-action-btn\"\r\n                                                onClick={() =>\r\n                                                  deleteFileAndFolder(\r\n                                                    item.id,\r\n                                                    \"folder\"\r\n                                                  )\r\n                                                }\r\n                                              >\r\n                                                <FaTrashCan />\r\n                                              </button>\r\n                                              <button\r\n                                                className=\"view-btn doc-action-btn\"\r\n                                                onClick={() =>\r\n                                                  handleShowUploadFileModal(\r\n                                                    item.id,\r\n                                                    item?.s3_path\r\n                                                  )\r\n                                                }\r\n                                              >\r\n                                                <MdEdit />\r\n                                              </button>\r\n                                              <button\r\n                                                onClick={() =>\r\n                                                  handleShowShareFileModal(\r\n                                                    item?.id\r\n                                                  )\r\n                                                }\r\n                                                className=\"view-btn doc-action-btn\"\r\n                                              >\r\n                                                <IoIosShareAlt />\r\n                                              </button>\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n                                      </>\r\n                                    ) : (\r\n                                      <>\r\n                                        <div className=\"pdf-list\">\r\n                                          <div className=\"pdf-icon\">\r\n                                            {generateFileImage(item?.s3_path)}\r\n                                          </div>\r\n                                          <p>\r\n                                            <span className=\"file-icon\">\r\n                                              {generateFileImage(item?.s3_path)}\r\n                                            </span>\r\n                                            <span className=\"filename-single\">\r\n                                              {getFileName(item?.s3_path)}\r\n                                            </span>\r\n                                          </p>\r\n                                          <div className=\"doc-action\">\r\n                                            {/* <button className=\"view-btn doc-action-btn\"><MdEdit /></button> */}\r\n                                            <button\r\n                                              className=\"download-btn doc-action-btn\"\r\n                                              onClick={() =>\r\n                                                handleDownload(item?.s3_path)\r\n                                              }\r\n                                            >\r\n                                              <FaDownload />\r\n                                            </button>\r\n                                            <button\r\n                                              className=\"trash-btn doc-action-btn\"\r\n                                              onClick={() =>\r\n                                                deleteFileAndFolder(\r\n                                                  item.id,\r\n                                                  \"file\"\r\n                                                )\r\n                                              }\r\n                                            >\r\n                                              <FaTrashCan />\r\n                                            </button>\r\n                                            <button\r\n                                              onClick={() =>\r\n                                                handleShowShareFileModal(\r\n                                                  item?.id\r\n                                                )\r\n                                              }\r\n                                              className=\"view-btn doc-action-btn\"\r\n                                            >\r\n                                              <IoIosShareAlt />\r\n                                            </button>\r\n                                          </div>\r\n                                        </div>\r\n                                      </>\r\n                                    )}\r\n                                  </>\r\n                                );\r\n                              })\r\n                            ) : (\r\n                              <NoDataFound />\r\n                            )}\r\n                          </div>\r\n                        )}\r\n                      </Tab.Pane>\r\n                      <Tab.Pane eventKey=\"list-view\">\r\n                        <DocumentListView\r\n                          folderData={folderData}\r\n                          deleteFileAndFolder={deleteFileAndFolder}\r\n                          handleDownload={handleDownload}\r\n                          getFileName={getFileName}\r\n                          generateFileImage={generateFileImage}\r\n                          toggleFolderView={toggleFolderView}\r\n                          handleShowShareFileModal={handleShowShareFileModal}\r\n                        />\r\n                      </Tab.Pane>\r\n                    </Tab.Content>\r\n                  </Tab.Container>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </section>\r\n      <CreateFolder\r\n        show={showUploadFileModal}\r\n        handleClose={handleCloseUploadFileModal}\r\n        currentFolderDetails={currentFolderDetails}\r\n        data={editFolderName}\r\n        folderData={folderData}\r\n        currentRole={currentRole}\r\n        setOpen={setOpen}\r\n      />\r\n      <RexettUploadFile\r\n        show={show}\r\n        handleClose={handleCloseUploadFileModal}\r\n        currentFolderDetails={currentFolderDetails}\r\n        currentRole={currentRole}\r\n        setOpen={setOpen}\r\n      />\r\n      <ShareModal\r\n        show={sharefileModal}\r\n        handleClose={handleCloseShareFileModal}\r\n        fileId={fileId}\r\n      />\r\n      <ConfirmationModal\r\n        text={\r\n          isDelete?.name == \"folder\"\r\n            ? `Deleting this folder will also delete all the files and subfolders contained within it`\r\n            : `Are you sure to delete this ${isDelete?.name}?`\r\n        }\r\n        show={isDelete?.isDelete}\r\n        handleClose={handleCloseUploadFileModal}\r\n        onClick={handleDelete}\r\n        smallLoader={smallLoader}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RexettDocuments;\r\n","import React from \"react\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport RexettButton from \"../../../components/atomic/RexettButton\";\r\nimport { clientDeleteHoliday, getClientHolidayList } from \"../../../redux/slices/clientDataSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nconst ConfirmationModal = ({ text,show, handleClose,onClick ,handleAction,smallLoader,type,startDate,endDate}) => {\r\n    const callBackBtn=(e )=>{\r\n        let data={\r\n            status: type,\r\n        }\r\n        onClick(e,data)\r\n    }\r\n    return(\r\n        <Modal show={show} onHide={(e)=>handleClose(e)} centered animation className=\"custom-modal\">\r\n            <Modal.Header closeButton className=\"border-0 pb-3\">\r\n            {/* <Modal.Title>End Job</Modal.Title> */}\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group className=\"mb-4\">\r\n                        <Form.Label className=\"d-block text-center\">{text}</Form.Label>\r\n                    </Form.Group>\r\n                    <div className=\"text-center\">\r\n                        <RexettButton\r\n                            type=\"submit\"\r\n                            text=\"Yes\"\r\n                            onClick={type ? callBackBtn : handleAction}\r\n                            // onClick={callBackBtn}\r\n                            className=\"main-btn px-4 me-3 font-14 fw-semibold\"\r\n                            variant=\"transparent\"\r\n                            disabled={smallLoader}\r\n                            isLoading={smallLoader}\r\n                        />\r\n                        <Button variant=\"transparent\" onClick={handleClose} className=\"outline-main-btn font-14 fw-semibold bg-transparent border-black text-black px-4\" >No</Button>\r\n                    </div>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\nexport default ConfirmationModal;"],"names":["_ref","data","_jsx","className","children","_jsxs","src","errorImg","_errors$s3_path","show","handleClose","currentFolderDetails","folderData","currentRole","setOpen","smallLoader","useSelector","state","clientData","dispatch","useDispatch","register","setValue","handleSubmit","formState","errors","isDirty","isValid","isSubmitting","useForm","useEffect","name","Modal","onHide","centered","animation","Header","closeButton","Body","onSubmit","values","editName","s3_path","renameFolderAndFile","id","parent_id","filterData","getFolderData","contract_id","createNewFolderAndFile","noValidate","Row","Col","md","Form","Group","Control","type","placeholder","validate","folderName","some","existingFolder","isFolderAlreadyExists","message","RexettButton","text","variant","isLoading","selectedFile","setSelectedFile","useState","details","setDetails","console","log","async","_values$file_name$","formData","FormData","append","file_name","category","filePreassignedUrlGenerate","url","fileData","alert","Select","required","value","selected","disabled","onChange","e","target","files","Label","htmlFor","deleteFileAndFolder","handleDownload","getFileName","generateFileImage","toggleFolderView","handleShowShareFileModal","t","useTranslation","length","map","item","index","_item$user","_Fragment","file_type","onDoubleClick","FaFolder","HiMiniUser","user","onClick","FaDownload","FaTrashCan","IoIosShareAlt","NoDataFound","baseTagifySettings","blacklist","maxTags","dropdown","enabled","maxItems","_shareDocument$data","fileId","useRef","tagifySettings","setTagifySettings","tagifyProps","setTagifyProps","sharedTags","setSharedTags","setData","shareDocument","developerData","suggestedTags","label","getDocumentShare","options","_e$detail","detail","d","JSON","parse","_shareDocument$data2","preventDefault","user_id","payload","file_id","user_ids","shareBelongisFile","setFileID","bradCrump","setBradCrum","allFilterValue","setAllCurrentFilterValue","editFolderName","setEditFolderName","showFolderView","setShowFolderView","setCurrentFolderDetails","sharefileModal","setShareFileModal","setShow","isDelete","setDelete","timerValue","setTimerValue","search","setSearch","open","screenLoader","showUploadFileModal","setShowUploadFileModal","handleShowUploadFileModal","handleCloseUploadFileModal","newTab","window","focus","fileName","split","splitWithDot","concat","fileExtWithDot","handleFilterData","filter","showFilterMenu","setShowFilterMenu","doctooltip","Tooltip","Button","handleShowFilterMenu","FaFilter","Link","copyBrdCrmb","findIndex","newData","slice","bradCrumpHandle","clearTimeout","timer","setTimeout","file_extension","clearAllFilter","date","Tab","Container","defaultActiveKey","OverlayTrigger","placement","overlay","Collapse","in","Nav","Item","eventKey","IoGrid","FaListUl","Content","Pane","ScreenLoader","MdEdit","DocumentListView","CreateFolder","RexettUploadFile","ShareModal","handleCloseShareFileModal","ConfirmationModal","_deleteFileAndFolder","handleAction","startDate","endDate","status"],"sourceRoot":""}
{"version":3,"file":"static/js/8705.b6cb3295.chunk.js","mappings":"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","sources":["pages/views/EditProfile.jsx"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport { Nav, Tab } from \"react-bootstrap\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport AllRoleEditProfile from \"../../components/common/EditProfile/AllRoleEditProfile\";\r\nimport ProfileWrapper from \"../../components/common/EditProfile/ProfileWrapper\";\r\nimport CompanyProfile from \"../../components/common/EditProfile/CompanyProfile\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCoutriesList,getCitiesList,getStatesList, getTimeZoneForCountry} from \"../../redux/slices/clientDataSlice\";\r\nimport { fileUploadForWeb, getDeveloperProfileDetails } from \"../../redux/slices/developerDataSlice\";\r\nimport { developerRegistration } from \"../../redux/slices/developerDataSlice\";\r\nimport { getDeveloperActiveStepFields, getStepDataFromAPI, getActiveStepFields } from \"../Registration flows/registrationConstant\";\r\nimport { clientRegistration } from \"../../redux/slices/clientDataSlice\";\r\nimport { getClientProfileDetails } from \"../../redux/slices/clientDataSlice\";\r\n\r\nconst EditProfile = () => {\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    control,\r\n    reset,\r\n    formState: { errors },\r\n    watch,\r\n    setError,\r\n    setValue,\r\n    clearErrors,\r\n  } = useForm({});\r\n  const dispatch =useDispatch()\r\n  const { smallLoader ,clientProfileData} = useSelector(\r\n    (state) => state?.clientData\r\n  );\r\n  const [previewImage, setPreviewImage] = useState({\r\n    profile_picture: \"\",\r\n    resume: \"\",\r\n    introVideo: \"\",\r\n  });\r\n  const [imageFile, setImageFile] = useState({\r\n    resume: \"\",\r\n    introVideo: \"\",\r\n  });\r\n\r\n  const { t } = useTranslation();\r\n  let userId=localStorage.getItem(\"userId\")\r\n  const onSubmit = (values) => {\r\n    console.log(values, \"vaues\");\r\n\r\n    const uploadFiles = (files) => {\r\n      let uploadedUrls = {};\r\n\r\n      const uploadPromises = Object.keys(files).map((key) => {\r\n        if (files[key]) {\r\n          let fileData = new FormData();\r\n          fileData.append(\"file\", files[key]);\r\n\r\n          return new Promise((resolve) => {\r\n            dispatch(\r\n              fileUploadForWeb(fileData, (url) => {\r\n                console.log(url, `${key} url`);\r\n                uploadedUrls[key] = url;\r\n                resolve();\r\n              })\r\n            );\r\n          });\r\n        } else {\r\n          return Promise.resolve(); // Resolve immediately if no file to upload\r\n        }\r\n      });\r\n\r\n      Promise.all(uploadPromises).then(() => {\r\n        let payload = {\r\n          first_name: values?.first_name,\r\n          last_name: values?.last_name,\r\n          profile_picture: uploadedUrls?.profile_picture,\r\n          profession: values?.profession,\r\n          email: values?.email,\r\n          country: values?.country_code?.label,\r\n          address: values?.address,\r\n          password: values?.password,\r\n          language_preference: values?.language_preference?.value,\r\n          total_experience: values?.total_experience,\r\n          city: null,\r\n          state: values?.state_iso_code?.label,\r\n          country_iso_code: values?.country_iso_code?.value,\r\n          state_iso_code: values?.state_iso_code?.value,\r\n          passcode: values?.passcode,\r\n          country_code: values?.country_code.value,\r\n          phone_number: values?.phone_number,\r\n          language_proficiency: values?.language_proficiency,\r\n          time_zone: values?.time_zone?.label,\r\n          resume: uploadedUrls?.resume,\r\n          linkedin_url: values?.linked_in,\r\n          github_url: values?.git_hub,\r\n          intro_video_url: uploadedUrls?.introVideo,\r\n          user_id: userId,\r\n          company_name: values?.company_name,\r\n          company_tax_id: values?.company_tax_id,\r\n          establishment_year: values?.establishment_year,\r\n          website_url: values?.website_url,\r\n          yearly_revenue: values?.yearly_revenue,\r\n          employee_strength: values?.employee_strength,\r\n          is_2FA_enabled: values?.is_2FA_enabled,\r\n        };\r\n        console.log(payload,\"payload\")\r\n\r\n        dispatch(clientRegistration(payload));\r\n      });\r\n    };\r\n    uploadFiles({\r\n      resume: imageFile.resume,\r\n      introVideo: imageFile.introVideo,\r\n      profile_picture: imageFile.profile_picture,\r\n    });\r\n  }\r\n  const watchAllFields = watch();\r\n  const [screenLoader, setScreenLoader] = React.useState(false); // Assuming screenLoader is a state\r\n\r\n  const activeStep = 1; // Assuming activeStep is defined somewhere\r\n  const nestedActiveStep = 0; // Assuming nestedActiveStep is defined somewhere\r\n  \r\n const activeStepFields = getActiveStepFields(\r\n    activeStep,\r\n  );\r\n  console.log(activeStepFields,'hihi clientdata')\r\n  useEffect(() => {\r\n\r\n    if(userId){\r\n    dispatch(getClientProfileDetails(userId));\r\n    dispatch(getCoutriesList());\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (watch(\"country\")?.value) {\r\n      dispatch(getStatesList(watch(\"country\")?.value));\r\n      dispatch(getTimeZoneForCountry(watch(\"country\")?.value));\r\n    }\r\n  }, [watch(\"country\")]);\r\n\r\n  useEffect(() => {\r\n    if (watch(\"state\")?.value) {\r\n      dispatch(getCitiesList(watch(\"country\")?.value, watch(\"state\")?.value));\r\n      setValue(\"city\", null);\r\n    }\r\n  }, [watch(\"state\")]);\r\n\r\n  return (\r\n    <>\r\n      <ProfileWrapper>\r\n         <AllRoleEditProfile role=\"client\" name={\"individual\"} onSubmit={onSubmit} activeStep={activeStep} previewImage={previewImage} imageFile={imageFile} setImageFile={setImageFile} setPreviewImage={setPreviewImage} stepData={clientProfileData} activeStepFields={activeStepFields?.individual}/>\r\n      </ProfileWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n"],"names":["EditProfile","handleSubmit","register","control","reset","formState","errors","watch","setError","setValue","clearErrors","useForm","dispatch","useDispatch","smallLoader","clientProfileData","useSelector","state","clientData","previewImage","setPreviewImage","useState","profile_picture","resume","introVideo","imageFile","setImageFile","t","useTranslation","userId","localStorage","getItem","screenLoader","setScreenLoader","React","activeStepFields","getActiveStepFields","console","log","useEffect","getClientProfileDetails","getCoutriesList","_watch","_watch2","_watch3","value","getStatesList","getTimeZoneForCountry","_watch4","_watch5","_watch6","getCitiesList","_jsx","_Fragment","children","ProfileWrapper","AllRoleEditProfile","role","name","onSubmit","values","files","uploadedUrls","uploadPromises","Object","keys","map","key","fileData","FormData","append","Promise","resolve","fileUploadForWeb","url","all","then","_values$country_code","_values$language_pref","_values$state_iso_cod","_values$country_iso_c","_values$state_iso_cod2","_values$time_zone","payload","first_name","last_name","profession","email","country","country_code","label","address","password","language_preference","total_experience","city","state_iso_code","country_iso_code","passcode","phone_number","language_proficiency","time_zone","linkedin_url","linked_in","github_url","git_hub","intro_video_url","user_id","company_name","company_tax_id","establishment_year","website_url","yearly_revenue","employee_strength","is_2FA_enabled","clientRegistration","uploadFiles","activeStep","stepData","individual"],"sourceRoot":""}
{"version":3,"file":"static/js/3599.3ab3b000.chunk.js","mappings":"oTAqBA,MA0UA,EA1UcA,IAAiE,IAADC,EAAA,IAA/D,SAAEC,EAAQ,OAAEC,EAAM,QAAEC,EAAO,SAAEC,EAAQ,MAAEC,EAAK,YAACC,GAAaP,EACxDQ,aAAaC,QAAQ,UAApC,MACOC,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,OAC7C,EAAEC,IAAMC,EAAAA,EAAAA,MAGRC,GAAWC,EAAAA,EAAAA,OAEVC,EAAYC,IAAeN,EAAAA,EAAAA,UAAS,CACzCO,WAAW,EACXC,YAAY,KAEPC,EAAMC,IAAWV,EAAAA,EAAAA,UAAS,OAC3B,YAAEW,EAAW,mBAAEC,EAAkB,aAAEC,EAAY,UAAEC,IACrDC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,iBAK/BC,EAAAA,EAAAA,YAAU,KACRf,GAASgB,EAAAA,EAAAA,MAAkB,GAC1B,KAEHD,EAAAA,EAAAA,YAAU,KACuB,IAADE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAR,OAAlBf,QAAkB,IAAlBA,GAAAA,EAAoBgB,OACtBnC,EAAS,OAA0B,OAAlBmB,QAAkB,IAAlBA,GAAwB,QAANQ,EAAlBR,EAAoBgB,YAAI,IAAAR,OAAN,EAAlBA,EAA0BS,MAC3CpC,EAAS,QAA2B,OAAlBmB,QAAkB,IAAlBA,GAAwB,QAANS,EAAlBT,EAAoBgB,YAAI,IAAAP,OAAN,EAAlBA,EAA0BS,OAC5CrC,EAAS,eAAkC,OAAlBmB,QAAkB,IAAlBA,GAAwB,QAANU,EAAlBV,EAAoBgB,YAAI,IAAAN,OAAN,EAAlBA,EAA0BS,cACnDtC,EAAS,UAA6B,OAAlBmB,QAAkB,IAAlBA,GAAwB,QAANW,EAAlBX,EAAoBgB,YAAI,IAAAL,OAAN,EAAlBA,EAA0BS,SAC9CvC,EAAS,YAA+B,OAAlBmB,QAAkB,IAAlBA,GAAwB,QAANY,EAAlBZ,EAAoBgB,YAAI,IAAAJ,OAAN,EAAlBA,EAA0BS,WAChDxC,EAAS,OAA0B,OAAlBmB,QAAkB,IAAlBA,GAAwB,QAANa,EAAlBb,EAAoBgB,YAAI,IAAAH,OAAN,EAAlBA,EAA0BS,MAC3CzC,EAAS,UAA6B,OAAlBmB,QAAkB,IAAlBA,GAAwB,QAANc,EAAlBd,EAAoBgB,YAAI,IAAAF,OAAN,EAAlBA,EAA0BS,SAC9C1C,EAAS,WAA8B,OAAlBmB,QAAkB,IAAlBA,GAAwB,QAANe,EAAlBf,EAAoBgB,YAAI,IAAAD,OAAN,EAAlBA,EAA0BS,UACjD,GACC,CAACxB,IAEoByB,EAAAA,EAAxB,MA4BMC,EAAoBC,IACxB,GAAc,KAAVA,EACF,OAAO,EAIP,IADgB,wDACHC,KAAKD,GAChB,MAAO,qFAGX,OAAO,CAAI,EAeb,OACEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,WAASC,UAAU,WAAUF,SAAA,EAC3BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,+DAA8DF,SAAA,EAC3EF,EAAAA,EAAAA,KAAA,MAAAE,SACEhD,EAAYmD,MAEdL,EAAAA,EAAAA,KAAA,KAAAE,SACEhD,EAAYoD,WAGhBN,EAAAA,EAAAA,KAAA,OAAAE,SACG9B,GACC4B,EAAAA,EAAAA,KAACO,EAAAA,EAAY,KAEXJ,EAAAA,EAAAA,MAACK,EAAAA,EAAG,CAACJ,UAAU,OAAMF,SAAA,EACnBF,EAAAA,EAAAA,KAACS,EAAAA,EAAG,CAACC,GAAG,IAAGR,UACTC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYF,SAAA,EACzBC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAACW,EAAAA,EACC,CACAvB,KAAK,OACLrC,QAASA,EACT6D,MAAO,CAAEC,SAAU,oBACnBC,MAAOhE,EAAOsC,KACd2B,KAAK,QACLC,QAAS,CACP,CAAEC,MAAO,gBAAiBnB,MAAO,qBAGrCE,EAAAA,EAAAA,KAACW,EAAAA,EACC,CACAvB,KAAK,OACLrC,QAASA,EACT6D,MAAO,CAAEC,SAAU,oBACnBC,MAAOhE,EAAOsC,KACd2B,KAAK,QACLC,QAAS,CAAC,CAAEC,MAAO,aAAcnB,MAAO,qBAI5CE,EAAAA,EAAAA,KAACW,EAAAA,EAAW,CACVM,MAAOzD,EAAE,QAAU,KACnB4B,KAAK,OACLrC,QAASA,EACT6D,MAAO,CAAEC,SAAU,oBACnBC,MAAOhE,EAAOsC,QAEhBY,EAAAA,EAAAA,KAACW,EAAAA,EAAW,CACVM,MAAOzD,EAAE,SAAW,KACpB4B,KAAK,QACLrC,QAASA,EACT6D,MAAO,CACLC,SAAU,oBACVK,QAAS,CACPpB,MAAO,6BACPqB,QAAS,yBAGbL,MAAOhE,EAAOuC,SAGhBW,EAAAA,EAAAA,KAACW,EAAAA,EAAW,CACVM,MAAOzD,EAAE,YACT4B,KAAK,WACLrC,QAASA,EACTgE,KAAMnD,EAAWE,UAAY,OAAS,WACtC8C,MAAO,CAAEQ,SAAUvB,GACnBiB,MAAOhE,EAAOuE,kBACdzD,YAAU,EACV0D,iBAAkBA,IAChBzD,EAAY,IACPD,EACHE,WAAYF,EAAWE,YAG3ByD,MAAMvB,EAAAA,EAAAA,KAACwB,EAAAA,IAAK,OAEdxB,EAAAA,EAAAA,KAACW,EAAAA,EAAW,CACVM,MAAOzD,EAAE,oBACT4B,KAAK,mBACLrC,QAASA,EACTgE,KAAMnD,EAAWG,WAAa,OAAS,WACvC6C,MAAO,CAAEQ,SAAUvB,GACnBiB,MAAOhE,EAAO2E,SACd7D,YAAU,EACV0D,iBAAkBA,IAChBzD,EAAY,IACPD,EACHG,YAAaH,EAAWG,aAG5BwD,MAAMvB,EAAAA,EAAAA,KAACwB,EAAAA,IAAK,OAEdxB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAkB,CACjBT,MAAOzD,EAAE,WAAa,KACtB4B,KAAK,UACLrC,QAASA,EACT6D,MAAO,CAAEC,SAAU,uBACnBC,MAAOhE,EAAOyC,QACdoC,OA7KOC,0CA8KPC,gBAAkBC,IAChB9E,EAAS,UAAW8E,EAAMC,kBAAkB,EAE9CC,SAAWC,IACTjF,EAAS,UAAWiF,EAAEC,OAAOpC,MAAM,EAErCkB,QAAS,CAAEmB,MAAO,CAAC,gBAAiB,oBAI1CnC,EAAAA,EAAAA,KAACS,EAAAA,EAAG,CAACC,GAAG,IAAGR,UACTC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAACW,EAAAA,EAAW,CACVM,MAAOzD,EAAE,SAAW,IACpB4B,KAAK,eACLrC,QAASA,EACTgE,KAAK,QACLH,MAAO,CACLC,SAAU,2BACVK,QAAS,CACPpB,MAAO,oBACPqB,QAAS,sCAGbL,MAAOhE,EAAOwC,gBAEhBU,EAAAA,EAAAA,KAACW,EAAAA,EAAW,CACVM,MAAOzD,EAAE,QAAU,IACnB4B,KAAK,OACLrC,QAASA,EACT6D,MAAO,CACLC,SAAU,mBACVK,QAAS,CACPpB,MAAO,gBACPqB,QACE,0DAGNL,MAAOhE,EAAO2C,QAEhBO,EAAAA,EAAAA,KAACW,EAAAA,EAAW,CACVM,MAAOzD,EAAE,YAAc,IACvB4B,KAAK,WACLrC,QAASA,EACT6D,MAAO,CACLC,SAAU,uBACVK,QAAS,CACPpB,MAAO,WACPqB,QAAS,yCAGbL,MAAOhE,EAAO6C,YAGhBK,EAAAA,EAAAA,KAACW,EAAAA,EAAW,CACVM,MAAOzD,EAAE,WAAa,IACtB4B,KAAK,UACL2B,KAAK,SACLhE,QAASA,EACT6D,MAAO,CACLC,SAAU,sBACVK,QAAS,CACPpB,MAAO,gBACPqB,QACE,6DAGNiB,cAAe/D,EACfyC,MAAOhE,EAAO4C,WAGhBM,EAAAA,EAAAA,KAACW,EAAAA,EAAW,CACVM,MAAOzD,EAAE,SAAW,IACpB4B,KAAK,QACL2B,KAAK,SACLhE,QAASA,EACT6D,MAAO,CACLC,SAAU,oBACVK,QAAS,CACPpB,MAAO,gBACPqB,QACE,6DAGNL,MAAOhE,EAAO4C,QACd0C,cAAe/D,KAEjB2B,EAAAA,EAAAA,KAACW,EAAAA,EAAW,CACVM,MAAOzD,EAAE,QAAU,IACnB4B,KAAK,OACL2B,KAAK,SACLhE,QAASA,EACT6D,MAAO,CACLC,SAAU,mBACVK,QAAS,CACPpB,MAAO,gBACPqB,QACE,6DAGNiB,cAAe/D,EACfyC,MAAOhE,EAAO4C,WAGhBM,EAAAA,EAAAA,KAACW,EAAAA,EAAW,CACVM,MAAOzD,EAAE,SAAW,IACpB4B,KAAK,kBACL2B,KAAK,OACLhE,QAASA,EACT6D,MAAO,CAAEC,UAAU,GACnBmB,SAAWC,GA/NLI,KACxB,MAAMrE,EAAOqE,EAAMH,OAAOI,MAAM,GAEhC,GADArE,EAAQD,GACJA,EAAM,CACR,MAAMuE,EAAS,IAAIC,WACnBD,EAAOE,UAAY,KACjBnF,EAAiBiF,EAAOG,OAAO,EAEjCH,EAAOI,cAAc3E,EACvB,GAsNmC4E,CAAiBX,GAClCY,OAAO,aAET1C,EAAAA,EAAAA,MAAC2C,EAAAA,EAAKC,MAAK,CACTC,QAAQ,kBACR5C,UAAU,6BAA4BF,SAAA,EAEtCF,EAAAA,EAAAA,KAACiD,EAAAA,IAAQ,IACRzF,EAAE,mBAELwC,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,OACEkD,IACE7F,IAEsB,OAAlBc,QAAkB,IAAlBA,GAAwB,QAANvB,EAAlBuB,EAAoBgB,YAAI,IAAAvC,OAAN,EAAlBA,EAA0BuG,iBAEhCC,IAAI,WACJhD,UAAU,mCAS3B,ECvTP,EAlCczD,IAYP,IAZQ,SACbE,EAAQ,OACRC,EAAM,QACNC,EAAO,SACPC,EAAQ,MACRC,EAAK,YACLoG,EAAW,KACXjE,EAAI,UACJkE,EAAS,cACTlB,EAAa,YACblF,EAAW,MACX+D,GACDtE,EAEC,OADAK,EAASoC,EAAM,iBAEbe,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWF,SAAA,EACxBF,EAAAA,EAAAA,KAAA,MAAAE,SAAKhD,EAAYmD,MACjBL,EAAAA,EAAAA,KAAA,KAAAE,SAAIhD,EAAYoD,QAChBN,EAAAA,EAAAA,KAAA,QAAMuD,GAAG,WAAUrD,UACjBF,EAAAA,EAAAA,KAACW,EAAAA,EAAW,CACZM,MAAOA,EACL7B,KAAMA,EACNrC,QAASA,EACT6D,MAAO,CAAEC,SAAU,oBACnBC,MAAOhE,EAAOsC,KACd2B,KAAMuC,EACNtC,QAASqC,EACTjB,cAAeA,QAGf,ECeV,EA7CczF,IAWP,IAXQ,SACbE,EAAQ,OACRC,EAAM,QACNC,EAAO,SACPC,EAAQ,MACRC,EAAK,YACLoG,EAAW,KACXjE,EAAI,UACJkE,EAAS,cACTlB,EAAa,YACblF,GACDP,EACC,OACEwD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWF,SAAA,EACtBF,EAAAA,EAAAA,KAAA,MAAAE,SAAKhD,EAAYmD,MACjBL,EAAAA,EAAAA,KAAA,KAAAE,SAAIhD,EAAYoD,QAClBN,EAAAA,EAAAA,KAAA,QAAMuD,GAAG,WAAUrD,SAEfd,GACAe,EAAAA,EAAAA,MAAAF,EAAAA,SAAA,CAAAC,SAAA,EACAF,EAAAA,EAAAA,KAACW,EAAAA,EAAW,CACZM,MAAM,mBACN7B,KAAK,OACLrC,QAASA,EACT6D,MAAO,CAAEC,SAAU,oBACnBC,MAAOhE,EAAOsC,KACd2B,KAAK,UAEPf,EAAAA,EAAAA,KAACW,EAAAA,EAAW,CACVM,MAAM,mBACN7B,KAAK,OACLrC,QAASA,EACT6D,MAAO,CAAEC,SAAU,oBACnBC,MAAOhE,EAAOsC,KACd2B,KAAK,YAGJ,OAID,EC5CJyC,EAAe,CACnB,EAAG,CACDrE,KAAM,GACNC,KAAM,KACNkE,UAAW,KACXpG,YAAa,CACXmD,GAAI,2BACJC,KAAK,6ZAQT,EAAG,CACDnB,KAAM,GACNC,KAAM,kBACNkE,UAAW,QACXpG,YAAa,CACXmD,GAAI,8CACJC,KAAK,gDAGT,EAAG,CACDnB,KAAM,GACNC,KAAM,iBACNkE,UAAW,QACXpG,YAAa,CACXmD,GAAI,qCACJC,KAAK,iDAGT,EAAG,CACDnB,KAAM,GACNC,KAAM,oBACNkE,UAAW,QACXpG,YAAa,CACXmD,GAAI,2CACJC,KAAK,KAGT,EAAG,CACDnB,KAAM,GACNC,KAAM,eACNkE,UAAW,QACXpG,YAAa,CACXmD,GAAI,8BACJC,KAAK,KAGT,EAAG,CACDnB,KAAM,GACNC,KAAM,QACNkE,UAAW,SACXpG,YAAa,CACXmD,GAAI,2BACJC,KAAK,IAEPW,MAAO,sBAET,EAAG,CACD9B,KAAM,GACNC,KAAM,OACNkE,UAAW,OACXpG,YAAa,CACXmD,GAAI,0CACJC,KAAK,KAGT,EAAG,CACDnB,KAAM,GACNC,KAAM,KACNkE,UAAW,KACXpG,YAAa,CACXmD,GAAI,yBACJC,KAAK,mF,cC5CX,MA8IA,EA9I2B3D,IAAe,IAAD8G,EAAA,IAAb,KAAEC,GAAM/G,EAClC,MAAM,EAAEa,IAAMC,EAAAA,EAAAA,OACR,SACJZ,EAAQ,QACRE,EAAO,MACP4G,EAAK,MACL1G,EAAK,SACLD,EAAQ,aACR4G,EACAC,WAAW,OAAE/G,KACXgH,EAAAA,EAAAA,OACGC,EAAYC,IAAiBzG,EAAAA,EAAAA,UAAS,GACvCG,GAAWC,EAAAA,EAAAA,OACX,UAAEsG,EAAS,WAAEC,IAAe5F,EAAAA,EAAAA,KAAaC,GAAUA,EAAM4F,aAE/D,IAAI,KAAEhF,EAAI,KAAEC,EAAI,UAAEkE,EAAS,YAAEpG,EAAW,MAAE+D,GDkCAuC,ECjCtBO,IDiC6C,KC/BjE,MAAMK,EAAkBH,EAAUI,KAAKC,IAC9B,CAAExE,MAAOwE,EAAKf,GAAItC,MAAOqD,EAAKC,UAGjCC,EAAgC,QAAnBf,EAAGS,EAAW9E,UAAK,IAAAqE,OAAA,EAAhBA,EAAkBY,KAAKC,IACpC,CAAExE,MAAOwE,EAAKG,KAAMxD,MAAOqD,EAAKlF,UAGzCX,EAAAA,EAAAA,YAAU,KACRf,GAASgH,EAAAA,EAAAA,OACThH,GAASiH,EAAAA,EAAAA,OACTjH,GAASkH,EAAAA,EAAAA,MAAqB,GAC7B,CAAClH,IAyEJ,OACEsC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,WAASI,UAAU,WAAUF,UAC3BF,EAAAA,EAAAA,KAAA,OAAAE,UAIIC,EAAAA,EAAAA,MAAA,QAAM0E,SAAUjB,GA3BRkB,IAChBC,QAAQC,IAAIF,EAAS,OAgBrBpH,GAASuH,EAAAA,EAAAA,IAdA,CACP,KAAQ,WACR,MAAS,kBACT,aAAgB,aAChB,aAAgB,KAChB,SAAY,cACZ,YAAe,aACf,aAAgB,GAChB,aAAgB,GAChB,eAAkB,GAClB,gBAAmB,GACnB,aAAgB,GAChB,UAAa,eAEc,IAUmBC,YAAU,EAAAhF,SAAA,CA9E7BiF,MAC7B,OAAQpB,GACN,KAAK,EACH,OACE/D,EAAAA,EAAAA,KAACoF,EAAK,CACJvI,SAAUA,EACVC,OAAQA,EACRC,QAASA,EACTE,MAAOA,EACPD,SAAUA,EACVE,YAAaA,IAGnB,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACH,OACE8C,EAAAA,EAAAA,KAACqF,EAAK,CACJxI,SAAUA,EACVC,OAAQA,EACRG,MAAOA,EACPD,SAAUA,EACVD,QAASA,EACTsG,YAAamB,EACbpF,KAAMA,EACNkE,UAAWA,EACXlB,cAAegC,EACflH,YAAaA,EACb+D,MAAOA,IAGb,KAAK,EACL,KAAK,EACH,OACEjB,EAAAA,EAAAA,KAACsF,EAAK,CACJzI,SAAUA,EACVC,OAAQA,EACRC,QAASA,EACTE,MAAOA,EACPD,SAAUA,EACVoC,KAAMA,EACNlC,YAAaA,IAGnB,QACE,OACJ,EA+BWiI,GAEe,IAAfpB,IACC/D,EAAAA,EAAAA,KAACuF,EAAAA,EAAY,CACXxE,KAAK,SACLyE,KAAK,OACLC,QAASA,KACPzB,GAAe0B,GAASA,EAAO,GAAE,EAEnCtF,UAAU,oCAKdJ,EAAAA,EAAAA,KAACuF,EAAAA,EAAY,CACXxE,KAAK,SACLyE,KAAMzB,EAAa,EAAI,WAAavG,EAAE,UACtC4C,UAAU,0BAWnB,C","sources":["pages/websiteRegisterForm/client/Step1.jsx","pages/websiteRegisterForm/client/Step2.jsx","pages/websiteRegisterForm/client/Step3.jsx","pages/websiteRegisterForm/client/constant.js","pages/websiteRegisterForm/client/ClientRegisterForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n} from \"react-bootstrap\";\r\nimport { FaEye } from \"react-icons/fa\";\r\nimport { HiUpload } from \"react-icons/hi\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport CommonInput from \"../../../components/atomic/CommonInput\";\r\nimport ScreenLoader from \"../../../components/atomic/ScreenLoader\";\r\nimport CommonAutocomplete from \"../../../components/atomic/CommonAutoComplete\";\r\nimport RexettButton from \"../../../components/atomic/RexettButton\";\r\nimport { getAllCountries } from \"../../../redux/slices/authenticationDataSlice\";\r\n\r\nconst Step1 = ({ register, errors, control, setValue, watch,headingData }) => {\r\n  const userId = localStorage.getItem(\"userId\");\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const { t } = useTranslation();\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [isPassword, setPassword] = useState({\r\n    firstPass: false,\r\n    secondPass: false,\r\n  });\r\n  const [file, setFile] = useState(null);\r\n  const { smallLoader, userProfileDetails, screenLoader, countries } =\r\n    useSelector((state) => state.developerData);\r\n\r\n  const GOOGLE_MAP_API_KEY = process.env.REACT_APP_GOOGLE_MAP_API;\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllCountries());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (userProfileDetails?.data) {\r\n      setValue(\"name\", userProfileDetails?.data?.name);\r\n      setValue(\"email\", userProfileDetails?.data?.email);\r\n      setValue(\"phone_number\", userProfileDetails?.data?.phone_number);\r\n      setValue(\"address\", userProfileDetails?.data?.address);\r\n      setValue(\"address_2\", userProfileDetails?.data?.address_2);\r\n      setValue(\"city\", userProfileDetails?.data?.city);\r\n      setValue(\"country\", userProfileDetails?.data?.country);\r\n      setValue(\"passcode\", userProfileDetails?.data?.passcode);\r\n    }\r\n  }, [userProfileDetails]);\r\n\r\n  const disableProfile = <Tooltip id=\"tooltip\">Disable your Account</Tooltip>;\r\n\r\n  const onSubmit = (values) => {\r\n    // let formData = new FormData();\r\n    // let fileData = new FormData();\r\n    // for (const key in values) {\r\n    //   formData.append(key, values[key]);\r\n    // }\r\n    // fileData.append(\"file\", file);\r\n    // if (file == null) {\r\n    //   let data = {\r\n    //     ...values,\r\n    //     user_id: userId,\r\n    //   };\r\n    //   dispatch(updateDeveloperProfile(data));\r\n    // } else {\r\n    //   dispatch(\r\n    //     filePreassignedUrlGenerate(fileData, (url) => {\r\n    //       let data = {\r\n    //         ...values,\r\n    //         profile_picture: url,\r\n    //         user_id: userId,\r\n    //       };\r\n    //       dispatch(updateDeveloperProfile(data));\r\n    //     })\r\n    //   );\r\n    // }\r\n  };\r\n  const validatePassword = (value) => {\r\n    if (value === \"\") {\r\n      return true; // Password is not required, so return true if empty\r\n    } else {\r\n      // Check if password matches the pattern\r\n      const pattern = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\r\n      if (!pattern.test(value)) {\r\n        return \"Password must contain at least a symbol, upper and lower case letters and a number\";\r\n      }\r\n    }\r\n    return true; // Password meets the criteria\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setFile(file);\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setSelectedImage(reader.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className=\"card-box\">\r\n        <div className=\"d-flex gap-3 align-items-center pb-2 mb-3 border-bottom-grey\">\r\n          <h2>\r\n           {headingData.h1}\r\n          </h2>\r\n          <p>\r\n           {headingData.para}\r\n          </p>\r\n        </div>\r\n        <div>\r\n          {screenLoader ? (\r\n            <ScreenLoader />\r\n          ) : (\r\n              <Row className=\"mb-4\">\r\n                <Col md=\"6\">\r\n                  <div className=\"inner-form\">\r\n                    <div>\r\n                      <CommonInput\r\n                        // label={t(\"As Individual\")}\r\n                        name=\"name\"\r\n                        control={control}\r\n                        rules={{ required: \"Name is required\" }}\r\n                        error={errors.name}\r\n                        type=\"radio\"\r\n                        options={[\r\n                          { label: \"As Individual\", value: \"as_individual\" },\r\n                        ]}\r\n                      />\r\n                      <CommonInput\r\n                        // label={t(\"As Company\")}\r\n                        name=\"name\"\r\n                        control={control}\r\n                        rules={{ required: \"Name is required\" }}\r\n                        error={errors.name}\r\n                        type=\"radio\"\r\n                        options={[{ label: \"As Company\", value: \"as_company\" }]}\r\n                      />\r\n                    </div>\r\n\r\n                    <CommonInput\r\n                      label={t(\"Name\") + \" *\"}\r\n                      name=\"name\"\r\n                      control={control}\r\n                      rules={{ required: \"Name is required\" }}\r\n                      error={errors.name}\r\n                    />\r\n                    <CommonInput\r\n                      label={t(\"email\") + \" *\"}\r\n                      name=\"email\"\r\n                      control={control}\r\n                      rules={{\r\n                        required: \"Email is required\",\r\n                        pattern: {\r\n                          value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\r\n                          message: \"Invalid email format\",\r\n                        },\r\n                      }}\r\n                      error={errors.email}\r\n                      // readOnly\r\n                    />\r\n                    <CommonInput\r\n                      label={t(\"Password\")}\r\n                      name=\"password\"\r\n                      control={control}\r\n                      type={isPassword.firstPass ? \"text\" : \"password\"}\r\n                      rules={{ validate: validatePassword }}\r\n                      error={errors.previous_password}\r\n                      isPassword\r\n                      onTogglePassword={() =>\r\n                        setPassword({\r\n                          ...isPassword,\r\n                          firstPass: !isPassword.firstPass,\r\n                        })\r\n                      }\r\n                      icon={<FaEye />}\r\n                    />\r\n                    <CommonInput\r\n                      label={t(\"Confirm Password\")}\r\n                      name=\"confirm_password\"\r\n                      control={control}\r\n                      type={isPassword.secondPass ? \"text\" : \"password\"}\r\n                      rules={{ validate: validatePassword }}\r\n                      error={errors.password}\r\n                      isPassword\r\n                      onTogglePassword={() =>\r\n                        setPassword({\r\n                          ...isPassword,\r\n                          secondPass: !isPassword.secondPass,\r\n                        })\r\n                      }\r\n                      icon={<FaEye />}\r\n                    />\r\n                    <CommonAutocomplete\r\n                      label={t(\"address\") + \" *\"}\r\n                      name=\"address\"\r\n                      control={control}\r\n                      rules={{ required: \"Address is required\" }}\r\n                      error={errors.address}\r\n                      apiKey={GOOGLE_MAP_API_KEY}\r\n                      onPlaceSelected={(place) => {\r\n                        setValue(\"address\", place.formatted_address);\r\n                      }}\r\n                      onChange={(e) => {\r\n                        setValue(\"address\", e.target.value);\r\n                      }}\r\n                      options={{ types: [\"establishment\", \"geocode\"] }}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                  <div>\r\n                    <CommonInput\r\n                      label={t(\"phone\") + \"*\"}\r\n                      name=\"phone_number\"\r\n                      control={control}\r\n                      type=\"phone\"\r\n                      rules={{\r\n                        required: \"Phone Number is required\",\r\n                        pattern: {\r\n                          value: /^\\+?[0-9]{10,14}$/,\r\n                          message: \"Please enter a valid phone number\",\r\n                        },\r\n                      }}\r\n                      error={errors.phone_number}\r\n                    />\r\n                    <CommonInput\r\n                      label={t(\"city\") + \"*\"}\r\n                      name=\"city\"\r\n                      control={control}\r\n                      rules={{\r\n                        required: \"City is required\",\r\n                        pattern: {\r\n                          value: /^[A-Za-z\\s]+$/,\r\n                          message:\r\n                            \"City should not contain numbers or special characters\",\r\n                        },\r\n                      }}\r\n                      error={errors.city}\r\n                    />\r\n                    <CommonInput\r\n                      label={t(\"postCode\") + \"*\"}\r\n                      name=\"passcode\"\r\n                      control={control}\r\n                      rules={{\r\n                        required: \"Postcode is required\",\r\n                        pattern: {\r\n                          value: /^[0-9]+$/,\r\n                          message: \"Postcode should only contain numbers\",\r\n                        },\r\n                      }}\r\n                      error={errors.passcode}\r\n                    />\r\n\r\n                    <CommonInput\r\n                      label={t(\"country\") + \"*\"}\r\n                      name=\"country\"\r\n                      type=\"select\"\r\n                      control={control}\r\n                      rules={{\r\n                        required: \"Country is required\",\r\n                        pattern: {\r\n                          value: /^[A-Za-z\\s]+$/,\r\n                          message:\r\n                            \"Country should not contain numbers or special characters\",\r\n                        },\r\n                      }}\r\n                      selectOptions={countries}\r\n                      error={errors.country}\r\n                    />\r\n\r\n                    <CommonInput\r\n                      label={t(\"state\") + \"*\"}\r\n                      name=\"state\"\r\n                      type=\"select\"\r\n                      control={control}\r\n                      rules={{\r\n                        required: \"State is required\",\r\n                        pattern: {\r\n                          value: /^[A-Za-z\\s]+$/,\r\n                          message:\r\n                            \"Country should not contain numbers or special characters\",\r\n                        },\r\n                      }}\r\n                      error={errors.country}\r\n                      selectOptions={countries}\r\n                    />\r\n                    <CommonInput\r\n                      label={t(\"City\") + \"*\"}\r\n                      name=\"city\"\r\n                      type=\"select\"\r\n                      control={control}\r\n                      rules={{\r\n                        required: \"City is required\",\r\n                        pattern: {\r\n                          value: /^[A-Za-z\\s]+$/,\r\n                          message:\r\n                            \"Country should not contain numbers or special characters\",\r\n                        },\r\n                      }}\r\n                      selectOptions={countries}\r\n                      error={errors.country}\r\n                    />\r\n\r\n                    <CommonInput\r\n                      label={t(\"image\") + \"*\"}\r\n                      name=\"profile_picture\"\r\n                      type=\"file\"\r\n                      control={control}\r\n                      rules={{ required: false }}\r\n                      onChange={(e) => handleFileChange(e)}\r\n                      accept=\"image/*\"\r\n                    />\r\n                    <Form.Label\r\n                      htmlFor=\"developer-image\"\r\n                      className=\"upload-image-label d-block\"\r\n                    >\r\n                      <HiUpload />\r\n                      {t(\"uploadImage\")}\r\n                    </Form.Label>\r\n                    <div>\r\n                      <img\r\n                        src={\r\n                          selectedImage\r\n                            ? selectedImage\r\n                            : userProfileDetails?.data?.profile_picture\r\n                        }\r\n                        alt=\"Selected\"\r\n                        className=\"uploaded-image\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n          )}\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nexport default Step1;\r\n","import React, { useState } from \"react\";\r\nimport CommonInput from \"../../../components/atomic/CommonInput\";\r\n\r\nconst Step2 = ({\r\n  register,\r\n  errors,\r\n  control,\r\n  setValue,\r\n  watch,\r\n  stepperData,\r\n  name,\r\n  inputType,\r\n  selectOptions,\r\n  headingData,\r\n  label\r\n}) => {\r\n  setValue(name, \"current_team\");\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>{headingData.h1}</h2>\r\n      <p>{headingData.para}</p>\r\n      <form id=\"stepForm\">\r\n        <CommonInput\r\n        label={label}\r\n          name={name}\r\n          control={control}\r\n          rules={{ required: \"Name is required\" }}\r\n          error={errors.name}\r\n          type={inputType}\r\n          options={stepperData}\r\n          selectOptions={selectOptions}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Step2;\r\n","import React, { useState } from \"react\";\r\nimport CommonInput from \"../../../components/atomic/CommonInput\";\r\n\r\nconst Step2 = ({\r\n  register,\r\n  errors,\r\n  control,\r\n  setValue,\r\n  watch,\r\n  stepperData,\r\n  name,\r\n  inputType,\r\n  selectOptions,\r\n  headingData\r\n}) => {\r\n  return (\r\n    <div className=\"container\">\r\n        <h2>{headingData.h1}</h2>\r\n        <p>{headingData.para}</p>\r\n      <form id=\"stepForm\">\r\n        {\r\n          name?\r\n          <>\r\n          <CommonInput\r\n          label=\"Select your Date\"\r\n          name=\"date\"\r\n          control={control}\r\n          rules={{ required: \"Name is required\" }}\r\n          error={errors.name}\r\n          type=\"date\"\r\n        />\r\n        <CommonInput\r\n          label=\"Select your Time\"\r\n          name=\"time\"\r\n          control={control}\r\n          rules={{ required: \"Name is required\" }}\r\n          error={errors.name}\r\n          type=\"time\"\r\n        />\r\n          </>\r\n          :\"\"\r\n        }\r\n        \r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Step2;","const STEPPER_DATA = {\r\n  1: {\r\n    data: [],\r\n    name: null,\r\n    inputType: null,\r\n    headingData: {\r\n      h1: \"Add your Contact Details\",\r\n      para: ` Add your Contact Details We are a Global tech talent and solutions\r\n            provider. Join our platform and take advantage of the opportunity to\r\n            enhance your talent acquisition journey with Rexett, all while\r\n            enjoying significant savings of up to 72% on hiring staff. Join the\r\n            ranks of over 100 satisfied clients who have chosen to partner with\r\n            Rexett.`,\r\n    },\r\n  },\r\n  2: {\r\n    data: [],\r\n    name: \"engagement_type\",\r\n    inputType: \"radio\",\r\n    headingData: {\r\n      h1: \"Select the ideal length for your engagement\",\r\n      para: `Select the ideal length for your engagement`,\r\n    },\r\n  },\r\n  3: {\r\n    data: [],\r\n    name: \"project_length\",\r\n    inputType: \"radio\",\r\n    headingData: {\r\n      h1: \"How long will the Engagement last?\",\r\n      para: `Select the ideal length for your engagement.`,\r\n    },\r\n  },\r\n  4: {\r\n    data: [],\r\n    name: \"development_start\",\r\n    inputType: \"radio\",\r\n    headingData: {\r\n      h1: \"When should your New Team Member Start ?\",\r\n      para: ``,\r\n    },\r\n  },\r\n  5: {\r\n    data: [],\r\n    name: \"availability\",\r\n    inputType: \"radio\",\r\n    headingData: {\r\n      h1: \"What Availablity you need ?\",\r\n      para: ``,\r\n    },\r\n  },\r\n  6: {\r\n    data: [],\r\n    name: \"skill\",\r\n    inputType: \"select\",\r\n    headingData: {\r\n      h1: \"What Skillset you need ?\",\r\n      para: ``,\r\n    },\r\n    label: \"Select Your Skills\",\r\n  },\r\n  7: {\r\n    data: [],\r\n    name: \"date\",\r\n    inputType: \"date\",\r\n    headingData: {\r\n      h1: \"Book a Meeting with your Personal Match\",\r\n      para: ``,\r\n    },\r\n  },\r\n  8: {\r\n    data: [],\r\n    name: null,\r\n    inputType: null,\r\n    headingData: {\r\n      h1: \"Thank you for applying\",\r\n      para: `A Rexett Family Team Member Will Reach Out to You Shortly for the Next Steps!`,\r\n    },\r\n  },\r\n};\r\n\r\nexport const getCurrentStepper = (count) => STEPPER_DATA[count] || null;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n} from \"react-bootstrap\";\r\nimport { FaEye } from \"react-icons/fa\";\r\nimport { HiUpload } from \"react-icons/hi\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport CommonInput from \"../../../components/atomic/CommonInput\";\r\nimport ScreenLoader from \"../../../components/atomic/ScreenLoader\";\r\nimport CommonAutocomplete from \"../../../components/atomic/CommonAutoComplete\";\r\nimport RexettButton from \"../../../components/atomic/RexettButton\";\r\nimport { getAllCountries } from \"../../../redux/slices/authenticationDataSlice\";\r\nimport StepperFormWrapper from \"../../../components/common/websiteRegisterStepsForm/StepperFormWrapper\";\r\nimport Step1 from \"./Step1\";\r\nimport Step2 from \"./Step2\";\r\nimport Step3 from \"./Step3\";\r\nimport { getCurrentStepper } from \"./constant\";\r\nimport {\r\n  applyAsClient,\r\n  getWebClientData,\r\n  getWebClientLookUp,\r\n  getWebsiteSkills,\r\n} from \"../../../redux/slices/clientDataSlice\";\r\n\r\nconst ClientRegisterForm = ({ role }) => {\r\n  const { t } = useTranslation();\r\n  const {\r\n    register,\r\n    control,\r\n    reset,\r\n    watch,\r\n    setValue,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const [activeStep, setActiveStep] = useState(1);\r\n  const dispatch = useDispatch();\r\n  const { skillList, clientLook } = useSelector((state) => state.clientData);\r\n\r\n  let { data, name, inputType, headingData, label } =\r\n    getCurrentStepper(activeStep);\r\n\r\n  const skillListMapped = skillList.map((item) => {\r\n    return { value: item.id, label: item.title };\r\n  });\r\n\r\n  const labelAndValue = clientLook[name]?.map((item) => {\r\n    return { value: item.slug, label: item.name };\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(getWebsiteSkills());\r\n    dispatch(getWebClientData());\r\n    dispatch(getWebClientLookUp());\r\n  }, [dispatch]);\r\n\r\n  const getActiveStepComponent = () => {\r\n    switch (activeStep) {\r\n      case 1:\r\n        return (\r\n          <Step1\r\n            register={register}\r\n            errors={errors}\r\n            control={control}\r\n            watch={watch}\r\n            setValue={setValue}\r\n            headingData={headingData}\r\n          />\r\n        );\r\n      case 2:\r\n      case 3:\r\n      case 4:\r\n      case 5:\r\n      case 6:\r\n        return (\r\n          <Step2\r\n            register={register}\r\n            errors={errors}\r\n            watch={watch}\r\n            setValue={setValue}\r\n            control={control}\r\n            stepperData={labelAndValue}\r\n            name={name}\r\n            inputType={inputType}\r\n            selectOptions={skillListMapped}\r\n            headingData={headingData}\r\n            label={label}\r\n          />\r\n        );\r\n      case 7:\r\n      case 8:\r\n        return (\r\n          <Step3\r\n            register={register}\r\n            errors={errors}\r\n            control={control}\r\n            watch={watch}\r\n            setValue={setValue}\r\n            name={name}\r\n            headingData={headingData}\r\n          />\r\n        );\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const onSubmit = (stepData) => {\r\n    console.log(stepData,\"ddd\")\r\n\r\n   let data= {\r\n      \"name\": \"himanshu\",\r\n      \"email\": \"ram@yopmail.com\",\r\n      \"phone_number\": \"9410514319\",\r\n      \"country_code\": \"45\",\r\n      \"password\": \"Pankaj@0987\",\r\n      \"client_type\": \"individual\",\r\n      \"company_logo\": \"\",\r\n      \"company_name\": \"\",\r\n      \"company_tax_id\": \"\",\r\n      \"company_address\": \"\",\r\n      \"company_type\": \"\",\r\n      \"time_zone\": \"Asia/Kabul\"\r\n    }\r\n    dispatch(applyAsClient(data))\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className=\"card-box\">\r\n        <div>\r\n          {false ? (\r\n            <ScreenLoader />\r\n          ) : (\r\n            <form onSubmit={handleSubmit(onSubmit)} noValidate>\r\n              {getActiveStepComponent()}\r\n\r\n              {activeStep !== 1 && (\r\n                <RexettButton\r\n                  type=\"button\"\r\n                  text=\"Back\"\r\n                  onClick={() => {\r\n                    setActiveStep((prev) => prev - 1);\r\n                  }}\r\n                  className=\"main-btn outline-main-btn px-5\"\r\n                  // disabled={smallLoader}\r\n                  // isLoading={smallLoader}\r\n                />\r\n              )}\r\n              <RexettButton\r\n                type=\"submit\"\r\n                text={activeStep < 3 ? \"Continue\" : t(\"submit\")}\r\n                className=\"main-btn px-5\"\r\n                // onClick={() => {\r\n                //   setActiveStep((prev) => prev + 1);\r\n                // }}\r\n                // disabled={smallLoader}\r\n                // isLoading={smallLoader}\r\n              />\r\n            </form>\r\n          )}\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nexport default ClientRegisterForm;\r\n"],"names":["_ref","_userProfileDetails$d9","register","errors","control","setValue","watch","headingData","localStorage","getItem","selectedImage","setSelectedImage","useState","t","useTranslation","dispatch","useDispatch","isPassword","setPassword","firstPass","secondPass","file","setFile","smallLoader","userProfileDetails","screenLoader","countries","useSelector","state","developerData","useEffect","getAllCountries","_userProfileDetails$d","_userProfileDetails$d2","_userProfileDetails$d3","_userProfileDetails$d4","_userProfileDetails$d5","_userProfileDetails$d6","_userProfileDetails$d7","_userProfileDetails$d8","data","name","email","phone_number","address","address_2","city","country","passcode","Tooltip","validatePassword","value","test","_jsx","_Fragment","children","_jsxs","className","h1","para","ScreenLoader","Row","Col","md","CommonInput","rules","required","error","type","options","label","pattern","message","validate","previous_password","onTogglePassword","icon","FaEye","password","CommonAutocomplete","apiKey","process","onPlaceSelected","place","formatted_address","onChange","e","target","types","selectOptions","event","files","reader","FileReader","onloadend","result","readAsDataURL","handleFileChange","accept","Form","Label","htmlFor","HiUpload","src","profile_picture","alt","stepperData","inputType","id","STEPPER_DATA","_clientLook$name","role","reset","handleSubmit","formState","useForm","activeStep","setActiveStep","skillList","clientLook","clientData","skillListMapped","map","item","title","labelAndValue","slug","getWebsiteSkills","getWebClientData","getWebClientLookUp","onSubmit","stepData","console","log","applyAsClient","noValidate","getActiveStepComponent","Step1","Step2","Step3","RexettButton","text","onClick","prev"],"sourceRoot":""}
{"version":3,"file":"static/js/9682.86c3cf0e.chunk.js","mappings":"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","sources":["components/atomic/CreateFolder.jsx","components/atomic/RexettUploadFile.jsx","components/common/Documents/DocumentListView.jsx","components/common/Documents/ShareModal.jsx","components/common/Documents/RexettDocuments.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport RexettButton from \"./RexettButton\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {createNewFolderAndFile, getFolderData, renameFolderAndFile } from \"../../redux/slices/clientDataSlice\";\r\nconst CreateFolder = ({ show, handleClose,currentFolderDetails,data,folderData,currentRole,setOpen }) => {\r\n    const {smallLoader}=useSelector(state=>state.clientData);\r\n    const dispatch=useDispatch()\r\n    const {\r\n        register,\r\n        setValue,\r\n        handleSubmit,\r\n        formState: { errors, isDirty, isValid, isSubmitting },\r\n    } = useForm({});\r\n    useEffect(()=>{\r\n      setValue(\"s3_path\",data?.name)\r\n    },[data])\r\n\r\n    const onSubmit = (values) => {\r\n      \r\n          if(data?.name){\r\n            let editName={\r\n                name:values.s3_path,\r\n            }\r\n            dispatch(renameFolderAndFile(editName,data?.id,(parent_id)=>{\r\n                let filterData={\r\n                    parent_id:currentFolderDetails?.id\r\n                }\r\n                handleClose()\r\n                setOpen(false)\r\n                setValue(\"s3_path\",\"\")\r\n                dispatch(getFolderData(filterData,currentRole))\r\n            }))\r\n          }else{\r\n            let folderData= {\r\n                \"contract_id\": currentFolderDetails?.contract_id,\r\n                \"file_type\": 0,\r\n                \"parent_id\": currentFolderDetails?.id,\r\n                \"added_by\": currentRole,\r\n                \"type\": 1,\r\n                \"s3_path\": values.s3_path,\r\n              }\r\n            dispatch(createNewFolderAndFile(folderData, (parent_id)=>{\r\n                let filterData={\r\n                    parent_id:parent_id\r\n                }\r\n                handleClose()\r\n                setValue(\"s3_path\",\"\")\r\n                dispatch(getFolderData(filterData,currentRole))\r\n            }))\r\n          }\r\n       \r\n    }\r\n\r\n    const isFolderAlreadyExists = (folderName) => {\r\n        return folderData?.some(existingFolder => existingFolder.s3_path === folderName);\r\n    };\r\n\r\n    const validateFolderName = (folderName) => {\r\n        if (!folderName) {\r\n            return \"Please Enter Folder Name\";\r\n        } else if (isFolderAlreadyExists(folderName)) {\r\n            return \"Folder already exists\";\r\n        }\r\n        return true;\r\n    };\r\n\r\n    return (\r\n        <Modal show={show} onHide={handleClose} centered className=\"custom-modal\" animation>\r\n            <Modal.Header closeButton className=\"border-0 pb-3\">\r\n                {/* <Modal.Title></Modal.Title> */}\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <h3 className=\"popup-heading\">{data?.name?\"Edit Folder\":\"Create Folder\"}</h3>\r\n                <form onSubmit={handleSubmit(onSubmit)} noValidate>\r\n                    <div className=\"experience-container\">\r\n                        <Row>\r\n                            <Col md=\"12\">\r\n                                {/* <Form.Group className=\"mb-4\">\r\n                                    <Form.Label>Select Category</Form.Label>\r\n                                    <Form.Select>\r\n                                        <option value=\"\" selected disabled>Select Category</option>\r\n                                        <option value=\"invoices\">Invoices</option>\r\n                                        <option value=\"contracts\">Contracts</option>\r\n                                        <option value=\"cv\">CV</option>\r\n                                        <option value=\"others\">Others</option>\r\n                                    </Form.Select>\r\n                                    <input type=\"text\"/>\r\n                                    \r\n                                </Form.Group> */}\r\n                                <Form.Group className=\"mb-4 \">\r\n                                    <Form.Control type=\"text\" className=\"common-field\" placeholder=\"Enter Folder Name\"\r\n                                        name=\"s3_path\"\r\n                                        {...register(\"s3_path\", {\r\n                                            validate: validateFolderName\r\n                                        })}\r\n                                    />\r\n                          <p className=\"error-message\">{errors.s3_path?.message}</p>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                        <RexettButton\r\n                            type=\"submit\"\r\n                            text={data?.name ? \"Edit\":\"Create\"}\r\n                            className=\"main-btn px-4 font-14 fw-semibold\"\r\n                            variant=\"transparent\"\r\n                            isLoading={smallLoader}\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\nexport default CreateFolder;","import React, { useState } from \"react\";\r\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport { callPreSignedUrlResponse, createNewFolderAndFile, filePreassignedUrlGenerate, getFolderData } from \"../../redux/slices/clientDataSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport RexettButton from \"./RexettButton\";\r\nimport { useForm } from \"react-hook-form\";\r\nconst RexettUploadFile = ({ show, handleClose, currentFolderDetails, currentRole, setOpen }) => {\r\n    const [selectedFile, setSelectedFile] = useState(null)\r\n    const[details,setDetails] = useState()\r\n    const dispatch = useDispatch()\r\n    const { smallLoader } = useSelector(state => state.clientData);\r\n    const {\r\n        register,\r\n        setValue,\r\n        handleSubmit,\r\n        formState: { errors, isDirty, isValid, isSubmitting },\r\n    } = useForm({});\r\n\r\n    console.log(details,\"details\")\r\n\r\n    console.log(currentFolderDetails , \"currentFolderDetails\")\r\n   \r\n    const onSubmit = async (values) => {\r\n        console.log(values ,\"values\")\r\n        setDetails(values)\r\n        let formData = new FormData();\r\n        formData.append(\"file\", values.file_name[0]);\r\n        console.log(selectedFile , \"selectedFile\")\r\n        \r\n        if (values?.category === \"3\" && values?.file_name[0]?.type !== \"application/pdf\") {\r\n            alert(\"Only PDF files are allowed for Invoices category.\");\r\n            return; \r\n        }\r\n        dispatch(filePreassignedUrlGenerate(formData, (url) => {\r\n            let fileData = {\r\n                \"contract_id\": currentFolderDetails.contract_id,\r\n                \"file_type\": 1,\r\n                \"parent_id\": currentFolderDetails.id,\r\n                \"added_by\": currentRole,\r\n                \"type\": +values.category,\r\n                \"s3_path\": url,\r\n            }\r\n            dispatch(createNewFolderAndFile(fileData, (parent_id) => {\r\n                let data = {\r\n                    parent_id: parent_id\r\n                }\r\n                handleClose();\r\n                setOpen(false);\r\n                setSelectedFile(null);\r\n                dispatch(getFolderData(data, currentRole));\r\n            }));\r\n        }));\r\n    };\r\n    \r\n    return (\r\n        <Modal show={show} onHide={handleClose} centered className=\"custom-modal\" animation>\r\n            <Modal.Header closeButton className=\"border-0 pb-3\">\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <h3 className=\"popup-heading\">Upload file</h3>\r\n                <form onSubmit={handleSubmit(onSubmit)} noValidate>\r\n                    <div className=\"experience-container\">\r\n                        <Row>\r\n                            <Col md=\"12\">\r\n                                <Form.Group className=\"mb-4\">\r\n                                    {/* <Form.Label>Select Category</Form.Label> */}\r\n                                    <Form.Select className=\"common-field\"\r\n                                        {...register(\"category\", { required: \"Please select a Category\" })}\r\n                                    >\r\n                                        <option value=\"\" selected disabled>Select Category</option>\r\n                                        <option value=\"3\">Invoices</option>\r\n                                        <option value=\"1\">Contracts</option>\r\n                                        <option value=\"2\">CV</option>\r\n                                        <option value=\"4\">Others</option>\r\n                                    </Form.Select>\r\n                                    <Form.Control type=\"file\" className=\"d-none\" id=\"upload-file\"\r\n                                        name=\"file_name\"\r\n                                        {...register(\"file_name\", {\r\n                                            onChange: (e) => setSelectedFile(e.target.files[0]),\r\n                                            required: {\r\n                                                value: true,\r\n                                            },\r\n                                        })}\r\n                                    />\r\n                                    <Form.Label htmlFor=\"upload-file\" className=\"upload-file-label\">Upload File</Form.Label>\r\n                                </Form.Group>\r\n                                {selectedFile ? <div>Selected File:<span className=\"fs-6\">{selectedFile?.name}</span></div> : \"\"}\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                        <RexettButton\r\n                            type=\"submit\"\r\n                            text=\"Upload\"\r\n                            className=\"main-btn px-4 font-14 fw-semibold\"\r\n                            variant=\"transparent\"\r\n                            disabled={smallLoader && details?.category===\"3\" ? true : false}\r\n                            isLoading={smallLoader}\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\nexport default RexettUploadFile;","import React from 'react'\r\nimport { FaFilePdf } from \"react-icons/fa\";\r\nimport { HiMiniUser } from \"react-icons/hi2\";\r\nimport { FaTrashCan } from \"react-icons/fa6\";\r\nimport { FaDownload } from \"react-icons/fa6\";\r\nimport { FaFolder } from \"react-icons/fa\";\r\nimport NoDataFound from '../../atomic/NoDataFound';\r\nimport { IoIosShareAlt } from 'react-icons/io';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst DocumentListView = ({folderData,deleteFileAndFolder,handleDownload,getFileName,generateFileImage,toggleFolderView,handleShowShareFileModal}) => {\r\n  const { t } = useTranslation()\r\n    return (\r\n    <div>\r\n    <div className=\"table-responsive\">\r\n        <table className=\"table document-table table-ui-custom\">\r\n            <thead>\r\n                <th className=\"document-th filename-th px-3\">{t(\"name\")}</th>\r\n                <th className=\"document-th owner-th\">{t(\"owner\")}</th>\r\n                <th className=\"document-th location-th\">{t(\"location\")}</th>\r\n                <th className=\"document-th action-th\">{t(\"action\")}</th>\r\n            </thead>\r\n            <tbody>\r\n               {folderData.length>0?folderData?.map((item,index)=>{\r\n                return (\r\n                  <>\r\n                  <tr>\r\n                    <td className=\"document-data filename-data px-3\">\r\n                        <div className=\"d-flex gap-2 align-items-center filename-data\">\r\n\r\n                            {\r\n                                item.file_type!==0?<>\r\n                                <div className=\"file-icon\">\r\n                                {generateFileImage(item?.s3_path)}\r\n                            </div>\r\n                            <span>{getFileName(item?.s3_path)}</span>\r\n                                </>\r\n                                :\r\n                                <>\r\n                                      <div className=\"folder-icon\" onDoubleClick={()=>toggleFolderView(item)}>\r\n                                <FaFolder />\r\n                            </div>\r\n                            <span>{item.s3_path}</span>\r\n                                </>\r\n                            }\r\n                            </div>\r\n                        \r\n                    </td>\r\n                    <td className=\"document-data\">\r\n                        <div className=\"d-flex align-items-center owner-icon gap-1\">\r\n                            <span className=\"me-icon\"><HiMiniUser /></span><p className=\"mb-0\">{item?.user ? item?.user?.name:\"Me\"}</p>\r\n                        </div>        \r\n                    </td>\r\n                    <td className=\"document-data\">{item?.user ? \"Shared\":\"My Documents\"}</td>\r\n                    <td className=\"document-data\">\r\n                        <div className=\"d-flex gap-3\">\r\n                            <button className=\"download-btn doc-action-btn\" onClick={() => handleDownload(item?.s3_path)}><FaDownload />\r\n                            </button>\r\n                            <button className=\"trash-btn doc-action-btn\" onClick={() => deleteFileAndFolder(item.id, item.file_type==0?\"folder\": \"file\")} ><FaTrashCan /></button>\r\n                            <button onClick={()=>handleShowShareFileModal(item?.id)} className=\"view-btn doc-action-btn\"><IoIosShareAlt /></button>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n                  </>\r\n                )\r\n               }):<NoDataFound/> }\r\n                {/* <tr>\r\n                    <td className=\"document-data filename-data\">\r\n                        <div className=\"d-flex gap-2 align-items-center\">\r\n                            <div className=\"file-icon\">\r\n                                <FaFilePdf />\r\n                            </div>\r\n                            <span>PDF Presentation</span>\r\n                        </div>\r\n                    </td>\r\n                    <td className=\"document-data\">\r\n                        <div className=\"d-flex align-items-center owner-icon gap-1\">\r\n                            <span className=\"share-user-icon\">C</span><p className=\"mb-0 owner-email\">client123@gmail.com</p>\r\n                        </div>        \r\n                    </td>\r\n                    <td className=\"document-data\">Shared with me</td>\r\n                    <td className=\"document-data\">\r\n                        <div className=\"d-flex gap-3\">\r\n                            <button className=\"download-btn doc-action-btn\"><FaDownload />\r\n                            </button>\r\n                            <button className=\"trash-btn doc-action-btn\" ><FaTrashCan /></button>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td className=\"document-data filename-data px-3\">\r\n                        <div className=\"d-flex gap-2 align-items-center filename-data\">\r\n                            <div className=\"folder-icon\">\r\n                                <FaFolder />\r\n                            </div>\r\n                            <span>New Folder</span>\r\n                        </div>\r\n                    </td>\r\n                    <td className=\"document-data\">\r\n                        <div className=\"d-flex align-items-center owner-icon gap-1\">\r\n                            <span className=\"me-icon\"><HiMiniUser /></span><p className=\"mb-0\">Me</p>\r\n                        </div>      \r\n                    </td>\r\n                    <td className=\"document-data\">My Documents</td>\r\n                    <td className=\"document-data\">\r\n                        <div className=\"d-flex gap-3\">\r\n                            <button className=\"download-btn doc-action-btn\"><FaDownload />\r\n                            </button>\r\n                            <button className=\"trash-btn doc-action-btn\" ><FaTrashCan /></button>\r\n                        </div>\r\n                    </td>\r\n                </tr> */}\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>\r\n  )\r\n}\r\n\r\nexport default DocumentListView\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport RexettButton from \"../../atomic/RexettButton\";\r\nimport {\r\n  getDocumentShare,\r\n  shareBelongisFile,\r\n} from \"../../../redux/slices/developerDataSlice\";\r\n\r\nconst baseTagifySettings = {\r\n  blacklist: [\"xxx\", \"yyy\", \"zzz\"],\r\n  maxTags: 6,\r\n  placeholder: \"Add People\",\r\n  dropdown: {\r\n    enabled: 1,\r\n    maxItems: 5,\r\n  },\r\n};\r\n\r\nconst ShareModal = ({ show, handleClose, fileId }) => {\r\n  const tagifyRef1 = useRef();\r\n  const dispatch = useDispatch();\r\n  const [tagifySettings, setTagifySettings] = useState(baseTagifySettings);\r\n  const [tagifyProps, setTagifyProps] = useState({});\r\n  const [sharedTags, setSharedTags] = useState();\r\n  const [data, setData] = useState();\r\n  const { shareDocument, smallLoader } = useSelector(\r\n    (state) => state.developerData\r\n  );\r\n  const suggestedTags =\r\n    shareDocument?.data?.map((item) => {\r\n      return { value: item.id, label: item.name };\r\n    }) || [];\r\n\r\n  useEffect(() => {\r\n    dispatch(getDocumentShare());\r\n    setData();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setData(e);\r\n    if (e.detail?.value) {\r\n      let d = JSON.parse(e.detail.value);\r\n      setSharedTags(d);\r\n    } else {\r\n      setSharedTags();\r\n    }\r\n  };\r\n\r\n  const handleShare = async (e) => {\r\n    e.preventDefault();\r\n    let user_id = shareDocument?.data?.map((item) => item.id);\r\n    let payload = {\r\n      file_id: fileId,\r\n      user_ids: user_id,\r\n    };\r\n    if (user_id.length > 0) {\r\n      await dispatch(shareBelongisFile(payload));\r\n      handleClose();\r\n      setData();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={handleClose}\r\n      centered\r\n      className=\"custom-modal\"\r\n      animation\r\n    >\r\n      <Modal.Header closeButton className=\"border-0 pb-3\"></Modal.Header>\r\n\r\n      <Modal.Body>\r\n        <h3 className=\"popup-heading\">Share</h3>\r\n        <Form>\r\n          <div className=\"experience-container\">\r\n            <Row>\r\n              <Col md=\"12\">\r\n                <Form.Group className=\"mb-4\">\r\n                  <Select\r\n                    className=\"basic-single\"\r\n                    options={suggestedTags}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <div>\r\n                  <div className=\"text-center mt-4\">\r\n                    <RexettButton\r\n                      type=\"submit\"\r\n                      text=\"Share\"\r\n                      className=\"main-btn px-4 font-14 fw-semibold\"\r\n                      onClick={handleShare}\r\n                      variant=\"success\"\r\n                      disabled={data ? false : true}\r\n                      isLoading={smallLoader}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ShareModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Button,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Tabs,\r\n  Tab,\r\n  Nav,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n} from \"react-bootstrap\";\r\nimport { FaFolder } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaEye } from \"react-icons/fa\";\r\nimport { FaTrashCan } from \"react-icons/fa6\";\r\nimport { FaDownload } from \"react-icons/fa6\";\r\nimport { FaImage } from \"react-icons/fa6\";\r\nimport { MdEdit } from \"react-icons/md\";\r\nimport { MdPictureAsPdf } from \"react-icons/md\";\r\nimport { FaFileAlt } from \"react-icons/fa\";\r\nimport userImage from \"../../../assets/img/user-img.jpg\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  _deleteFileAndFolder,\r\n  createNewFolderAndFile,\r\n  filePreassignedUrlGenerate,\r\n  getFolderData,\r\n} from \"../../../redux/slices/clientDataSlice\";\r\nimport CreateFolder from \"../../atomic/CreateFolder\";\r\nimport RexettUploadFile from \"../../atomic/RexettUploadFile\";\r\nimport ConfirmationModal from \"../../../pages/views/Modals/ConfirmationModal\";\r\nimport ScreenLoader from \"../../atomic/ScreenLoader\";\r\nimport NoDataFound from \"../../atomic/NoDataFound\";\r\nimport { IoGrid } from \"react-icons/io5\";\r\nimport { FaListUl } from \"react-icons/fa6\";\r\nimport { FaFilePdf } from \"react-icons/fa\";\r\nimport { HiMiniUser } from \"react-icons/hi2\";\r\nimport DocumentListView from \"./DocumentListView\";\r\nimport { IoIosShareAlt } from \"react-icons/io\";\r\nimport ShareModal from \"./ShareModal\";\r\nimport { FaFilter } from \"react-icons/fa\";\r\nimport { getDocumentShare } from \"../../../redux/slices/developerDataSlice\";\r\nimport { shareDocument } from \"../../../redux/slices/developerDataSlice\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst RexettDocuments = ({ currentRole }) => {\r\n  const dispatch = useDispatch();\r\n  const [fileId, setFileID] = useState(null);\r\n  const [bradCrump, setBradCrum] = useState([]);\r\n  const [allFilterValue, setAllCurrentFilterValue] = useState({});\r\n  const [editFolderName, setEditFolderName] = useState({});\r\n  const [showFolderView, setShowFolderView] = useState(false);\r\n  const [currentFolderDetails, setCurrentFolderDetails] = useState({});\r\n  const [sharefileModal, setShareFileModal] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [isDelete, setDelete] = useState({ isDelete: false, id: \"\" });\r\n  const [timerValue, setTimerValue] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const { folderData, smallLoader, screenLoader } = useSelector(\r\n    (state) => state.clientData\r\n  );\r\n  const { shareDocument } = useSelector((state) => state.developerData);\r\n  const [showUploadFileModal, setShowUploadFileModal] = useState(false);\r\n  const { t } = useTranslation();\r\n\r\n  const handleShowUploadFileModal = (id, name) => {\r\n    console.log(id,\"idddd\")\r\n    console.log(name,\"name\")\r\n    if (id) {\r\n      setShowUploadFileModal(true);\r\n      setEditFolderName({ id: id, name: name });\r\n    } else {\r\n      setShowUploadFileModal(true);\r\n      setOpen(!open);\r\n    }\r\n  };\r\n\r\n  const handleShowShareFileModal = (id) => {\r\n    setShareFileModal(true);\r\n    setFileID(id);\r\n  };\r\n  const handleCloseShareFileModal = () => {\r\n    setShareFileModal(false);\r\n  };\r\n\r\n  const handleCloseUploadFileModal = () => {\r\n    setShowUploadFileModal(false);\r\n    setShow(false);\r\n    setOpen(false);\r\n    setDelete({ isDelete: false, id: \"\" });\r\n  };\r\n\r\n  const toggleFolderView = (item) => {\r\n    let data = {\r\n      name: item?.s3_path,\r\n      parent_id: item?.parent_id,\r\n    };\r\n    console.log(data,\"data\")\r\n    setBradCrum([...bradCrump, data]);\r\n    setShowFolderView(true);\r\n    let filterData = {\r\n      parent_id: item.id,\r\n    };\r\n\r\n    dispatch(getFolderData(filterData, currentRole));\r\n  };\r\n\r\n  useEffect(() => {\r\n    let filterData = {\r\n      parent_id: \"0\",\r\n    };\r\n    dispatch(getFolderData(filterData, currentRole));\r\n  }, [dispatch]);\r\n\r\n  const handleDownload = (url) => {\r\n    const newTab = window.open(url, \"_blank\");\r\n    if (newTab) {\r\n      newTab.focus();\r\n    } else {\r\n      // If the popup blocker prevents opening the new tab\r\n      alert(\r\n        \"Please allow pop-ups for this site to download the file in a new tab.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const getFileName = (url) => {\r\n    let fileName = url?.split(\"/\");\r\n    if (fileName) {\r\n      let splitWithDot = fileName[fileName.length - 1].split(\".\");\r\n      return `${splitWithDot[splitWithDot.length - 2]}.${\r\n        splitWithDot[splitWithDot.length - 1]\r\n      }`;\r\n    }\r\n  };\r\n\r\n  const generateFileImage = (url) => {\r\n    let fileName = url?.split(\"/\");\r\n    let splitWithDot = fileName[fileName.length - 1];\r\n    let fileExtWithDot = splitWithDot.split(\".\");\r\n    let fileExt = fileExtWithDot[fileExtWithDot.length - 1];\r\n    switch (fileExt) {\r\n      case \"ts\":\r\n      case \"js\":\r\n      case \"txt\":\r\n      case \"docx\":\r\n      // return <FaFileAlt />\r\n      case \"pdf\":\r\n      // return <MdPictureAsPdf />\r\n      case \"png\":\r\n      case \"jpg\":\r\n      case \"jpeg\":\r\n        return <img src={url} className=\"doc-image\" />;\r\n\r\n      default:\r\n    }\r\n  };\r\n\r\n  const deleteFileAndFolder = (id, name) => {\r\n    setDelete({ isDelete: true, id: id, name: name });\r\n  };\r\n\r\n  const handleDelete = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      _deleteFileAndFolder(isDelete?.id, () => {\r\n        let filterData = {\r\n          parent_id: currentFolderDetails?.id,\r\n        };\r\n        setDelete({ isDelete: false, id: \"\" });\r\n        dispatch(getFolderData(filterData, currentRole));\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleFilterData = (e, filter) => {\r\n    if (e.target.value == \"All\") {\r\n      let filterData = {\r\n        parent_id: \"0\",\r\n      };\r\n      dispatch(getFolderData(filterData, currentRole));\r\n      setAllCurrentFilterValue({\r\n        [filter]: e.target.value,\r\n      });\r\n    } else {\r\n      let filterData = {\r\n        ...allFilterValue,\r\n        [filter]: e.target.value,\r\n        parent_id: \"0\",\r\n      };\r\n      setAllCurrentFilterValue({\r\n        [filter]: e.target.value,\r\n      });\r\n      dispatch(getFolderData(filterData, currentRole));\r\n    }\r\n  };\r\n  console.log(allFilterValue, \"allFilterValue\");\r\n  const clearAllFilter = () => {\r\n    setAllCurrentFilterValue({\r\n      date: \"dd-mm-yyyy\",\r\n      category: \"All\",\r\n      file_extension: \"All\",\r\n    });\r\n    setShowFolderView(false);\r\n    setSearch(\"\");\r\n    let filterData = {\r\n      parent_id: \"0\",\r\n    };\r\n    dispatch(getFolderData(filterData, currentRole));\r\n  };\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearch(e.target.value);\r\n    clearTimeout(timerValue);\r\n    const timer = setTimeout(() => {\r\n      let filterData = {\r\n        parent_id: currentFolderDetails?.id,\r\n        search: e.target.value,\r\n      };\r\n      dispatch(getFolderData(filterData, currentRole));\r\n    }, 500);\r\n    setTimerValue(timer);\r\n  };\r\n  const bradCrumpHandle = (id) => {\r\n    let copyBrdCrmb = [...bradCrump];\r\n    let index = copyBrdCrmb.findIndex((item) => item.parent_id == id);\r\n    const newData = copyBrdCrmb.slice(0, index);\r\n    setBradCrum(newData);\r\n    let filterData = {\r\n      parent_id: id,\r\n    };\r\n\r\n    dispatch(getFolderData(filterData, currentRole));\r\n    if (id == \"0\") {\r\n      setBradCrum([]);\r\n      setShowFolderView(false);\r\n    }\r\n  };\r\n\r\n  const [showFilterMenu, setShowFilterMenu] = useState(false);\r\n\r\n  const handleShowFilterMenu = () => {\r\n    setShowFilterMenu(!showFilterMenu);\r\n  };\r\n  const doctooltip = (\r\n    <Tooltip id=\"tooltip\">Create folder or Upload files</Tooltip>\r\n  );\r\n  return (\r\n    <>\r\n      <section>\r\n        <div>\r\n          <Row>\r\n            <Col md={12}>\r\n              <div className=\"d-flex flex-wrap align-items-center gap-2 mb-4\">\r\n                {/* <Button onClick={() => setOpen(!open)} aria-controls=\"example-collapse-text\" aria-expanded={open}>+ New</Button> */}\r\n                {/* <div>\r\n                                    <Form.Label className=\"main-btn px-4 cursor-pointer upload-btn mb-0\" onClick={() => setShow(true)}>+ Upload File</Form.Label>\r\n                                </div> */}\r\n                <div>\r\n                  <Button\r\n                    variant=\"transparent\"\r\n                    onClick={handleShowFilterMenu}\r\n                    className=\"main-btn outline-main-btn px-4\"\r\n                  >\r\n                    <FaFilter /> {t(\"filter\")}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n\r\n            {showFolderView && search == \"\" ? (\r\n              <Col md={12}>\r\n                <section className=\"folder-view\">\r\n                  <div className=\"breadcrumb\">\r\n                    {bradCrump?.map((item, index) => {\r\n                      return (\r\n                        <>\r\n                          <Link\r\n                            className=\"bread-link\"\r\n                            onClick={() => bradCrumpHandle(item.parent_id)}\r\n                          >\r\n                            {item.name}\r\n                          </Link>\r\n                          <span className=\"divider\"> &gt; </span>\r\n                        </>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </section>{\" \"}\r\n              </Col>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <Col md={12}>\r\n              <div className=\"d-md-flex gap-3\">\r\n                <div\r\n                  className={\r\n                    showFilterMenu ? \"side-filter active\" : \"side-filter\"\r\n                  }\r\n                >\r\n                  <h3 className=\"section-head-sub\">{t(\"filter\")}</h3>\r\n                  <Form className=\"mb-4\">\r\n                    <div className=\"filter-section gap-3 align-items-center\">\r\n                      <div className=\"mb-2\">\r\n                        <Form.Label className=\"common-label\">\r\n                          {t(\"search\")}\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          placeholder={t(\"search\")}\r\n                          onChange={handleSearchChange}\r\n                          value={search}\r\n                          className=\"search-field\"\r\n                        ></Form.Control>\r\n                      </div>\r\n                      <div className=\"flex-none mb-2\">\r\n                        <Form.Label className=\"common-label\">\r\n                          {t(\"selectCategory\")}\r\n                        </Form.Label>\r\n                        <Form.Select\r\n                          className=\"filter-select width-full shadow-none\"\r\n                          value={allFilterValue?.category}\r\n                          onChange={(e) => handleFilterData(e, \"category\")}\r\n                        >\r\n                          <option value=\"All\">{t(\"all\")}</option>\r\n                          <option value=\"1\">{t(\"contracts\")}</option>\r\n                          <option value=\"3\">{t(\"invoices\")}</option>\r\n                        </Form.Select>\r\n                      </div>\r\n                      <div className=\"flex-none mb-2\">\r\n                        <Form.Label className=\"common-label\">\r\n                          {t(\"selectFileType\")}\r\n                        </Form.Label>\r\n                        <Form.Select\r\n                          className=\"filter-select width-full shadow-none\"\r\n                          value={allFilterValue?.file_extension}\r\n                          onChange={(e) =>\r\n                            handleFilterData(e, \"file_extension\")\r\n                          }\r\n                        >\r\n                          <option value=\"All\">{t(\"all\")}</option>\r\n                          <option value=\"pdf\">{t(\"pdfs\")}</option>\r\n                          <option value=\"doc\">{t(\"documents\")}</option>\r\n                          <option value=\"img\">{t(\"images\")}</option>\r\n                          <option value=\"other\">{t(\"others\")}</option>\r\n                        </Form.Select>\r\n                      </div>\r\n                      {/* <div className=\"flex-none mb-2\">\r\n                                                <Form.Label className=\"common-label\">Shared By</Form.Label>\r\n                                                <Form.Select className=\"filter-select width-full shadow-none\">\r\n                                                    <option value=\"\">Select</option>\r\n                                                    <option value=\"amazon\">Amazon</option>\r\n                                                    <option value=\"volvo\">Volvo</option>\r\n                                                    <option value=\"google\">Google</option>\r\n                                                    <option value=\"bmw\">BMW</option>\r\n                                                </Form.Select>\r\n                                            </div> */}\r\n                      <div className=\"mt-4\">\r\n                        <Button\r\n                          variant=\"transparent\"\r\n                          className=\"main-btn px-3 py-2 \"\r\n                          onClick={clearAllFilter}\r\n                        >\r\n                          {t(\"clear\")}\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </Form>\r\n                </div>\r\n                <div className=\"w-100\">\r\n                  <Tab.Container className=\"w-100\" defaultActiveKey=\"grid-view\">\r\n                    <div className=\"d-flex justify-content-between align-items-center mb-3 pb-2 border-bottom-grey\">\r\n                      <div className=\"d-flex align-items-center gap-3\">\r\n                        <div className=\"d-flex align-items-center gap-3\">\r\n                          <h3 className=\"section-head-sub mb-0\">\r\n                            {t(\"documents\")}\r\n                          </h3>\r\n                          <div className=\"position-relative\">\r\n                            <OverlayTrigger\r\n                              placement=\"bottom\"\r\n                              overlay={doctooltip}\r\n                            >\r\n                              <Button\r\n                                onClick={() => setOpen(!open)}\r\n                                className=\"main-btn px-2 add-new-btn cursor-pointer upload-btn mb-0\"\r\n                                aria-controls=\"example-collapse-text\"\r\n                                aria-expanded={open}\r\n                              >\r\n                                +\r\n                              </Button>\r\n                            </OverlayTrigger>\r\n                            <Collapse in={open} className=\"new-doc-collapse\">\r\n                              <div>\r\n                                <Form.Label\r\n                                  onClick={handleShowUploadFileModal}\r\n                                  className=\"main-btn outline-main-btn px-4 cursor-pointer upload-btn mb-2 w-100\"\r\n                                >\r\n                                  + {t(\"createFolder\")}\r\n                                </Form.Label>\r\n                                <Form.Label\r\n                                  onClick={() => setShow(true)}\r\n                                  className=\"main-btn outline-main-btn px-4 cursor-pointer upload-btn mb-0 w-100\"\r\n                                >\r\n                                  + {t(\"uploadFile\")}\r\n                                </Form.Label>\r\n                              </div>\r\n                            </Collapse>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <Nav variant=\"pills\" className=\"document-view-pill\">\r\n                        <Nav.Item className=\"document-view-item\">\r\n                          <Nav.Link\r\n                            className=\"document-view-link\"\r\n                            eventKey=\"grid-view\"\r\n                          >\r\n                            <IoGrid />\r\n                          </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item className=\"document-view-item\">\r\n                          <Nav.Link\r\n                            className=\"document-view-link\"\r\n                            eventKey=\"list-view\"\r\n                          >\r\n                            <FaListUl />\r\n                          </Nav.Link>\r\n                        </Nav.Item>\r\n                      </Nav>\r\n                    </div>\r\n                    <Tab.Content>\r\n                      <Tab.Pane eventKey=\"grid-view\">\r\n                        {screenLoader ? (\r\n                          <ScreenLoader />\r\n                        ) : (\r\n                          <div className=\"folder-listing\">\r\n                            {folderData?.length > 0 ? (\r\n                              folderData?.map((item) => {\r\n                                return (\r\n                                  <>\r\n                                    {item.file_type === 0 ? (\r\n                                      <>\r\n                                        <div\r\n                                          className=\"folder-list\"\r\n                                          onDoubleClick={() =>\r\n                                            toggleFolderView(item)\r\n                                          }\r\n                                        >\r\n                                          <div className=\"position-relative\">\r\n                                            <FaFolder className=\"folder-icon\" />\r\n                                            <div className=\"name-folder\">\r\n                                              <span className=\"name_folder_text\">\r\n                                                {item?.s3_path}\r\n                                              </span>\r\n                                              {item?.user ? (\r\n                                                <div className=\"shared-doc\">\r\n                                                  <p className=\"shared-text\">\r\n                                                    {t(\"sharedBy\")}{\" \"}\r\n                                                    {item?.user?.name}\r\n                                                  </p>\r\n                                                </div>\r\n                                              ) : (\r\n                                                \"\"\r\n                                              )}\r\n                                            </div>\r\n                                            <div className=\"doc-action\">\r\n                                              <button\r\n                                                className=\"trash-btn doc-action-btn\"\r\n                                                onClick={() =>\r\n                                                  deleteFileAndFolder(\r\n                                                    item.id,\r\n                                                    \"folder\"\r\n                                                  )\r\n                                                }\r\n                                              >\r\n                                                <FaTrashCan />\r\n                                              </button>\r\n                                              <button\r\n                                                className=\"view-btn doc-action-btn\"\r\n                                                onClick={() =>\r\n                                                  handleShowUploadFileModal(\r\n                                                    item.id,\r\n                                                    item?.s3_path\r\n                                                  )\r\n                                                }\r\n                                              >\r\n                                                <MdEdit />\r\n                                              </button>\r\n                                              <button\r\n                                                onClick={() =>\r\n                                                  handleShowShareFileModal(\r\n                                                    item?.id\r\n                                                  )\r\n                                                }\r\n                                                className=\"view-btn doc-action-btn\"\r\n                                              >\r\n                                                <IoIosShareAlt />\r\n                                              </button>\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n                                      </>\r\n                                    ) : (\r\n                                      <>\r\n                                        <div className=\"pdf-list\">\r\n                                          <div className=\"pdf-icon\">\r\n                                            {generateFileImage(item?.s3_path)}\r\n                                          </div>\r\n                                          <p>\r\n                                            <span className=\"file-icon\">\r\n                                              {generateFileImage(item?.s3_path)}\r\n                                            </span>\r\n                                            <span className=\"filename-single\">\r\n                                              {getFileName(item?.s3_path)}\r\n                                            </span>\r\n                                          </p>\r\n                                          <div className=\"doc-action\">\r\n                                            {/* <button className=\"view-btn doc-action-btn\"><MdEdit /></button> */}\r\n                                            <button\r\n                                              className=\"download-btn doc-action-btn\"\r\n                                              onClick={() =>\r\n                                                handleDownload(item?.s3_path)\r\n                                              }\r\n                                            >\r\n                                              <FaDownload />\r\n                                            </button>\r\n                                            <button\r\n                                              className=\"trash-btn doc-action-btn\"\r\n                                              onClick={() =>\r\n                                                deleteFileAndFolder(\r\n                                                  item.id,\r\n                                                  \"file\"\r\n                                                )\r\n                                              }\r\n                                            >\r\n                                              <FaTrashCan />\r\n                                            </button>\r\n                                            <button\r\n                                              onClick={() =>\r\n                                                handleShowShareFileModal(\r\n                                                  item?.id\r\n                                                )\r\n                                              }\r\n                                              className=\"view-btn doc-action-btn\"\r\n                                            >\r\n                                              <IoIosShareAlt />\r\n                                            </button>\r\n                                          </div>\r\n                                        </div>\r\n                                      </>\r\n                                    )}\r\n                                  </>\r\n                                );\r\n                              })\r\n                            ) : (\r\n                              <NoDataFound />\r\n                            )}\r\n                          </div>\r\n                        )}\r\n                      </Tab.Pane>\r\n                      <Tab.Pane eventKey=\"list-view\">\r\n                        <DocumentListView\r\n                          folderData={folderData}\r\n                          deleteFileAndFolder={deleteFileAndFolder}\r\n                          handleDownload={handleDownload}\r\n                          getFileName={getFileName}\r\n                          generateFileImage={generateFileImage}\r\n                          toggleFolderView={toggleFolderView}\r\n                          handleShowShareFileModal={handleShowShareFileModal}\r\n                        />\r\n                      </Tab.Pane>\r\n                    </Tab.Content>\r\n                  </Tab.Container>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </section>\r\n      <CreateFolder\r\n        show={showUploadFileModal}\r\n        handleClose={handleCloseUploadFileModal}\r\n        currentFolderDetails={currentFolderDetails}\r\n        data={editFolderName}\r\n        folderData={folderData}\r\n        currentRole={currentRole}\r\n        setOpen={setOpen}\r\n      />\r\n      <RexettUploadFile\r\n        show={show}\r\n        handleClose={handleCloseUploadFileModal}\r\n        currentFolderDetails={currentFolderDetails}\r\n        currentRole={currentRole}\r\n        setOpen={setOpen}\r\n      />\r\n      <ShareModal\r\n        show={sharefileModal}\r\n        handleClose={handleCloseShareFileModal}\r\n        fileId={fileId}\r\n      />\r\n      <ConfirmationModal\r\n        text={\r\n          isDelete?.name == \"folder\"\r\n            ? `Deleting this folder will also delete all the files and subfolders contained within it`\r\n            : `Are you sure to delete this ${isDelete?.name}?`\r\n        }\r\n        show={isDelete?.isDelete}\r\n        handleClose={handleCloseUploadFileModal}\r\n        onClick={handleDelete}\r\n        smallLoader={smallLoader}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RexettDocuments;\r\n"],"names":["_ref","_errors$s3_path","show","handleClose","currentFolderDetails","data","folderData","currentRole","setOpen","smallLoader","useSelector","state","clientData","dispatch","useDispatch","register","setValue","handleSubmit","formState","errors","isDirty","isValid","isSubmitting","useForm","useEffect","name","_jsxs","Modal","onHide","centered","className","animation","children","_jsx","Header","closeButton","Body","onSubmit","values","editName","s3_path","renameFolderAndFile","id","parent_id","filterData","getFolderData","contract_id","createNewFolderAndFile","noValidate","Row","Col","md","Form","Group","Control","type","placeholder","validate","folderName","some","existingFolder","isFolderAlreadyExists","message","RexettButton","text","variant","isLoading","selectedFile","setSelectedFile","useState","details","setDetails","console","log","async","_values$file_name$","formData","FormData","append","file_name","category","filePreassignedUrlGenerate","url","fileData","alert","Select","required","value","selected","disabled","onChange","e","target","files","Label","htmlFor","deleteFileAndFolder","handleDownload","getFileName","generateFileImage","toggleFolderView","handleShowShareFileModal","t","useTranslation","length","map","item","index","_item$user","_Fragment","file_type","onDoubleClick","FaFolder","HiMiniUser","user","onClick","FaDownload","FaTrashCan","IoIosShareAlt","NoDataFound","baseTagifySettings","blacklist","maxTags","dropdown","enabled","maxItems","_shareDocument$data","fileId","useRef","tagifySettings","setTagifySettings","tagifyProps","setTagifyProps","sharedTags","setSharedTags","setData","shareDocument","developerData","suggestedTags","label","getDocumentShare","options","_e$detail","detail","d","JSON","parse","_shareDocument$data2","preventDefault","user_id","payload","file_id","user_ids","shareBelongisFile","setFileID","bradCrump","setBradCrum","allFilterValue","setAllCurrentFilterValue","editFolderName","setEditFolderName","showFolderView","setShowFolderView","setCurrentFolderDetails","sharefileModal","setShareFileModal","setShow","isDelete","setDelete","timerValue","setTimerValue","search","setSearch","open","screenLoader","showUploadFileModal","setShowUploadFileModal","handleShowUploadFileModal","handleCloseUploadFileModal","newTab","window","focus","fileName","split","splitWithDot","concat","fileExtWithDot","src","handleFilterData","filter","showFilterMenu","setShowFilterMenu","doctooltip","Tooltip","Button","handleShowFilterMenu","FaFilter","Link","copyBrdCrmb","findIndex","newData","slice","bradCrumpHandle","clearTimeout","timer","setTimeout","file_extension","clearAllFilter","date","Tab","Container","defaultActiveKey","OverlayTrigger","placement","overlay","Collapse","in","Nav","Item","eventKey","IoGrid","FaListUl","Content","Pane","ScreenLoader","MdEdit","DocumentListView","CreateFolder","RexettUploadFile","ShareModal","handleCloseShareFileModal","ConfirmationModal","_deleteFileAndFolder"],"sourceRoot":""}
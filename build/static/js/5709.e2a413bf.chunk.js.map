{"version":3,"file":"static/js/5709.e2a413bf.chunk.js","mappings":"6TAyBA,MAgTA,EAhT2BA,IAAa,IAADC,EAAA,IAAX,KAACC,GAAKF,EAChC,MAAMG,EAASC,aAAaC,QAAQ,WAC7BC,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,OAC7C,EAAEC,IAAMC,EAAAA,EAAAA,OACR,SACJC,EAAQ,SACRC,EAAQ,QACRC,EAAO,aACPC,EACAC,WAAW,OAAEC,EAAM,QAAEC,EAAO,QAAEC,EAAO,aAAEC,KACrCC,EAAAA,EAAAA,IAAQ,CAAC,GACPC,GAAWC,EAAAA,EAAAA,OACVC,EAAWC,IAAgBhB,EAAAA,EAAAA,WAAS,IACpCiB,EAAQC,IAAalB,EAAAA,EAAAA,UAAS,aAC9BmB,EAAYC,IAAepB,EAAAA,EAAAA,UAAS,CACzCqB,WAAW,EACXC,YAAY,KAEPC,EAAMC,IAAWxB,EAAAA,EAAAA,UAAS,OAC3B,YAAEyB,EAAW,mBAAEC,EAAkB,aAAEC,IAAiBC,EAAAA,EAAAA,KACvDC,GAAUA,EAAMC,gBAEbC,EAAmBC,2CAmBzBC,EAAAA,EAAAA,YAAU,KACT,IAAIC,ECnEgCxC,KAC3B,CACRyC,UAAW,wBACXC,MAAO,gBACPC,OAAQ,sBAGC3C,ID4DM4C,CAAuB5C,GACvCmB,GAAS0B,EAAAA,EAAAA,IAAkBL,GAAa,GAEtC,CAACrB,IAEJ2B,QAAQC,IAAIf,EAAmB,uBAE/BO,EAAAA,EAAAA,YAAU,KACqB,IAADS,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAP,OAAlBvB,QAAkB,IAAlBA,GAAAA,EAAoBwB,OACrB9C,EAAS,OAA0B,OAAlBsB,QAAkB,IAAlBA,GAAwB,QAANgB,EAAlBhB,EAAoBwB,YAAI,IAAAR,OAAN,EAAlBA,EAA0BS,MAC3C/C,EAAS,QAA2B,OAAlBsB,QAAkB,IAAlBA,GAAwB,QAANiB,EAAlBjB,EAAoBwB,YAAI,IAAAP,OAAN,EAAlBA,EAA0BS,OAC5ChD,EAAS,eAAkC,OAAlBsB,QAAkB,IAAlBA,GAAwB,QAANkB,EAAlBlB,EAAoBwB,YAAI,IAAAN,OAAN,EAAlBA,EAA0BS,cACnDjD,EAAS,UAA6B,OAAlBsB,QAAkB,IAAlBA,GAAwB,QAANmB,EAAlBnB,EAAoBwB,YAAI,IAAAL,OAAN,EAAlBA,EAA0BS,SAC9ClD,EAAS,YAA+B,OAAlBsB,QAAkB,IAAlBA,GAAwB,QAANoB,EAAlBpB,EAAoBwB,YAAI,IAAAJ,OAAN,EAAlBA,EAA0BS,WAChDnD,EAAS,OAA0B,OAAlBsB,QAAkB,IAAlBA,GAAwB,QAANqB,EAAlBrB,EAAoBwB,YAAI,IAAAH,OAAN,EAAlBA,EAA0BS,MAC3CpD,EAAS,UAA6B,OAAlBsB,QAAkB,IAAlBA,GAAwB,QAANsB,EAAlBtB,EAAoBwB,YAAI,IAAAF,OAAN,EAAlBA,EAA0BS,SAC9CrD,EAAS,WAA8B,OAAlBsB,QAAkB,IAAlBA,GAAwB,QAANuB,EAAlBvB,EAAoBwB,YAAI,IAAAD,OAAN,EAAlBA,EAA0BS,UACjD,GAEC,CAAChC,IAEoBiC,EAAAA,EAAxB,MAgCMC,EAAoBC,IACxB,GAAc,KAAVA,EACF,OAAO,EAIP,IADgB,wDACHC,KAAKD,GAChB,MAAO,qFAGX,OAAO,CAAI,EAeb,OACEE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,OAAAD,SACGtC,GACCuC,EAAAA,EAAAA,KAACC,EAAAA,EAAY,KAEbJ,EAAAA,EAAAA,MAAA,QAAMK,SAAU9D,GA7DR+D,IAChB,IAAIC,EAAW,IAAIC,SACfC,EAAW,IAAID,SACnB,IAAK,MAAME,KAAOJ,EAChBC,EAASI,OAAOD,EAAKJ,EAAOI,IAI9B,GADAD,EAASE,OAAO,OAAQnD,GACZ,MAARA,EAAc,CAChB,IAAI2B,EAAO,IACNmB,EACHM,QAAShF,GAEXkB,GAAS+D,EAAAA,EAAAA,IAAuB1B,GAClC,MACErC,GACEgE,EAAAA,EAAAA,IAA2BL,GAAWM,IACpC,IAAI5B,EAAO,IACNmB,EACHU,gBAAiBD,EACjBH,QAAShF,GAEXkB,GAAS+D,EAAAA,EAAAA,IAAuB1B,GAAM,IAM5C,IAiCgD8B,YAAU,EAAAf,SAAA,EAClDF,EAAAA,EAAAA,MAACkB,EAAAA,EAAG,CAACC,UAAU,OAAMjB,SAAA,EACnBC,EAAAA,EAAAA,KAACiB,EAAAA,EAAG,CAACC,GAAG,IAAGnB,UACTF,EAAAA,EAAAA,MAAA,OAAKmB,UAAU,aAAYjB,SAAA,EACzBC,EAAAA,EAAAA,KAACmB,EAAAA,EAAW,CACVC,MAAOrF,EAAE,cAAgB,KACzBkD,KAAK,OACL9C,QAASA,EACTkF,MAAO,CAAEC,SAAU,oBACnBC,MAAOjF,EAAO2C,QAEhBe,EAAAA,EAAAA,KAACmB,EAAAA,EAAW,CACVC,MAAOrF,EAAE,SAAW,KACpBkD,KAAK,QACL9C,QAASA,EACTkF,MAAO,CACLC,SAAU,oBACVE,QAAS,CACP7B,MAAO,6BACP8B,QAAS,yBAGbF,MAAOjF,EAAO4C,MACdwC,UAAQ,KAEV1B,EAAAA,EAAAA,KAACmB,EAAAA,EAAW,CACVC,MAAOrF,EAAE,oBACTkD,KAAK,oBACL9C,QAASA,EACTwF,KAAM1E,EAAWE,UAAY,OAAS,WACtCkE,MAAO,CAAEO,SAAUlC,GACnB6B,MAAOjF,EAAOuF,kBACd5E,YAAU,EACV6E,iBAAkBA,IAAM5E,EAAY,IAAKD,EAAYE,WAAYF,EAAWE,YAC5E4E,MAAM/B,EAAAA,EAAAA,KAACgC,EAAAA,IAAK,OAEdhC,EAAAA,EAAAA,KAACmB,EAAAA,EAAW,CACVC,MAAOrF,EAAE,eACTkD,KAAK,WACL9C,QAASA,EACTwF,KAAM1E,EAAWG,WAAa,OAAS,WACvCiE,MAAO,CAAEO,SAAUlC,GACnB6B,MAAOjF,EAAO2F,SACdhF,YAAU,EACV6E,iBAAkBA,IAAM5E,EAAY,IAAKD,EAAYG,YAAaH,EAAWG,aAC7E2E,MAAM/B,EAAAA,EAAAA,KAACgC,EAAAA,IAAK,OAEdhC,EAAAA,EAAAA,KAACkC,EAAAA,EAAkB,CACjBd,MAAOrF,EAAE,WAAa,KACtBkD,KAAK,UACL9C,QAASA,EACTkF,MAAO,CAAEC,SAAU,uBACnBC,MAAOjF,EAAO8C,QACd+C,OAAQtE,EACRuE,gBAAkBC,IAChBnG,EAAS,UAAUmG,EAAMC,kBAAkB,EAE7CC,SAAWC,IAAKtG,EAAS,UAAUsG,EAAEC,OAAO9C,MAAM,EAClD+C,QAAS,CAAEC,MAAO,CAAC,gBAAiB,eAEtC3C,EAAAA,EAAAA,KAACkC,EAAAA,EAAkB,CACjBd,MAAOrF,EAAE,WAAa,KACtBkD,KAAK,YACL9C,QAASA,EACTkF,MAAO,CAAEC,UAAU,GACnBC,MAAOjF,EAAO+C,UACd8C,OAAQtE,EACRuE,gBAAkBC,IAChB/D,QAAQC,IAAI8D,GACZnG,EAAS,YAAYmG,EAAMC,kBAAkB,EAE/CC,SAAWC,IAAKtG,EAAS,YAAYsG,EAAEC,OAAO9C,MAAM,EAEpD+C,QAAS,CAAEC,MAAO,CAAC,gBAAiB,oBAI1C3C,EAAAA,EAAAA,KAACiB,EAAAA,EAAG,CAACC,GAAG,IAAGnB,UACTF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAACmB,EAAAA,EAAW,CACVC,MAAOrF,EAAE,SAAW,IACpBkD,KAAK,eACL9C,QAASA,EACTwF,KAAK,OACLN,MAAO,CACLC,SAAU,2BACVE,QAAS,CACP7B,MAAO,cACP8B,QAAS,sCAGbF,MAAOjF,EAAO6C,gBAEhBa,EAAAA,EAAAA,KAACmB,EAAAA,EAAW,CACVC,MAAOrF,EAAE,QAAU,IACnBkD,KAAK,OACL9C,QAASA,EACTkF,MAAO,CACLC,SAAU,mBACVE,QAAS,CACP7B,MAAO,gBACP8B,QAAS,0DAGbF,MAAOjF,EAAOgD,QAEhBU,EAAAA,EAAAA,KAACmB,EAAAA,EAAW,CACVC,MAAOrF,EAAE,YAAc,IACvBkD,KAAK,WACL9C,QAASA,EACTkF,MAAO,CACLC,SAAU,uBACVE,QAAS,CACP7B,MAAO,WACP8B,QAAS,yCAGbF,MAAOjF,EAAOkD,YAEhBQ,EAAAA,EAAAA,KAACmB,EAAAA,EAAW,CACVC,MAAOrF,EAAE,WAAa,IACtBkD,KAAK,UACL9C,QAASA,EACTkF,MAAO,CACLC,SAAU,sBACVE,QAAS,CACP7B,MAAO,gBACP8B,QAAS,6DAGbF,MAAOjF,EAAOiD,WAEhBS,EAAAA,EAAAA,KAACmB,EAAAA,EAAW,CACVC,MAAOrF,EAAE,SAAW,IACpBkD,KAAK,kBACL0C,KAAK,OACLxF,QAASA,EACTkF,MAAO,CAAEC,UAAU,GACnBiB,SAAWC,GA5JHI,KACxB,MAAMvF,EAAOuF,EAAMH,OAAOI,MAAM,GAEhC,GADAvF,EAAQD,GACJA,EAAM,CACR,MAAMyF,EAAS,IAAIC,WACnBD,EAAOE,UAAY,KACjBnH,EAAiBiH,EAAOG,OAAO,EAEjCH,EAAOI,cAAc7F,EACvB,GAmJiC8F,CAAiBX,GAClCY,OAAO,aAETvD,EAAAA,EAAAA,MAACwD,EAAAA,EAAKC,MAAK,CAACC,QAAQ,kBAAkBvC,UAAU,6BAA4BjB,SAAA,EAC1EC,EAAAA,EAAAA,KAACwD,EAAAA,IAAQ,IACRzH,EAAE,mBAELiE,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,OACEyD,IAAK7H,IAAkD,OAAlB4B,QAAkB,IAAlBA,GAAwB,QAANjC,EAAlBiC,EAAoBwB,YAAI,IAAAzD,OAAN,EAAlBA,EAA0BsF,iBAC/D6C,IAAI,WACJ1C,UAAU,8BAMpBhB,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,cAAajB,UAC1BC,EAAAA,EAAAA,KAAC2D,EAAAA,EAAY,CACXhC,KAAK,SACLiC,KAAM7H,EAAE,iBACRiF,UAAU,gBACV6C,QAAQ,cACRC,SAAUvG,EACVwG,UAAWxG,YAMrByC,EAAAA,EAAAA,KAACgE,EAAAA,EAAiB,CAChBC,KAAMpH,EACNqH,YAhRuBC,KAC3BnH,GAAWD,GACXD,GAAa,EAAM,EA+QfsH,QAzQeC,KACnB,IAAIrF,EAAO,CACTyB,SAAUhF,EACVsB,OAAQA,GAEVJ,GAAS2H,EAAAA,EAAAA,IAAwBtF,GAAM,EAqQnCzB,YAAaA,EACbqG,KAAM,qDAEP,C,sEEnUP,MAyBA,EAzBuBtI,IAAiB,IAAhB,SAACyE,GAASzE,EAChC,MAAM,EAAES,IAAMC,EAAAA,EAAAA,MACd,OACE6D,EAAAA,EAAAA,MAAA,WAASmB,UAAU,WAAUjB,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,+DAA8DjB,UAC3EC,EAAAA,EAAAA,KAAA,MAAIgB,UAAU,iCAAgCjB,SAC3ChE,EAAE,yBAcNgE,IACS,C,qPCRd,MAoQA,EApQuBwE,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAC3B,MAAMnJ,EAASC,aAAaC,QAAQ,WAC7BkJ,EAAMC,IAAWhJ,EAAAA,EAAAA,UAAS,OAC3B,SACJG,EAAQ,QACRE,EAAO,SACPD,EAAQ,MACR6I,EAAK,QACLC,EAAO,aACP5I,EAEAC,WAAW,OAAEC,EAAM,QAAEC,EAAO,QAAEC,EAAO,aAAEC,KACrCC,EAAAA,EAAAA,IAAQ,CAAC,GAIPC,GAAWC,EAAAA,EAAAA,OACX,EAAEb,IAAMC,EAAAA,EAAAA,OAER,YAAEuB,EAAW,qBAAE0H,EAAoB,aAAExH,EAAY,eAAEyH,IACvDxH,EAAAA,EAAAA,KAAaC,GAAUA,EAAMwH,cAE/BpH,EAAAA,EAAAA,YAAU,KACRpB,GAASyI,EAAAA,EAAAA,MAAmB,GAC3B,CAACzI,KAEJoB,EAAAA,EAAAA,YAAU,KAAO,IAADsH,EAAAC,EAAAC,EAAAC,EAAAC,EAKgCC,GAJ9CxJ,EAAS,kBAAuC,OAApB+I,QAAoB,IAApBA,GAA0B,QAANI,EAApBJ,EAAsBjG,YAAI,IAAAqG,OAAN,EAApBA,EAA4BM,iBACxDzJ,EAAS,eAAoC,OAApB+I,QAAoB,IAApBA,GAA0B,QAANK,EAApBL,EAAsBjG,YAAI,IAAAsG,OAAN,EAApBA,EAA4BM,cACrD1J,EAAS,iBAAsC,OAApB+I,QAAoB,IAApBA,GAA0B,QAANM,EAApBN,EAAsBjG,YAAI,IAAAuG,OAAN,EAApBA,EAA4BM,gBACvD3J,EAAS,eAAoC,OAApB+I,QAAoB,IAApBA,GAA0B,QAANO,EAApBP,EAAsBjG,YAAI,IAAAwG,OAAN,EAApBA,EAA4BM,cAC7B,OAApBb,QAAoB,IAApBA,GAA0B,QAANQ,EAApBR,EAAsBjG,YAAI,IAAAyG,GAA1BA,EAA4BM,eAC9BjB,EAA4B,OAApBG,QAAoB,IAApBA,GAA0B,QAANS,EAApBT,EAAsBjG,YAAI,IAAA0G,OAAN,EAApBA,EAA4BK,aACtC,GACC,CAACd,IAyFJ,OACEjF,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,QAAME,SAAU9D,GA1DF+D,IAChB7B,QAAQC,IAAI4B,EAAQ,wBACpB,MAAM8E,EAAuBF,IACvBiB,EAAU,IACX7F,EAEH8B,SAAUgD,EAAqBhD,SAC3BgD,EAAqBhD,SACrB,KACJJ,kBAAmBoD,EAAqBpD,kBACpCoD,EAAqBpD,kBACrB,KACJoE,YAAa,WAEf,QAAkCC,KAAxB,OAAN/F,QAAM,IAANA,OAAM,EAANA,EAAQ4F,aAAa9G,MAAoB,CAC3C,IAAIqB,EAAW,IAAID,SACnBC,EAASE,OAAO,OAAc,OAANL,QAAM,IAANA,OAAM,EAANA,EAAQ4F,cAChCpJ,GACEgE,EAAAA,EAAAA,IAA2BL,GAAWM,IACpC,IAAI5B,EAAO,IACNgH,EACHD,aAAcnF,EACdH,QAAShF,GAEXkB,GAASwJ,EAAAA,EAAAA,IAAoBnH,GAAM,IAGzC,KAAO,CACL,IAAIA,EAAO,IACNgH,EACHD,aAAclB,EACdpE,QAAShF,GAEXkB,GAASwJ,EAAAA,EAAAA,IAAoBnH,GAC/B,KAwB0C8B,YAAU,EAAAf,UAChDF,EAAAA,EAAAA,MAACkB,EAAAA,EAAG,CAAAhB,SAAA,EACFC,EAAAA,EAAAA,KAACiB,EAAAA,EAAG,CAACC,GAAI,GAAGnB,UACVF,EAAAA,EAAAA,MAACwD,EAAAA,EAAK+C,MAAK,CAACpF,UAAU,OAAMjB,SAAA,EAC1BC,EAAAA,EAAAA,KAACqD,EAAAA,EAAKC,MAAK,CAACtC,UAAU,eAAcjB,SAAC,kBACrCC,EAAAA,EAAAA,KAACqD,EAAAA,EAAKgD,QAAO,IACPpK,EAAS,eAAgB,CAC3BsG,SAAWC,GA7BAA,KAAO,IAAD8D,EAAAC,EAC/B,MAAMlJ,EAAQ,OAADmF,QAAC,IAADA,GAAS,QAAR8D,EAAD9D,EAAGC,cAAM,IAAA6D,GAAO,QAAPC,EAATD,EAAWzD,aAAK,IAAA0D,OAAf,EAADA,EAAmB,GAEhC,GAAIlJ,EACF,GAFmB,CAAC,aAAc,YAAa,YAAa,aAE3CmJ,SAASnJ,EAAKsE,MAAO,CACpC,MAAM8E,EAAUC,IAAIC,gBAAgBtJ,GACpCnB,EAAS,eAAgBmB,GACzByH,EAAQ2B,EACV,MAME3B,EAAQ,MACR5I,EAAS,eAAgB,KAE7B,EAY+B0K,CAAkBpE,KAErCb,KAAK,OACLkF,GAAG,oBACHC,YAAY,eACZ9F,UAAU,yBAEZnB,EAAAA,EAAAA,MAAA,OAAKmB,UAAU,aAAYjB,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAKyD,IAAKoB,GAAckC,EAAarD,IAAI,kBACzC1D,EAAAA,EAAAA,KAACqD,EAAAA,EAAKC,MAAK,CACTC,QAAQ,oBACRvC,UAAU,kBAAiBjB,UAE3BC,EAAAA,EAAAA,KAACgH,EAAAA,IAAW,UAGT,OAAN1K,QAAM,IAANA,OAAM,EAANA,EAAQyJ,gBACP/F,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,gBAAejB,SAAqB,QAArByE,EAAElI,EAAOyJ,oBAAY,IAAAvB,OAAA,EAAnBA,EAAqB/C,gBAIzDzB,EAAAA,EAAAA,KAACiB,EAAAA,EAAG,CAACC,GAAI,EAAEnB,UACTF,EAAAA,EAAAA,MAACwD,EAAAA,EAAK+C,MAAK,CAACpF,UAAU,OAAMjB,SAAA,EAC1BC,EAAAA,EAAAA,KAACqD,EAAAA,EAAKC,MAAK,CAACtC,UAAU,eAAcjB,SAAC,mBACrCC,EAAAA,EAAAA,KAACqD,EAAAA,EAAKgD,QAAO,IACPpK,EAAS,eAAgB,CAC3BqF,SAAU,6BAEZK,KAAK,OACLmF,YAAY,eACZ9F,UAAU,kBAEL,OAAN1E,QAAM,IAANA,OAAM,EAANA,EAAQsJ,gBACP5F,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,gBAAejB,SAAqB,QAArB0E,EAAEnI,EAAOsJ,oBAAY,IAAAnB,OAAA,EAAnBA,EAAqBhD,gBAIzDzB,EAAAA,EAAAA,KAACiB,EAAAA,EAAG,CAACC,GAAI,EAAEnB,UACTF,EAAAA,EAAAA,MAACwD,EAAAA,EAAK+C,MAAK,CAACpF,UAAU,OAAMjB,SAAA,EAC1BC,EAAAA,EAAAA,KAACqD,EAAAA,EAAKC,MAAK,CAACtC,UAAU,eAAcjB,SAAC,sBACrCF,EAAAA,EAAAA,MAACwD,EAAAA,EAAK4D,OAAM,IACNhL,EAAS,eAAgB,CAC3BqF,SAAU,6BAEZN,UAAU,eAAcjB,SAAA,EAExBC,EAAAA,EAAAA,KAAA,UAAQ8D,UAAQ,EAACoD,UAAQ,EAACvH,MAAM,GAAEI,SAAC,gCAGnCC,EAAAA,EAAAA,KAAA,UAAQL,MAAM,mBAAkBI,SAAC,sBACjCC,EAAAA,EAAAA,KAAA,UAAQL,MAAM,cAAaI,SAAC,iBAC5BC,EAAAA,EAAAA,KAAA,UAAQL,MAAM,iCAAgCI,SAAC,oCAG/CC,EAAAA,EAAAA,KAAA,UAAQL,MAAM,cAAaI,SAAC,iBAC5BC,EAAAA,EAAAA,KAAA,UAAQL,MAAM,yBAAwBI,SAAC,4BAGvCC,EAAAA,EAAAA,KAAA,UAAQL,MAAM,cAAaI,SAAC,iBAC5BC,EAAAA,EAAAA,KAAA,UAAQL,MAAM,YAAWI,SAAC,eAC1BC,EAAAA,EAAAA,KAAA,UAAQL,MAAM,gBAAeI,SAAC,sBAEzB,OAANzD,QAAM,IAANA,OAAM,EAANA,EAAQwJ,gBACP9F,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,gBAAejB,SAAqB,QAArB2E,EAAEpI,EAAOwJ,oBAAY,IAAApB,OAAA,EAAnBA,EAAqBjD,gBAIzDzB,EAAAA,EAAAA,KAACiB,EAAAA,EAAG,CAACC,GAAI,EAAEnB,UACTF,EAAAA,EAAAA,MAACwD,EAAAA,EAAK+C,MAAK,CAACpF,UAAU,OAAMjB,SAAA,EAC1BC,EAAAA,EAAAA,KAACkC,EAAAA,EAAkB,CACjBd,MAAOrF,EAAE,mBAAqB,KAC9BkD,KAAK,UACL9C,QAASA,EACTkF,MAAO,CAAEC,SAAU,+BACnBC,MAAOjF,EAAOqJ,gBACdxD,OAjMarE,0CAkMbsE,gBAAkBC,IAChBnG,EAAS,kBAAmBmG,EAAMC,kBAAkB,EAEtDC,SAAWC,IACTtG,EAAS,kBAAmBsG,EAAEC,OAAO9C,MAAM,EAE7C+C,QAAS,CAAEC,MAAO,CAAC,gBAAiB,eAE/B,OAANrG,QAAM,IAANA,OAAM,EAANA,EAAQqJ,mBACP3F,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,gBAAejB,SACH,QADG4E,EACzBrI,EAAOqJ,uBAAe,IAAAhB,OAAA,EAAtBA,EAAwBlD,gBAKjCzB,EAAAA,EAAAA,KAACiB,EAAAA,EAAG,CAACC,GAAI,EAAEnB,UACTF,EAAAA,EAAAA,MAACwD,EAAAA,EAAK+C,MAAK,CAACpF,UAAU,OAAMjB,SAAA,EAC1BC,EAAAA,EAAAA,KAACqD,EAAAA,EAAKC,MAAK,CAACtC,UAAU,eAAcjB,SAAC,aACrCC,EAAAA,EAAAA,KAACqD,EAAAA,EAAKgD,QAAO,IACPpK,EAAS,iBAAkB,CAC7BqF,SAAU,+BAEZrC,KAAK,iBACL0C,KAAK,OACLmF,YAAY,SACZ9F,UAAU,kBAEL,OAAN1E,QAAM,IAANA,OAAM,EAANA,EAAQuJ,kBACP7F,EAAAA,EAAAA,KAAA,KAAGgB,UAAU,gBAAejB,SACJ,QADI6E,EACzBtI,EAAOuJ,sBAAc,IAAAjB,OAAA,EAArBA,EAAuBnD,gBAKhCzB,EAAAA,EAAAA,KAACiB,EAAAA,EAAG,CAACC,GAAI,GAAGnB,UACVC,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,cAAajB,UAC1BC,EAAAA,EAAAA,KAAC2D,EAAAA,EAAY,CACXhC,KAAK,SACLiC,KAAM7H,EAAE,iBACRiF,UAAU,qBACV6C,QAAQ,cACRC,SAAUvG,EACVwG,UAAWxG,cAMjB,EC5NV,EA7CoB4J,KAClB,MAAM,EAAEpL,IAAMC,EAAAA,EAAAA,MACd,OACEgE,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,KAACoH,EAAAA,EAAc,CAAArH,UACbC,EAAAA,EAAAA,KAAA,WAASgB,UAAU,WAAUjB,UAC3BF,EAAAA,EAAAA,MAACwH,EAAAA,EAAIC,UAAS,CACZT,GAAG,oBACHU,iBAAiB,mBAAkBxH,SAAA,EAEnCF,EAAAA,EAAAA,MAAC2H,EAAAA,EAAG,CAAC3D,QAAQ,QAAQ7C,UAAU,yBAAwBjB,SAAA,EACrDC,EAAAA,EAAAA,KAACwH,EAAAA,EAAIC,KAAI,CAACzG,UAAU,mBAAkBjB,UACpCC,EAAAA,EAAAA,KAACwH,EAAAA,EAAIE,KAAI,CACP1G,UAAU,mBACV2G,SAAS,mBAAkB5H,SAC5B,wBAIHC,EAAAA,EAAAA,KAACwH,EAAAA,EAAIC,KAAI,CAACzG,UAAU,mBAAkBjB,UACpCC,EAAAA,EAAAA,KAACwH,EAAAA,EAAIE,KAAI,CACP1G,UAAU,mBACV2G,SAAS,kBAAiB5H,SAC3B,0BAKLF,EAAAA,EAAAA,MAACwH,EAAAA,EAAIO,QAAO,CAAA7H,SAAA,EACVC,EAAAA,EAAAA,KAACqH,EAAAA,EAAIQ,KAAI,CAACF,SAAS,mBAAkB5H,UACrCC,EAAAA,EAAAA,KAAC8H,EAAAA,EAAkB,CAACtM,KAAK,cAGzBwE,EAAAA,EAAAA,KAACqH,EAAAA,EAAIQ,KAAI,CAACF,SAAS,kBAAiB5H,UACpCC,EAAAA,EAAAA,KAACuE,EAAc,CAAC/I,KAAK,wBAO5B,C,gHC3CP,MAoCA,EApC0BF,IAAyF,IAAxF,KAAEsI,EAAI,KAACK,EAAI,YAAEC,EAAW,QAACE,EAAO,aAAEC,EAAY,YAAC9G,EAAW,KAACoE,EAAI,UAACoG,EAAS,QAACC,GAAQ1M,EAOzG,OACIuE,EAAAA,EAAAA,MAACoI,EAAAA,EAAK,CAAChE,KAAMA,EAAMiE,OAAS1F,GAAI0B,EAAY1B,GAAI2F,UAAQ,EAACC,WAAS,EAACpH,UAAU,eAAcjB,SAAA,EACvFC,EAAAA,EAAAA,KAACiI,EAAAA,EAAMI,OAAM,CAACC,aAAW,EAACtH,UAAU,mBAIpChB,EAAAA,EAAAA,KAACiI,EAAAA,EAAMM,KAAI,CAAAxI,UACPF,EAAAA,EAAAA,MAACwD,EAAAA,EAAI,CAAAtD,SAAA,EACDC,EAAAA,EAAAA,KAACqD,EAAAA,EAAK+C,MAAK,CAACpF,UAAU,OAAMjB,UACxBC,EAAAA,EAAAA,KAACqD,EAAAA,EAAKC,MAAK,CAACtC,UAAU,sBAAqBjB,SAAE6D,OAEjD/D,EAAAA,EAAAA,MAAA,OAAKmB,UAAU,cAAajB,SAAA,EACxBC,EAAAA,EAAAA,KAAC2D,EAAAA,EAAY,CACThC,KAAK,SACLiC,KAAK,MACLQ,QAASzC,EArBda,IAIf4B,EAAQ5B,EAHC,CACLzF,OAAQ4E,GAEG,EAiBmC0C,EAE9BrD,UAAU,yCACV6C,QAAQ,cACRC,SAAUvG,EACVwG,UAAWxG,KAEfyC,EAAAA,EAAAA,KAACwI,EAAAA,EAAM,CAAC3E,QAAQ,cAAcO,QAASF,EAAalD,UAAU,mFAAkFjB,SAAE,iBAI1J,C","sources":["components/common/EditProfile/AllRoleEditProfile.jsx","components/common/EditProfile/helper.js","components/common/EditProfile/ProfileWrapper.jsx","components/common/EditProfile/CompanyProfile.jsx","pages/views/EditProfile.jsx","pages/views/Modals/ConfirmationModal.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n} from \"react-bootstrap\";\r\nimport { FaEye } from \"react-icons/fa\";\r\nimport { HiUpload } from \"react-icons/hi\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { filePreassignedUrlGenerate, getEnableDisableAccount } from \"../../../redux/slices/clientDataSlice\";\r\nimport {getProfileDetails, updateDeveloperProfile } from \"../../../redux/slices/developerDataSlice\";\r\nimport ScreenLoader from \"../../atomic/ScreenLoader\";\r\nimport RexettButton from \"../../atomic/RexettButton\";\r\nimport ConfirmationModal from \"../../../pages/views/Modals/ConfirmationModal\";\r\nimport CommonInput from \"../../atomic/CommonInput\";\r\nimport CommonAutocomplete from \"../../atomic/CommonAutoComplete\";\r\nimport { getCurrentRoleEndPoint } from \"./helper\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n\r\n\r\nconst AllRoleEditProfile = ({role}) => {\r\n  const userId = localStorage.getItem(\"userId\");\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const { t } = useTranslation();\r\n  const {\r\n    register,\r\n    setValue,\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors, isDirty, isValid, isSubmitting },\r\n  } = useForm({});\r\n  const dispatch = useDispatch();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [status, setStatus] = useState(\"inactive\");\r\n  const [isPassword, setPassword] = useState({\r\n    firstPass: false,\r\n    secondPass: false,\r\n  });\r\n  const [file, setFile] = useState(null);\r\n  const { smallLoader, userProfileDetails, screenLoader } = useSelector(\r\n    (state) => state.developerData\r\n  );\r\n  const GOOGLE_MAP_API_KEY=process.env.REACT_APP_GOOGLE_MAP_API\r\n\r\n  const handleJobStatusModal = () => {\r\n    setStatus(!status);\r\n    setShowModal(false);\r\n  };\r\n  const handleToggle = () => {\r\n    setStatus(\"active\");\r\n    setShowModal(true);\r\n  };\r\n  const handleAction = () => {\r\n    let data = {\r\n      user_id: +userId,\r\n      status: status,\r\n    };\r\n    dispatch(getEnableDisableAccount(data));\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n   let subEndPoint=getCurrentRoleEndPoint(role)\r\n   dispatch(getProfileDetails(subEndPoint))\r\n    \r\n  }, [dispatch]);\r\n\r\n  console.log(userProfileDetails,\"userProfileDetails\")\r\n\r\n  useEffect(() => {\r\n    if(userProfileDetails?.data){\r\n      setValue(\"name\", userProfileDetails?.data?.name);\r\n      setValue(\"email\", userProfileDetails?.data?.email);\r\n      setValue(\"phone_number\", userProfileDetails?.data?.phone_number);\r\n      setValue(\"address\", userProfileDetails?.data?.address);\r\n      setValue(\"address_2\", userProfileDetails?.data?.address_2);\r\n      setValue(\"city\", userProfileDetails?.data?.city);\r\n      setValue(\"country\", userProfileDetails?.data?.country);\r\n      setValue(\"passcode\", userProfileDetails?.data?.passcode);\r\n    }\r\n \r\n  }, [userProfileDetails]);\r\n  \r\n  const disableProfile = <Tooltip id=\"tooltip\">Disable your Account</Tooltip>;\r\n\r\n  const onSubmit = (values) => {\r\n    let formData = new FormData();\r\n    let fileData = new FormData();\r\n    for (const key in values) {\r\n      formData.append(key, values[key]);\r\n    }\r\n\r\n    fileData.append(\"file\", file);\r\n    if (file == null) {\r\n      let data = {\r\n        ...values,\r\n        user_id: userId,\r\n      };\r\n      dispatch(updateDeveloperProfile(data));\r\n    } else {\r\n      dispatch(\r\n        filePreassignedUrlGenerate(fileData, (url) => {\r\n          let data = {\r\n            ...values,\r\n            profile_picture: url,\r\n            user_id: userId,\r\n          };\r\n          dispatch(updateDeveloperProfile(data));\r\n    // dispatch(updateAdminProfile(formData))\r\n    // dispatch(updateClientProfile(data));\r\n\r\n        })\r\n      );\r\n    }\r\n  };\r\n  const validatePassword = (value) => {\r\n    if (value === \"\") {\r\n      return true; // Password is not required, so return true if empty\r\n    } else {\r\n      // Check if password matches the pattern\r\n      const pattern = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\r\n      if (!pattern.test(value)) {\r\n        return \"Password must contain at least a symbol, upper and lower case letters and a number\";\r\n      }\r\n    }\r\n    return true; // Password meets the criteria\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setFile(file);\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setSelectedImage(reader.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n        <div>\r\n          {screenLoader ? (\r\n            <ScreenLoader />\r\n          ) : (\r\n            <form onSubmit={handleSubmit(onSubmit)} noValidate>\r\n            <Row className=\"mb-4\">\r\n              <Col md=\"6\">\r\n                <div className=\"inner-form\">\r\n                  <CommonInput\r\n                    label={t(\"clientName\") + \" *\"}\r\n                    name=\"name\"\r\n                    control={control}\r\n                    rules={{ required: \"Name is required\" }}\r\n                    error={errors.name}\r\n                  />\r\n                  <CommonInput\r\n                    label={t(\"email\") + \" *\"}\r\n                    name=\"email\"\r\n                    control={control}\r\n                    rules={{\r\n                      required: \"Email is required\",\r\n                      pattern: {\r\n                        value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\r\n                        message: \"Invalid email format\",\r\n                      },\r\n                    }}\r\n                    error={errors.email}\r\n                    readOnly\r\n                  />\r\n                  <CommonInput\r\n                    label={t(\"previousPassword\")}\r\n                    name=\"previous_password\"\r\n                    control={control}\r\n                    type={isPassword.firstPass ? \"text\" : \"password\"}\r\n                    rules={{ validate: validatePassword }}\r\n                    error={errors.previous_password}\r\n                    isPassword\r\n                    onTogglePassword={() => setPassword({ ...isPassword, firstPass: !isPassword.firstPass })}\r\n                    icon={<FaEye />}\r\n                  />\r\n                  <CommonInput\r\n                    label={t(\"newPassword\")}\r\n                    name=\"password\"\r\n                    control={control}\r\n                    type={isPassword.secondPass ? \"text\" : \"password\"}\r\n                    rules={{ validate: validatePassword }}\r\n                    error={errors.password}\r\n                    isPassword\r\n                    onTogglePassword={() => setPassword({ ...isPassword, secondPass: !isPassword.secondPass })}\r\n                    icon={<FaEye />}\r\n                  />\r\n                  <CommonAutocomplete\r\n                    label={t(\"address\") + \" *\"}\r\n                    name=\"address\"\r\n                    control={control}\r\n                    rules={{ required: \"Address is required\" }}\r\n                    error={errors.address}\r\n                    apiKey={GOOGLE_MAP_API_KEY}\r\n                    onPlaceSelected={(place) => {\r\n                      setValue(\"address\",place.formatted_address)\r\n                    }}\r\n                    onChange={(e)=>{setValue(\"address\",e.target.value)}}\r\n                    options={{ types: [\"establishment\", \"geocode\"] }}\r\n                  />\r\n                  <CommonAutocomplete\r\n                    label={t(\"address\") + \" 2\"}\r\n                    name=\"address_2\"\r\n                    control={control}\r\n                    rules={{ required: false }}\r\n                    error={errors.address_2}\r\n                    apiKey={GOOGLE_MAP_API_KEY}\r\n                    onPlaceSelected={(place) => {\r\n                      console.log(place);\r\n                      setValue(\"address_2\",place.formatted_address)\r\n                    }}\r\n                    onChange={(e)=>{setValue(\"address_2\",e.target.value)}}\r\n                    // value={watchCompanyDetails(\"company_address\")}\r\n                    options={{ types: [\"establishment\", \"geocode\"] }}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col md=\"6\">\r\n                <div>\r\n                  <CommonInput\r\n                    label={t(\"phone\") + \"*\"}\r\n                    name=\"phone_number\"\r\n                    control={control}\r\n                    type=\"text\"\r\n                    rules={{\r\n                      required: \"Phone Number is required\",\r\n                      pattern: {\r\n                        value: /^[0-9]{10}$/,\r\n                        message: \"Please enter a valid phone number\",\r\n                      },\r\n                    }}\r\n                    error={errors.phone_number}\r\n                  />\r\n                  <CommonInput\r\n                    label={t(\"city\") + \"*\"}\r\n                    name=\"city\"\r\n                    control={control}\r\n                    rules={{\r\n                      required: \"City is required\",\r\n                      pattern: {\r\n                        value: /^[A-Za-z\\s]+$/,\r\n                        message: \"City should not contain numbers or special characters\",\r\n                      },\r\n                    }}\r\n                    error={errors.city}\r\n                  />\r\n                  <CommonInput\r\n                    label={t(\"postCode\") + \"*\"}\r\n                    name=\"passcode\"\r\n                    control={control}\r\n                    rules={{\r\n                      required: \"Postcode is required\",\r\n                      pattern: {\r\n                        value: /^[0-9]+$/,\r\n                        message: \"Postcode should only contain numbers\",\r\n                      },\r\n                    }}\r\n                    error={errors.passcode}\r\n                  />\r\n                  <CommonInput\r\n                    label={t(\"country\") + \"*\"}\r\n                    name=\"country\"\r\n                    control={control}\r\n                    rules={{\r\n                      required: \"Country is required\",\r\n                      pattern: {\r\n                        value: /^[A-Za-z\\s]+$/,\r\n                        message: \"Country should not contain numbers or special characters\",\r\n                      },\r\n                    }}\r\n                    error={errors.country}\r\n                  />\r\n                  <CommonInput\r\n                    label={t(\"image\") + \"*\"}\r\n                    name=\"profile_picture\"\r\n                    type=\"file\"\r\n                    control={control}\r\n                    rules={{ required: false }}\r\n                    onChange={(e) => handleFileChange(e)}\r\n                    accept=\"image/*\"\r\n                  />\r\n                  <Form.Label htmlFor=\"developer-image\" className=\"upload-image-label d-block\">\r\n                    <HiUpload />\r\n                    {t(\"uploadImage\")}\r\n                  </Form.Label>\r\n                  <div>\r\n                    <img\r\n                      src={selectedImage ? selectedImage : userProfileDetails?.data?.profile_picture}\r\n                      alt=\"Selected\"\r\n                      className=\"uploaded-image\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <div className=\"text-center\">\r\n              <RexettButton\r\n                type=\"submit\"\r\n                text={t(\"updateProfile\")}\r\n                className=\"main-btn px-5\"\r\n                variant=\"transparent\"\r\n                disabled={smallLoader}\r\n                isLoading={smallLoader}\r\n              />\r\n            </div>\r\n          </form>\r\n          )}\r\n        </div>\r\n      <ConfirmationModal\r\n        show={showModal}\r\n        handleClose={handleJobStatusModal}\r\n        onClick={handleAction}\r\n        smallLoader={smallLoader}\r\n        text={\"Are you sure, you want to disable your account\"}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default AllRoleEditProfile;\r\n\r\n\r\n\r\n","export const getCurrentRoleEndPoint = (role) => {\r\n  let obj = {\r\n    developer: \"developer/get-profile\",\r\n    admin: \"admin/profile\",\r\n    client: \"client/get-profile\",\r\n  };\r\n\r\n  return obj[role];\r\n};\r\n","import React from 'react'\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst ProfileWrapper = ({children}) => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <section className=\"card-box\">\r\n    <div className=\"d-flex gap-3 align-items-center pb-2 mb-3 border-bottom-grey\">\r\n      <h2 className=\"section-head-sub mb-0 border-0\">\r\n        {t(\"updateYourProfile\")}\r\n      </h2>\r\n      {/* <OverlayTrigger placement=\"bottom\" overlay={disableProfile}>\r\n        <div class=\"form-check form-switch toggle-switch-wrapper\">\r\n          <input\r\n            class=\"form-check-input toggle-switch-custom\"\r\n            type=\"checkbox\"\r\n            role=\"switch\"\r\n            onClick={handleToggle}\r\n            checked\r\n          />\r\n        </div>\r\n      </OverlayTrigger> */}\r\n    </div>\r\n    {children}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default ProfileWrapper","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Form } from \"react-bootstrap\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { IoIosCamera } from \"react-icons/io\";\r\nimport Autocomplete from \"react-google-autocomplete\";\r\nimport RexettButton from \"../../atomic/RexettButton\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  filePreassignedUrlGenerate,\r\n  getClientProfile,\r\n  updateClientProfile,\r\n} from \"../../../redux/slices/clientDataSlice\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport companyLogo from \"../../../assets/img/amazon.png\";\r\nimport CommonAutocomplete from \"../../atomic/CommonAutoComplete\";\r\n\r\nconst CompanyProfile = () => {\r\n  const userId = localStorage.getItem(\"userId\");\r\n  const [logo, setLogo] = useState(null);\r\n  const {\r\n    register,\r\n    control,\r\n    setValue,\r\n    watch,\r\n    trigger,\r\n    handleSubmit,\r\n\r\n    formState: { errors, isDirty, isValid, isSubmitting },\r\n  } = useForm({});\r\n\r\n  const GOOGLE_MAP_API_KEY = process.env.REACT_APP_GOOGLE_MAP_API;\r\n\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const { smallLoader, clientProfileDetails, screenLoader, approvedLoader } =\r\n    useSelector((state) => state.clientData);\r\n\r\n  useEffect(() => {\r\n    dispatch(getClientProfile());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    setValue(\"company_address\", clientProfileDetails?.data?.company_address);\r\n    setValue(\"company_name\", clientProfileDetails?.data?.company_name);\r\n    setValue(\"company_tax_id\", clientProfileDetails?.data?.company_tax_id);\r\n    setValue(\"company_type\", clientProfileDetails?.data?.company_type);\r\n    if (clientProfileDetails?.data?.company_logo) {\r\n      setLogo(clientProfileDetails?.data?.company_logo);\r\n    }\r\n  }, [clientProfileDetails]);\r\n\r\n  // const onSubmit = (values) => {\r\n  //   localStorage.setItem(\"newUserName\", values?.name);\r\n  //   console.log(values, \"values o\");\r\n  //   let formData = {\r\n  //     ...values,\r\n  //     password: values?.password ? values.password : null,\r\n  //     previous_password: values?.previous_password\r\n  //       ? values.previous_password\r\n  //       : null,\r\n  //     client_type: \"individual\",\r\n  //   };\r\n  //   dispatch(updateClientProfile(formData), () => {\r\n  //     dispatch(getClientProfile());\r\n  //   });\r\n  // };\r\n  // const handleJobStatusModal = () => {\r\n  //   setStatus(!status);\r\n  //   setShowModal(false);\r\n  // };\r\n\r\n  // const validatePassword = (value) => {\r\n  //   if (value === \"\") {\r\n  //     return true;\r\n  //   } else {\r\n  //     const pattern = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\r\n  //     if (!pattern.test(value)) {\r\n  //       return \"Password must contain at least a symbol, upper and lower case letters and a number\";\r\n  //     }\r\n  //   }\r\n  //   return true;\r\n  // };\r\n  const onSubmit = (values) => {\r\n    console.log(values, \"companyDetailsSubmit\");\r\n    const clientProfileDetails = watch();\r\n    const payload = {\r\n      ...values,\r\n      // ...clientProfileDetails,\r\n      password: clientProfileDetails.password\r\n        ? clientProfileDetails.password\r\n        : null,\r\n      previous_password: clientProfileDetails.previous_password\r\n        ? clientProfileDetails.previous_password\r\n        : null,\r\n      client_type: \"company\",\r\n    };\r\n    if (values?.company_logo.name !== undefined) {\r\n      let fileData = new FormData();\r\n      fileData.append(\"file\", values?.company_logo);\r\n      dispatch(\r\n        filePreassignedUrlGenerate(fileData, (url) => {\r\n          let data = {\r\n            ...payload,\r\n            company_logo: url,\r\n            user_id: userId,\r\n          };\r\n          dispatch(updateClientProfile(data));\r\n        })\r\n      );\r\n    } else {\r\n      let data = {\r\n        ...payload,\r\n        company_logo: logo,\r\n        user_id: userId,\r\n      };\r\n      dispatch(updateClientProfile(data));\r\n    }\r\n  };\r\n  const handleCompanyLogo = (e) => {\r\n    const file = e?.target?.files?.[0];\r\n    const allowedTypes = [\"image/jpeg\", \"image/png\", \"image/jpg\", \"image/svg\"];\r\n    if (file) {\r\n      if (allowedTypes.includes(file.type)) {\r\n        const fileUrl = URL.createObjectURL(file);\r\n        setValue(\"company_logo\", file);\r\n        setLogo(fileUrl);\r\n      } else {\r\n        // clearErrors(\"company_logo\", {\r\n        //   type: \"manual\",\r\n        //   message:\r\n        //     \"Please select a valid image file i.e (.png,.jpg,.svg or jpeg)\",\r\n        // });\r\n        setLogo(null);\r\n        setValue(\"company_logo\", null);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit(onSubmit)} noValidate>\r\n        <Row>\r\n          <Col md={12}>\r\n            <Form.Group className=\"mb-4\">\r\n              <Form.Label className=\"common-label\">Company Logo</Form.Label>\r\n              <Form.Control\r\n                {...register(\"company_logo\", {\r\n                  onChange: (e) => handleCompanyLogo(e),\r\n                })}\r\n                type=\"file\"\r\n                id=\"company_logo_file\"\r\n                placeholder=\"Company Name\"\r\n                className=\"common-field d-none\"\r\n              />\r\n              <div className=\"file_shown\">\r\n                <img src={logo ? logo : companyLogo} alt=\"Company Logo\" />\r\n                <Form.Label\r\n                  htmlFor=\"company_logo_file\"\r\n                  className=\"camera-btn mb-0\"\r\n                >\r\n                  <IoIosCamera />\r\n                </Form.Label>\r\n              </div>\r\n              {errors?.company_logo && (\r\n                <p className=\"error-message\">{errors.company_logo?.message}</p>\r\n              )}\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={6}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label className=\"common-label\">Company Name*</Form.Label>\r\n              <Form.Control\r\n                {...register(\"company_name\", {\r\n                  required: \"Company name is required\",\r\n                })}\r\n                type=\"text\"\r\n                placeholder=\"Company Name\"\r\n                className=\"common-field\"\r\n              />\r\n              {errors?.company_name && (\r\n                <p className=\"error-message\">{errors.company_name?.message}</p>\r\n              )}\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={6}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label className=\"common-label\">Type of Company*</Form.Label>\r\n              <Form.Select\r\n                {...register(\"company_type\", {\r\n                  required: \"Company type is required\",\r\n                })}\r\n                className=\"common-field\"\r\n              >\r\n                <option disabled selected value=\"\">\r\n                  Please select company type\r\n                </option>\r\n                <option value=\"sole_partnership\">Sole Partnership</option>\r\n                <option value=\"partnership\">Partnership</option>\r\n                <option value=\"limited_liability_company(LLC)\">\r\n                  Limited Liability Company(LLC)\r\n                </option>\r\n                <option value=\"corporation\">Corporation</option>\r\n                <option value=\"nonprofit_organization\">\r\n                  Nonprofit Organization\r\n                </option>\r\n                <option value=\"cooperative\">Cooperative</option>\r\n                <option value=\"franchise\">Franchise</option>\r\n                <option value=\"joint_venture\">Joint Venture</option>\r\n              </Form.Select>\r\n              {errors?.company_type && (\r\n                <p className=\"error-message\">{errors.company_type?.message}</p>\r\n              )}\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={6}>\r\n            <Form.Group className=\"mb-3\">\r\n              <CommonAutocomplete\r\n                label={t(\"Company Address\") + \" *\"}\r\n                name=\"address\"\r\n                control={control}\r\n                rules={{ required: \"Company Address is required\" }}\r\n                error={errors.company_address}\r\n                apiKey={GOOGLE_MAP_API_KEY}\r\n                onPlaceSelected={(place) => {\r\n                  setValue(\"company_address\", place.formatted_address);\r\n                }}\r\n                onChange={(e) => {\r\n                  setValue(\"company_address\", e.target.value);\r\n                }}\r\n                options={{ types: [\"establishment\", \"geocode\"] }}\r\n              />\r\n              {errors?.company_address && (\r\n                <p className=\"error-message\">\r\n                  {errors.company_address?.message}\r\n                </p>\r\n              )}\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={6}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label className=\"common-label\">Tax ID*</Form.Label>\r\n              <Form.Control\r\n                {...register(\"company_tax_id\", {\r\n                  required: \"Company tax id is required\",\r\n                })}\r\n                name=\"company_tax_id\"\r\n                type=\"text\"\r\n                placeholder=\"Tax Id\"\r\n                className=\"common-field\"\r\n              />\r\n              {errors?.company_tax_id && (\r\n                <p className=\"error-message\">\r\n                  {errors.company_tax_id?.message}\r\n                </p>\r\n              )}\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={12}>\r\n            <div className=\"text-center\">\r\n              <RexettButton\r\n                type=\"submit\"\r\n                text={t(\"updateProfile\")}\r\n                className=\"main-btn px-5 mt-4\"\r\n                variant=\"transparent\"\r\n                disabled={smallLoader}\r\n                isLoading={smallLoader}\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyProfile;\r\n","import React from \"react\";\r\nimport { Nav, Tab } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport AllRoleEditProfile from \"../../components/common/EditProfile/AllRoleEditProfile\";\r\nimport ProfileWrapper from \"../../components/common/EditProfile/ProfileWrapper\";\r\nimport CompanyProfile from \"../../components/common/EditProfile/CompanyProfile\";\r\n\r\nconst EditProfile = () => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <>\r\n      <ProfileWrapper>\r\n        <section className=\"card-box\">\r\n          <Tab.Container\r\n            id=\"left-tabs-example\"\r\n            defaultActiveKey=\"personal_details\"\r\n          >\r\n            <Nav variant=\"pills\" className=\"mb-4 application-pills\">\r\n              <Nav.Item className=\"application-item\">\r\n                <Nav.Link\r\n                  className=\"application-link\"\r\n                  eventKey=\"personal_details\"\r\n                >\r\n                  Personal Details\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item className=\"application-item\">\r\n                <Nav.Link\r\n                  className=\"application-link\"\r\n                  eventKey=\"company_details\"\r\n                >\r\n                  Company Details\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey=\"personal_details\">\r\n              <AllRoleEditProfile role=\"client\" />\r\n              </Tab.Pane>\r\n\r\n              <Tab.Pane eventKey=\"company_details\">\r\n              <CompanyProfile role=\"client\"/>\r\n              </Tab.Pane>\r\n           \r\n            </Tab.Content> \r\n          </Tab.Container>\r\n        </section>\r\n      </ProfileWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","import React from \"react\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport RexettButton from \"../../../components/atomic/RexettButton\";\r\nimport { clientDeleteHoliday, getClientHolidayList } from \"../../../redux/slices/clientDataSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nconst ConfirmationModal = ({ text,show, handleClose,onClick ,handleAction,smallLoader,type,startDate,endDate}) => {\r\n    const callBackBtn=(e )=>{\r\n        let data={\r\n            status: type,\r\n        }\r\n        onClick(e,data)\r\n    }\r\n    return(\r\n        <Modal show={show} onHide={(e)=>handleClose(e)} centered animation className=\"custom-modal\">\r\n            <Modal.Header closeButton className=\"border-0 pb-3\">\r\n            {/* <Modal.Title>End Job</Modal.Title> */}\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group className=\"mb-4\">\r\n                        <Form.Label className=\"d-block text-center\">{text}</Form.Label>\r\n                    </Form.Group>\r\n                    <div className=\"text-center\">\r\n                        <RexettButton\r\n                            type=\"submit\"\r\n                            text=\"Yes\"\r\n                            onClick={type ? callBackBtn : handleAction}\r\n                            // onClick={callBackBtn}\r\n                            className=\"main-btn px-4 me-3 font-14 fw-semibold\"\r\n                            variant=\"transparent\"\r\n                            disabled={smallLoader}\r\n                            isLoading={smallLoader}\r\n                        />\r\n                        <Button variant=\"transparent\" onClick={handleClose} className=\"outline-main-btn font-14 fw-semibold bg-transparent border-black text-black px-4\" >No</Button>\r\n                    </div>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\nexport default ConfirmationModal;"],"names":["_ref","_userProfileDetails$d9","role","userId","localStorage","getItem","selectedImage","setSelectedImage","useState","t","useTranslation","register","setValue","control","handleSubmit","formState","errors","isDirty","isValid","isSubmitting","useForm","dispatch","useDispatch","showModal","setShowModal","status","setStatus","isPassword","setPassword","firstPass","secondPass","file","setFile","smallLoader","userProfileDetails","screenLoader","useSelector","state","developerData","GOOGLE_MAP_API_KEY","process","useEffect","subEndPoint","developer","admin","client","getCurrentRoleEndPoint","getProfileDetails","console","log","_userProfileDetails$d","_userProfileDetails$d2","_userProfileDetails$d3","_userProfileDetails$d4","_userProfileDetails$d5","_userProfileDetails$d6","_userProfileDetails$d7","_userProfileDetails$d8","data","name","email","phone_number","address","address_2","city","country","passcode","Tooltip","validatePassword","value","test","_jsxs","_Fragment","children","_jsx","ScreenLoader","onSubmit","values","formData","FormData","fileData","key","append","user_id","updateDeveloperProfile","filePreassignedUrlGenerate","url","profile_picture","noValidate","Row","className","Col","md","CommonInput","label","rules","required","error","pattern","message","readOnly","type","validate","previous_password","onTogglePassword","icon","FaEye","password","CommonAutocomplete","apiKey","onPlaceSelected","place","formatted_address","onChange","e","target","options","types","event","files","reader","FileReader","onloadend","result","readAsDataURL","handleFileChange","accept","Form","Label","htmlFor","HiUpload","src","alt","RexettButton","text","variant","disabled","isLoading","ConfirmationModal","show","handleClose","handleJobStatusModal","onClick","handleAction","getEnableDisableAccount","CompanyProfile","_errors$company_logo","_errors$company_name","_errors$company_type","_errors$company_addre","_errors$company_tax_i","logo","setLogo","watch","trigger","clientProfileDetails","approvedLoader","clientData","getClientProfile","_clientProfileDetails","_clientProfileDetails2","_clientProfileDetails3","_clientProfileDetails4","_clientProfileDetails5","_clientProfileDetails6","company_address","company_name","company_tax_id","company_type","company_logo","payload","client_type","undefined","updateClientProfile","Group","Control","_e$target","_e$target$files","includes","fileUrl","URL","createObjectURL","handleCompanyLogo","id","placeholder","companyLogo","IoIosCamera","Select","selected","EditProfile","ProfileWrapper","Tab","Container","defaultActiveKey","Nav","Item","Link","eventKey","Content","Pane","AllRoleEditProfile","startDate","endDate","Modal","onHide","centered","animation","Header","closeButton","Body","Button"],"sourceRoot":""}
{"version":3,"file":"static/js/881.88c73b14.chunk.js","mappings":"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","sources":["components/atomic/NoDataFound.jsx","components/atomic/RexettPagination.jsx","components/common/SingleJob/JobCard.jsx","pages/admin/AdminSingleJob.jsx","pages/views/Modals/ConfirmationModal.jsx"],"sourcesContent":["import React from 'react'\r\nimport errorImg from '../../assets/img/warning-icon.gif'\r\nconst NoDataFound = ({data}) => {\r\n  return (\r\n    <div className='no-data-container'>\r\n      <div className='no-data'>\r\n        <img src={errorImg} />{data?data:\"No Data Found\"}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NoDataFound","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ResponsivePagination from 'react-responsive-pagination';\r\nimport 'react-responsive-pagination/themes/classic.css';\r\nimport { adminJobListing } from \"../../redux/slices/adminDataSlice\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\nconst RexettPagination = ({ number, setPage, page }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    setPage(pageNumber);\r\n  };\r\n\r\n  const renderPaginationItems = () => {\r\n    const paginationItems = [];\r\n\r\n    if (number <= 6) {\r\n      // If total number of pages is 6 or less, render all pages\r\n      for (let i = 1; i <= number; i++) {\r\n        paginationItems.push(\r\n          <Pagination.Item\r\n            key={i}\r\n            className=\"custom-pagination-item\"\r\n            active={i === page}\r\n            onClick={() => handlePageChange(i)}\r\n          >\r\n            {i}\r\n          </Pagination.Item>\r\n        );\r\n      }\r\n    } else {\r\n      // If total number of pages is greater than 6, render first 3 pages, last 3 pages, and dots\r\n      paginationItems.push(\r\n        <Pagination.Item\r\n          key={1}\r\n          className=\"custom-pagination-item\"\r\n          active={1 === page}\r\n          onClick={() => handlePageChange(1)}\r\n        >\r\n          {1}\r\n        </Pagination.Item>\r\n      );\r\n\r\n      if (page > 4) {\r\n        paginationItems.push(\r\n          <Pagination.Ellipsis key=\"start-dots\" disabled />\r\n        );\r\n      }\r\n\r\n      for (let i = Math.max(2, page - 1); i <= Math.min(page + 1, number - 1); i++) {\r\n        paginationItems.push(\r\n          <Pagination.Item\r\n            key={i}\r\n            className=\"custom-pagination-item\"\r\n            active={i === page}\r\n            onClick={() => handlePageChange(i)}\r\n          >\r\n            {i}\r\n          </Pagination.Item>\r\n        );\r\n      }\r\n\r\n      if (page < number - 3) {\r\n        paginationItems.push(\r\n          <Pagination.Ellipsis key=\"end-dots\" disabled />\r\n        );\r\n      }\r\n\r\n      paginationItems.push(\r\n        <Pagination.Item\r\n          key={number}\r\n          className=\"custom-pagination-item\"\r\n          active={number === page}\r\n          onClick={() => handlePageChange(number)}\r\n        >\r\n          {number}\r\n        </Pagination.Item>\r\n      );\r\n    }\r\n\r\n    return paginationItems;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Pagination className=\"pagination flex-wrap\">\r\n        <Pagination.Prev\r\n          className=\"pagination-arrow custom-pagination-item me-1\"\r\n          onClick={() => handlePageChange(page - 1)}\r\n          disabled={page === 1}\r\n        />\r\n        <div className=\"pages-link flex-wrap\">\r\n          {renderPaginationItems()}\r\n        </div>\r\n        <Pagination.Next\r\n          className=\"pagination-arrow next-arrow ms-1 custom-pagination-item\"\r\n          onClick={() => handlePageChange(page + 1)}\r\n          disabled={page === number}\r\n        />\r\n      </Pagination>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RexettPagination;\r\n","import React from \"react\";\r\nimport { Button, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport userImg from \"../../../assets/img/user-img.jpg\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { FaGithub } from \"react-icons/fa\";\r\nimport { FaLinkedin } from \"react-icons/fa\";\r\nimport { MdOutlinePersonRemove } from \"react-icons/md\";\r\nimport NoDataFound from \"../../atomic/NoDataFound\";\r\nimport RexettPagination from \"../../atomic/RexettPagination\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { ImUserCheck } from \"react-icons/im\";\r\nimport { PiUserRectangleFill } from \"react-icons/pi\";\r\nimport { ImUserMinus } from \"react-icons/im\";\r\nimport { RiUserAddFill } from \"react-icons/ri\";\r\nimport ScreenLoader from \"../../atomic/ScreenLoader\";\r\n\r\nconst JobCard = ({\r\n  handleJobStatusModal,\r\n  type,\r\n  data,\r\n  jobStatus,\r\n  role,\r\n  setPage,\r\n  page,\r\n}) => {\r\n  const navigate = useNavigate();\r\n  const { singleJobPagination ,screenLoader} = useSelector(\r\n    (state) => state.adminData\r\n  );\r\nconsole.log(screenLoader,\"screenloader\")\r\n  const developerCardToolTip = (\r\n    <Tooltip id=\"tooltip\">\r\n      {type === \"Interviewing\"\r\n        ? \"Hire\"\r\n        : type === \"Shortlisted\"\r\n        ? \"Interview\"\r\n        : \"Shortlist\"}\r\n    </Tooltip>\r\n  );\r\n\r\n  const rejectedCardToolTip = <Tooltip id=\"tooltip\">Reject</Tooltip>;\r\n\r\n  const suggestedCardToolTip = (status) => {\r\n    return (\r\n      <Tooltip id=\"tooltip\">\r\n        {status ? \" Remove from suggestion\" : \"Suggest the developer\"}\r\n      </Tooltip>\r\n    );\r\n  };\r\n\r\n  const handleDeveloperCard = (e, id) => {\r\n    if (role == \"client\") {\r\n      navigate(`client/client-single-developer/${id}`);\r\n    } else if (role === \"admin\") {\r\n      navigate(`/admin-single-developer/${id}`);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {screenLoader ? <ScreenLoader /> : <>\r\n        <div className=\"developers-list job-card pt-0\">\r\n          {data?.length > 0 ? (\r\n            <>\r\n              {data?.map((item, index) => {\r\n                return (\r\n                  <>\r\n                    <div\r\n                      className={\r\n                        item?.recommed\r\n                          ? \"developer-card recomed-dev p-0\"\r\n                          : \"developer-card p-0\"\r\n                      }\r\n                    >\r\n                      {/* <div className=\"tag-developer\">{item?.recommed ? \"Recommend\" : \"Suggest\"}</div> */}\r\n                      <div className=\"tag-developer\">\r\n                        {type && type === \"Suggested\" ? \"Suggest\" : type}\r\n                      </div>\r\n                      <div className=\"overflow-hidden inner-dev-card\">\r\n                        <div\r\n                          className=\"user-imgbx\"\r\n                          onClick={(e) =>\r\n                            handleDeveloperCard(e, item?.developer?.id)\r\n                          }\r\n                        >\r\n                          <img\r\n                            src={\r\n                              item?.developer?.profile_picture\r\n                                ? item?.developer?.profile_picture\r\n                                : userImg\r\n                            }\r\n                            alt=\"developer\"\r\n                            className=\"user-img\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                          <h3 className=\"user-name\">{item?.developer?.name}</h3>\r\n                          <p className=\"designation-user\">Software Developer</p>\r\n                          <p className=\"email-user\">{item?.developer?.email}</p>\r\n                          <ul className=\"social-icons\">\r\n                            <li>\r\n                              <Link to=\"#\">\r\n                                <FaGithub />\r\n                              </Link>\r\n                            </li>\r\n                            <li>\r\n                              <Link to=\"#\">\r\n                                <FaLinkedin />\r\n                              </Link>\r\n                            </li>\r\n                            {/* <li>\r\n                                                    <Link to=\"#\"><MdEmail /></Link>\r\n                                                </li> */}\r\n                          </ul>\r\n                          <div className=\"job-card-btns\">\r\n                            {role !== \"admin\" &&\r\n                            (type === \"Shortlisted\" ||\r\n                              type === \"Suggested\" ||\r\n                              type === \"Interviewing\") &&\r\n                            type !== \"Hired\" ? (\r\n                              <OverlayTrigger\r\n                                placement=\"bottom\"\r\n                                overlay={developerCardToolTip}\r\n                              >\r\n                                <Button\r\n                                  variant=\"danger\"\r\n                                  disabled={\r\n                                    jobStatus === \"Ended\" ? true : false\r\n                                  }\r\n                                  onClick={(e) =>\r\n                                    handleJobStatusModal(e, item?.id, type)\r\n                                  }\r\n                                  className=\"w-100 main-btn text-black border-white mt-3\"\r\n                                >\r\n                                  {type === \"Interviewing\" ? (\r\n                                    <RiUserAddFill />\r\n                                  ) : type === \"Shortlisted\" ? (\r\n                                    <PiUserRectangleFill />\r\n                                  ) : (\r\n                                    <ImUserCheck />\r\n                                  )}\r\n                                </Button>\r\n                              </OverlayTrigger>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                            {role !== \"admin\" && (\r\n                              <OverlayTrigger\r\n                                placement=\"bottom\"\r\n                                overlay={rejectedCardToolTip}\r\n                              >\r\n                                <Button\r\n                                  variant=\"danger\"\r\n                                  onClick={(e) =>\r\n                                    handleJobStatusModal(\r\n                                      e,\r\n                                      item?.id,\r\n                                      \"rejected\"\r\n                                    )\r\n                                  }\r\n                                  disabled={\r\n                                    jobStatus === \"Ended\" ? true : false\r\n                                  }\r\n                                  className=\"w-100\"\r\n                                >\r\n                                  <ImUserMinus />\r\n                                </Button>\r\n                              </OverlayTrigger>\r\n                            )}\r\n                            {role === \"admin\" && (\r\n                              <OverlayTrigger\r\n                                placement=\"top\"\r\n                                overlay={suggestedCardToolTip(\r\n                                  item?.developer?.already_suggested\r\n                                )}\r\n                              >\r\n                                <Button\r\n                                  variant={\r\n                                    item?.developer?.already_suggested\r\n                                      ? \"dark\"\r\n                                      : \"success\"\r\n                                  }\r\n                                  onClick={() =>\r\n                                    handleJobStatusModal(\r\n                                      item?.developer?.id,\r\n                                      item?.developer?.already_suggested ? 0 : 1\r\n                                    )\r\n                                  }\r\n                                  className=\"w-100 mt-2 main-btn py-2 text-black mt-3 font-15\"\r\n                                >\r\n                                  {item?.developer?.already_suggested ? (\r\n                                    <MdOutlinePersonRemove />\r\n                                  ) : (\r\n                                    <RiUserAddFill />\r\n                                  )}\r\n                                </Button>\r\n                              </OverlayTrigger>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                );\r\n              })}\r\n            </>\r\n          ) : (\r\n            <div>\r\n              {\" \"}\r\n              <NoDataFound data=\"No developer found\" />\r\n            </div>\r\n          )}\r\n\r\n        </div>\r\n\r\n      {role === \"admin\" && type === \"Suggested\" ? (\r\n        <div className=\"d-flex w-100 align-items-center justify-content-between my-4\">\r\n          <p className=\"mb-0\">\r\n            Showing {singleJobPagination?.data?.length} results\r\n          </p>\r\n          <RexettPagination\r\n            number={singleJobPagination?.total_pages_for_all}\r\n            setPage={setPage}\r\n            page={page}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n   </> }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JobCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Form, Row, Tab, Tabs } from \"react-bootstrap\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { adminSingleJob, getDeveloperSuggestList, suggestDeveloper } from \"../../redux/slices/adminDataSlice\";\r\nimport JobCard from \"../../components/common/SingleJob/JobCard\";\r\nimport ConfirmationModal from \"../views/Modals/ConfirmationModal\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport ScreenLoader from \"../../components/atomic/ScreenLoader\";\r\nimport { FaRegHandshake } from \"react-icons/fa6\";\r\nimport { SlLocationPin } from \"react-icons/sl\";\r\nimport sowDoc from '../../assets/img/aws_examples_sows.pdf';\r\n\r\nconst AdminSingleJob = () => {\r\n    const { t } = useTranslation();\r\n    const navigate = useNavigate();\r\n    const { pathname } = useLocation()\r\n    const dispatch = useDispatch()\r\n    let id = pathname.split(\"/\")[3]\r\n    const [showEndJobModal, setShowEndJobModal] = useState(false);\r\n    const { singleJobListing, suggestedDeveloper, screenLoader, smallLoader } = useSelector(state => state.adminData)\r\n    const [singleJobDescription, setSingleJobDescription] = useState({})\r\n    const [selectedTabsData, setSelectedTabsData] = useState([]);\r\n    const [suggestedData, setSuggestedData] = useState(null)\r\n    const [page, setPage] = useState(1)\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            dispatch(adminSingleJob(id))\r\n            dispatch(getDeveloperSuggestList(id, page))\r\n        }\r\n    }, [page, id])\r\n\r\n    useEffect(() => {\r\n        setSingleJobDescription(singleJobListing?.data)\r\n    }, [singleJobListing])\r\n    const handleShowEndJobModal = (id, status) => {\r\n        setSuggestedData({\r\n            developer_id: id,\r\n            status: status\r\n        })\r\n        setShowEndJobModal(true);\r\n    };\r\n\r\n    const convertToArray = (arr) => {\r\n        const skillsArray = arr?.split(\",\");\r\n        return skillsArray\r\n    }\r\n\r\n    const handleCloseEndJobModal = () => {\r\n        setShowEndJobModal(false);\r\n    };\r\n    const handleSelect = (key) => {\r\n        setSelectedTabsData(singleJobListing[key])\r\n    }\r\n    const handleJobStatusAction = async (e) => {\r\n        e.preventDefault()\r\n        let data = {\r\n            \"job_id\": id,\r\n            \"developer_id\": suggestedData?.developer_id,\r\n            \"status\": suggestedData?.status\r\n        }\r\n        await dispatch(suggestDeveloper(data))\r\n        setShowEndJobModal(false);\r\n        dispatch(getDeveloperSuggestList(id, page))\r\n    }\r\n    const currentStatusCssClass = (status) => {\r\n        switch (status) {\r\n            case \"ended\":\r\n                return \"endcontract\";\r\n            case \"Initiated\":\r\n                return \"inprogress\";\r\n            case \"completed\":\r\n                return \"completed\";\r\n            case \"published\":\r\n                return \"completed\";\r\n            case \"unpublished\":\r\n            case \"Unpublished\":\r\n                return \"unpublished\";\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const returnExperienceFromScreeningQuestions = (screeningQuestions) => {\r\n        if (screeningQuestions?.length) {\r\n            const requiredElement = screeningQuestions?.find(\r\n                (curElem) =>\r\n                    curElem?.question ==\r\n                    \"How many years of experience do you currently have?\"\r\n            );\r\n            if (requiredElement) {\r\n                return requiredElement?.ideal_answer;\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {screenLoader ? <ScreenLoader /> : <section className=\"single-job-section\">\r\n                <div className=\"single-job-card job-information-wrapper mb-0\">\r\n                    {/* <h2 className=\"jobclient-name\"><img src={amazonImg} /> Amazon</h2> */}\r\n                    <div className=\"d-flex justify-content-between align-items-center flex-md-row flex-column-reverse\">\r\n                        <div>\r\n                            <h2 className=\"single-job-title mb-0\">{singleJobDescription?.title}</h2>\r\n                            <p className=\"req-text fw-normal mt-2\">by {singleJobDescription?.client?.name}</p>\r\n                        </div>\r\n                        <div className=\"d-flex gap-3 align-items-center mb-md-0 mb-3\">\r\n                            <p className={`status-text ${currentStatusCssClass(\r\n                                singleJobDescription?.status\r\n                            )}`}>{singleJobDescription?.status?.charAt(0).toUpperCase() + singleJobDescription?.status?.slice(1)}</p>\r\n                            {/* <Button variant=\"transparent\" onClick={handleShowEndJobModal} className=\"px-5 closed-job-btn\">End Job</Button> */}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex align-items-center gap-3 my-3\">\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                            {/* <h3 className=\"req-heading\">{t(\"contract\")}</h3> */}\r\n                            <FaRegHandshake />\r\n                            <p className=\"req-text mb-0\">{singleJobDescription?.contract_type?.split(\"-\").join(\" \").replace(/^(.)|\\s+(.)/g, (c) => c.toUpperCase())}</p>\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                            <SlLocationPin />\r\n                            {/* <h3 className=\"req-heading mt-4\">{t(\"location\")}</h3> */}\r\n                            <p className=\"req-text mb-0\">{singleJobDescription?.job_type}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <div>\r\n                                    <h3 className=\"req-heading\">{t(\"skillsRequired\")}</h3>\r\n                                    {singleJobDescription?.skills?.length > 0 ? <ul className=\"skills-listing mb-0\">\r\n                                        {\r\n                                            convertToArray(singleJobDescription?.skills)?.map((item, index) => {\r\n                                                return (\r\n                                                    <>\r\n                                                        <li key={index}>{item}</li>\r\n                                                    </>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </ul> : \"Not Mentioned\"}\r\n                                </div>\r\n                            </Col>\r\n                            <Col md={6}>\r\n                                <div>\r\n                                    <h3 className=\"req-heading\">{t(\"optionalSkills\")}</h3>\r\n                                    {singleJobDescription?.optional_skills?.length > 0 ? <ul className=\"skills-listing mb-0\">\r\n                                        {\r\n                                            convertToArray(singleJobDescription?.optional_skills)?.map((item, index) => {\r\n                                                return (\r\n                                                    <>\r\n                                                        <li key={index}>{item}</li>\r\n                                                    </>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </ul> : \"Not Mentioned\"}\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"single-job-card\">\r\n                            <Row>\r\n                                <Col md=\"4\">\r\n                                    <h3 className=\"req-heading\">{t(\"clientName\")}</h3>\r\n\r\n                                </Col>\r\n                                <Col md=\"4\">\r\n                                    <h3 className=\"req-heading\">{t(\"experienceRequirements\")}</h3>\r\n                                    <p className={returnExperienceFromScreeningQuestions(\r\n                                        singleJobDescription?.screening_questions\r\n                                    ) ? `req-text` : \"\"} >\r\n                                        {singleJobDescription?.screening_questions &&\r\n                                            returnExperienceFromScreeningQuestions(\r\n                                                singleJobDescription?.screening_questions\r\n                                            )}\r\n                                        {returnExperienceFromScreeningQuestions(\r\n                                            singleJobDescription?.screening_questions\r\n                                        ) && \" years\"}\r\n                                    </p>\r\n                                </Col>\r\n                                <Col md=\"4\">\r\n                                </Col>\r\n                                <Col md=\"4\">\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                        <div className=\"single-job-card\">\r\n                            <Row>\r\n                                <Col>\r\n                                    <h3 className=\"req-heading\">{t(\"skillsRequired\")}</h3>\r\n                                    {singleJobDescription?.skills?.length > 0 ? <ul className=\"skills-listing mb-0\">\r\n                                        {\r\n                                            convertToArray(singleJobDescription?.skills)?.map((item, index) => {\r\n                                                return (\r\n                                                    <>\r\n                                                        <li key={index}>{item}</li>\r\n                                                    </>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </ul> : \"Not Mentioned\"}\r\n                                </Col>\r\n                                <Col>\r\n                                    <h3 className=\"req-heading\">{t(\"optionalSkills\")}</h3>\r\n                                    {singleJobDescription?.optional_skills?.length > 0 ? <ul className=\"skills-listing mb-0\">\r\n                                        {\r\n                                            convertToArray(singleJobDescription?.optional_skills)?.map((item, index) => {\r\n                                                return (\r\n                                                    <>\r\n                                                        <li key={index}>{item}</li>\r\n                                                    </>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </ul> : \"Not Mentioned\"}\r\n                                </Col>\r\n                            </Row>\r\n                        </div> */}\r\n            </section>}\r\n            <div className=\"job-tab-detail\">\r\n                <Tabs\r\n                    defaultActiveKey=\"job-details\"\r\n                    id=\"fill-tab-example\"\r\n                    className=\"mb-3 job-tabs\"\r\n                    onSelect={handleSelect}\r\n                >\r\n                    <Tab eventKey=\"job-details\" title=\"Job Details\">\r\n                        <div className=\"single-job-card shadow-none\">\r\n                            <h3 className=\"req-heading\">About this job</h3>\r\n                            <p className=\"single-job-description mb-0\"\r\n                                dangerouslySetInnerHTML={{\r\n                                    __html: singleJobDescription?.description,\r\n                                }}\r\n                            ></p>\r\n                        </div>\r\n                    </Tab>\r\n                    <Tab eventKey=\"suggested\" title=\"Suggestions\">\r\n                        <JobCard type=\"Suggested\" data={suggestedDeveloper} setPage={setPage} page={page} role=\"admin\" handleJobStatusModal={handleShowEndJobModal} />\r\n                    </Tab>\r\n                    <Tab eventKey=\"shortlisted\" title=\"Shortlisted\">\r\n                        <JobCard type=\"Shortlisted\" data={selectedTabsData} role=\"admin\" />\r\n                    </Tab>\r\n                    <Tab eventKey=\"interviewing\" title=\"Interviewing\">\r\n                        <JobCard type=\"Interviewing\" data={selectedTabsData} role=\"admin\" />\r\n                    </Tab>\r\n                    <Tab eventKey=\"documentation\" title=\"Documentation\">\r\n                        <div className=\"card-box\">\r\n                            <h3 className=\"mb-3 doc-heading\">Client's Documentation</h3>\r\n                            <Row>\r\n                                <Col md={4}>\r\n                                    <div>\r\n                                        <Form.Label>Statement of work(SOW)</Form.Label>\r\n                                        <div>\r\n                                            <div className=\"preview-doc\">\r\n                                                <iframe src={sowDoc}></iframe>\r\n                                            </div>\r\n                                            <Button className=\"main-btn font-14\">Sign Document</Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <div>\r\n                                        <Form.Label>MCA agreement</Form.Label>\r\n                                        <div>\r\n                                            <div className=\"preview-doc\">\r\n                                                <iframe src={sowDoc}></iframe>\r\n                                            </div>\r\n                                            <Button className=\"main-btn font-14\">Sign Document</Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <div>\r\n                                        <Form.Label>Non disclosure Agreement(NDA)</Form.Label>\r\n                                        <div>\r\n                                            <div className=\"preview-doc\">\r\n                                                <iframe src={sowDoc}></iframe>\r\n                                            </div>\r\n                                            <Button className=\"main-btn font-14\">Sign Document</Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Tab>\r\n                    <Tab eventKey=\"hired\" title=\"Hired\">\r\n                        <JobCard type=\"Hired\" data={selectedTabsData} role=\"admin\" />\r\n                    </Tab>\r\n                </Tabs >\r\n            </div>\r\n            {/* <EndJobModal show={showEndJobModal} handleClose={handleCloseEndJobModal} /> */}\r\n            < ConfirmationModal text={(suggestedData?.status) ? t(\"suggestDeveloper\") : t(\"removeDeveloperFromSuggestion\")\r\n            } show={showEndJobModal} handleClose={handleCloseEndJobModal} onClick={handleJobStatusAction} smallLoader={smallLoader} />\r\n        </>\r\n    )\r\n}\r\nexport default AdminSingleJob;","import React from \"react\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport RexettButton from \"../../../components/atomic/RexettButton\";\r\nimport { clientDeleteHoliday, getClientHolidayList } from \"../../../redux/slices/clientDataSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nconst ConfirmationModal = ({ text,show, handleClose,onClick ,handleAction,smallLoader,type,startDate,endDate}) => {\r\n    const callBackBtn=(e )=>{\r\n        let data={\r\n            status: type,\r\n        }\r\n        onClick(e,data)\r\n    }\r\n    return(\r\n        <Modal show={show} onHide={(e)=>handleClose(e)} centered animation className=\"custom-modal\">\r\n            <Modal.Header closeButton className=\"border-0 pb-3\">\r\n            {/* <Modal.Title>End Job</Modal.Title> */}\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group className=\"mb-4\">\r\n                        <Form.Label className=\"d-block text-center\">{text}</Form.Label>\r\n                    </Form.Group>\r\n                    <div className=\"text-center\">\r\n                        <RexettButton\r\n                            type=\"submit\"\r\n                            text=\"Yes\"\r\n                            onClick={type ? callBackBtn : handleAction}\r\n                            // onClick={callBackBtn}\r\n                            className=\"main-btn px-4 me-3 font-14 fw-semibold\"\r\n                            variant=\"transparent\"\r\n                            disabled={smallLoader}\r\n                            isLoading={smallLoader}\r\n                        />\r\n                        <Button variant=\"transparent\" onClick={handleClose} className=\"outline-main-btn font-14 fw-semibold bg-transparent border-black text-black px-4\" >No</Button>\r\n                    </div>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\nexport default ConfirmationModal;"],"names":["_ref","data","_jsx","className","children","_jsxs","src","errorImg","number","setPage","page","useDispatch","handlePageChange","pageNumber","_Fragment","Pagination","Prev","onClick","disabled","renderPaginationItems","paginationItems","i","push","Item","active","Ellipsis","Math","max","min","Next","_singleJobPagination$","handleJobStatusModal","type","jobStatus","role","navigate","useNavigate","singleJobPagination","screenLoader","useSelector","state","adminData","console","log","developerCardToolTip","Tooltip","id","rejectedCardToolTip","ScreenLoader","length","map","item","index","_item$developer2","_item$developer3","_item$developer4","_item$developer5","_item$developer6","_item$developer7","_item$developer10","status","recommed","e","_item$developer","developer","concat","profile_picture","userImg","alt","name","email","Link","to","FaGithub","FaLinkedin","OverlayTrigger","placement","overlay","Button","variant","RiUserAddFill","PiUserRectangleFill","ImUserCheck","ImUserMinus","already_suggested","_item$developer8","_item$developer9","MdOutlinePersonRemove","NoDataFound","RexettPagination","total_pages_for_all","AdminSingleJob","_singleJobDescription","_singleJobDescription2","_singleJobDescription3","_singleJobDescription4","_singleJobDescription5","_convertToArray","_singleJobDescription6","_convertToArray2","t","useTranslation","pathname","useLocation","dispatch","split","showEndJobModal","setShowEndJobModal","useState","singleJobListing","suggestedDeveloper","smallLoader","singleJobDescription","setSingleJobDescription","selectedTabsData","setSelectedTabsData","suggestedData","setSuggestedData","useEffect","adminSingleJob","getDeveloperSuggestList","convertToArray","arr","title","client","currentStatusCssClass","charAt","toUpperCase","slice","FaRegHandshake","contract_type","join","replace","c","SlLocationPin","job_type","Row","Col","md","skills","optional_skills","Tabs","defaultActiveKey","onSelect","key","Tab","eventKey","dangerouslySetInnerHTML","__html","description","JobCard","handleShowEndJobModal","developer_id","Form","Label","sowDoc","ConfirmationModal","text","show","handleClose","handleCloseEndJobModal","async","preventDefault","suggestDeveloper","handleAction","startDate","endDate","Modal","onHide","centered","animation","Header","closeButton","Body","Group","RexettButton","isLoading"],"sourceRoot":""}
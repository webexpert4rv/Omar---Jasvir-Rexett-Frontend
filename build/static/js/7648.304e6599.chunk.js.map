{"version":3,"file":"static/js/7648.304e6599.chunk.js","mappings":"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","sources":["components/atomic/NoDataFound.jsx","components/atomic/RexettPagination.jsx","components/atomic/JobTabs.jsx","pages/admin/AdminJobListing.jsx","../node_modules/react-bootstrap/esm/Tabs.js"],"sourcesContent":["import React from 'react'\r\nimport errorImg from '../../assets/img/warning-icon.gif'\r\nconst NoDataFound = ({data}) => {\r\n  return (\r\n    <div className='no-data-container'>\r\n      <div className='no-data'>\r\n        <img src={errorImg} />{data?data:\"No Data Found\"}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NoDataFound","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ResponsivePagination from 'react-responsive-pagination';\r\nimport 'react-responsive-pagination/themes/classic.css';\r\nimport { adminJobListing } from \"../../redux/slices/adminDataSlice\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\nconst RexettPagination = ({ number, setPage, page }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    setPage(pageNumber);\r\n  };\r\n\r\n  const renderPaginationItems = () => {\r\n    const paginationItems = [];\r\n\r\n    if (number <= 6) {\r\n      // If total number of pages is 6 or less, render all pages\r\n      for (let i = 1; i <= number; i++) {\r\n        paginationItems.push(\r\n          <Pagination.Item\r\n            key={i}\r\n            className=\"custom-pagination-item\"\r\n            active={i === page}\r\n            onClick={() => handlePageChange(i)}\r\n          >\r\n            {i}\r\n          </Pagination.Item>\r\n        );\r\n      }\r\n    } else {\r\n      // If total number of pages is greater than 6, render first 3 pages, last 3 pages, and dots\r\n      paginationItems.push(\r\n        <Pagination.Item\r\n          key={1}\r\n          className=\"custom-pagination-item\"\r\n          active={1 === page}\r\n          onClick={() => handlePageChange(1)}\r\n        >\r\n          {1}\r\n        </Pagination.Item>\r\n      );\r\n\r\n      if (page > 4) {\r\n        paginationItems.push(\r\n          <Pagination.Ellipsis key=\"start-dots\" disabled />\r\n        );\r\n      }\r\n\r\n      for (let i = Math.max(2, page - 1); i <= Math.min(page + 1, number - 1); i++) {\r\n        paginationItems.push(\r\n          <Pagination.Item\r\n            key={i}\r\n            className=\"custom-pagination-item\"\r\n            active={i === page}\r\n            onClick={() => handlePageChange(i)}\r\n          >\r\n            {i}\r\n          </Pagination.Item>\r\n        );\r\n      }\r\n\r\n      if (page < number - 3) {\r\n        paginationItems.push(\r\n          <Pagination.Ellipsis key=\"end-dots\" disabled />\r\n        );\r\n      }\r\n\r\n      paginationItems.push(\r\n        <Pagination.Item\r\n          key={number}\r\n          className=\"custom-pagination-item\"\r\n          active={number === page}\r\n          onClick={() => handlePageChange(number)}\r\n        >\r\n          {number}\r\n        </Pagination.Item>\r\n      );\r\n    }\r\n\r\n    return paginationItems;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Pagination className=\"pagination flex-wrap\">\r\n        <Pagination.Prev\r\n          className=\"pagination-arrow custom-pagination-item me-1\"\r\n          onClick={() => handlePageChange(page - 1)}\r\n          disabled={page === 1}\r\n        />\r\n        <div className=\"pages-link flex-wrap\">\r\n          {renderPaginationItems()}\r\n        </div>\r\n        <Pagination.Next\r\n          className=\"pagination-arrow next-arrow ms-1 custom-pagination-item\"\r\n          onClick={() => handlePageChange(page + 1)}\r\n          disabled={page === number}\r\n        />\r\n      </Pagination>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RexettPagination;\r\n","import React from \"react\";\r\nimport { Col, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaEye } from \"react-icons/fa6\";\r\nimport NoDataFound from \"./NoDataFound\";\r\nimport ScreenLoader from \"./ScreenLoader\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { FaClipboardUser } from \"react-icons/fa6\";\r\nimport { FaUsers } from \"react-icons/fa\";\r\nimport { PiChatsFill } from \"react-icons/pi\";\r\nimport { FaHandshake } from \"react-icons/fa\";\r\nimport { MdWorkHistory } from \"react-icons/md\";\r\n\r\nconst JobTabs = ({ jobListing, jobCategoryList, screenLoader }) => {\r\n  const { t } = useTranslation()\r\n  const getCategory = (cat) => {\r\n    let data = jobCategoryList.find((item) => item.id == cat);\r\n    return data?.title;\r\n  };\r\n\r\n  const convertToArray = (arr) => {\r\n    const skillsArray = arr?.split(\",\");\r\n    return skillsArray;\r\n  };\r\n\r\n\r\n  const currentStatusCssClass = (status) => {\r\n    console.log(status, \"status\")\r\n    switch (status) {\r\n      case \"ended\":\r\n        return \"status-rejected\";\r\n      case \"Initiated\":\r\n        return \"status-progress\";\r\n      case \"completed\":\r\n        return \"status-finished\";\r\n      case \"published\":\r\n        return \"status-finished\";\r\n      case \"unpublished\":\r\n        return \"status-unpublished\";\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const returnExperienceFromScreeningQuestions = (screeningQuestions) => {\r\n    if (screeningQuestions?.length) {\r\n      const requiredElement = screeningQuestions?.find(\r\n        (curElem) =>\r\n          curElem?.question ==\r\n          \"How many years of experience do you currently have?\"\r\n      );\r\n      if (requiredElement) {\r\n        return requiredElement?.ideal_answer;\r\n      }\r\n    }\r\n  };\r\n\r\n  const suggestText = (\r\n    <Tooltip>Suggested</Tooltip>\r\n  )\r\n  const shortlistText = (\r\n    <Tooltip>Shortlisted</Tooltip>\r\n  )\r\n  const interviewText = (\r\n    <Tooltip>Interview</Tooltip>\r\n  )\r\n  const offerText = (\r\n    <Tooltip>Offers</Tooltip>\r\n  )\r\n  const hiredText = (\r\n    <Tooltip>Hired</Tooltip>\r\n  )\r\n\r\n  return (\r\n    <div className=\"job-posted-wrapper\">\r\n      {screenLoader ? <ScreenLoader /> : jobListing?.length > 0 ? (\r\n        jobListing.map((item, index) => {\r\n          return (\r\n            <>\r\n              <div className=\"job-posted-list flex-column\">\r\n                <div className=\"d-xl-flex justify-content-between align-items-start\">\r\n                  <div className=\"job-info-wrapper\">\r\n                    <div>\r\n                      <h2 className=\"job-title\">{item?.title}</h2>\r\n                      <h4 className=\"job-category\">\r\n                        {getCategory(item.category)}\r\n                      </h4>\r\n                      <div className=\"profile-req\">\r\n                        <p className={returnExperienceFromScreeningQuestions(\r\n                          item?.screening_questions\r\n                        ) ? `grid-text` : \"\"} >\r\n                          {item?.screening_questions &&\r\n                            returnExperienceFromScreeningQuestions(\r\n                              item?.screening_questions\r\n                            )}\r\n                          {returnExperienceFromScreeningQuestions(\r\n                            item?.screening_questions\r\n                          ) && \" years\"}\r\n                        </p>\r\n                        <p className=\"grid-text\">{item?.contract_type?.split(\"-\").join(\" \").replace(/^(.)|\\s+(.)/g, (c) => c.toUpperCase())}</p>\r\n                        <p className=\"grid-text\">{item?.job_type}</p>\r\n                      </div>\r\n                      <p className=\"job-description\"\r\n                        dangerouslySetInnerHTML={{\r\n                          __html: item?.description,\r\n                        }}\r\n                      ></p>\r\n                      <Row>\r\n                        <Col md=\"12\">\r\n                          <div className=\"info-grid\">\r\n                            <h4 className=\"grid-heading\">{t(\"skillsRequired\")}</h4>\r\n                            {item?.skills?.length > 0 ? <ul className=\"need-skill-list\">\r\n                              {convertToArray(item?.skills)?.map((item) => {\r\n                                return (\r\n                                  <>\r\n                                    <li>{item}</li>\r\n                                  </>\r\n                                );\r\n                              })}\r\n                            </ul> : \"Not Mentioned\"}\r\n                          </div>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n\r\n                    <div className=\"mb-3 mt-xl-0 mt-3\">\r\n                      <h4 className=\"stage-heading mb-3\">Stages</h4>\r\n                      <div className=\"stage-wrapper\">\r\n                        <OverlayTrigger placement=\"bottom\" overlay={suggestText}>\r\n                          <div className=\"stage-indicator stage-suggest gap-1\">\r\n                            <span className=\"stage-icon\"><FaUsers /></span>4</div>\r\n                        </OverlayTrigger>\r\n                        <OverlayTrigger placement=\"bottom\" overlay={shortlistText}>\r\n                          <div className=\"stage-indicator stage-shortlist gap-1\">\r\n                            <span className=\"stage-icon\"><FaClipboardUser /></span> 1\r\n                          </div>\r\n                        </OverlayTrigger>\r\n                        <OverlayTrigger placement=\"bottom\" overlay={interviewText}>\r\n                          <div className=\"stage-indicator stage-interview gap-1\">\r\n                            <span className=\"stage-icon\"> <PiChatsFill /> </span>2</div>\r\n                        </OverlayTrigger>\r\n                        <OverlayTrigger placement=\"bottom\" overlay={offerText}>\r\n                          <div className=\"stage-indicator stage-offer gap-1\">\r\n                            <span className=\"stage-icon\"> <FaHandshake /> </span> 0\r\n                          </div>\r\n                        </OverlayTrigger>\r\n                        <OverlayTrigger placement=\"bottom\" overlay={hiredText}>\r\n                          <div className=\"stage-indicator stage-hired gap-1\">\r\n                            <span className=\"stage-icon\"> <MdWorkHistory /> </span> 0\r\n                          </div>\r\n                        </OverlayTrigger>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"status-wrapper\">\r\n                    <div>\r\n                      <p\r\n                        className={`${currentStatusCssClass(\r\n                          item?.status\r\n                        )}`}\r\n                      >\r\n                        {item?.status.charAt(0).toUpperCase() + item?.status.slice(1)}\r\n                      </p>\r\n                    </div>\r\n                    <p className=\"font-15\">\r\n                      Posted Date: <strong>{item.created_at.slice(0, 10)}</strong>\r\n                    </p>\r\n                    <p className=\"font-15\">\r\n                      Response Time: <strong>15 Days</strong>\r\n                    </p>\r\n\r\n                    <Link\r\n                      to={`/admin/admin-single-job/${item?.id}`}\r\n                      className=\"px-3 mb-2 arrow-btn primary-arrow font-16 text-decoration-none\"\r\n                    >\r\n                      <FaEye />\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          );\r\n        })\r\n      ) : (\r\n         <div className=\"simple-no-data\"><NoDataFound /></div> \r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobTabs;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Col, Row, Pagination, Tabs, Tab } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaEye } from \"react-icons/fa6\";\r\nimport amazonImg from '../../assets/img/amazon.png'\r\nimport facebookImg from '../../assets/img/facebook.png'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { adminJobListing } from \"../../redux/slices/adminDataSlice\";\r\nimport { getJobCategoryList } from \"../../redux/slices/clientDataSlice\";\r\nimport JobTabs from \"../../components/atomic/JobTabs\";\r\nimport RexettPagination from \"../../components/atomic/RexettPagination\";\r\nimport ScreenLoader from \"../../components/atomic/ScreenLoader\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n\r\n\r\nconst AdminJobListing = () => {\r\n    const [page, setPage] = useState(1)\r\n    const { t } = useTranslation()\r\n    const dispatch = useDispatch()\r\n    const { jobListing, screenLoader } = useSelector(state => state.adminData)\r\n    const { jobCategoryList } = useSelector(state => state.clientData)\r\n\r\n    useEffect(() => {\r\n        dispatch(getJobCategoryList())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        dispatch(adminJobListing({page:page}))\r\n    }, [page])\r\n\r\n\r\n    const handleSelect = (key) => {\r\n        let filter = {\r\n            type: key,\r\n            page: 1\r\n        }\r\n        dispatch(adminJobListing(filter))\r\n    }\r\n\r\n    console.log(jobListing,\"jobListing\")\r\n    return (\r\n        <>\r\n\r\n            <section className=\"job-posted-section\">\r\n                <Tabs\r\n                    defaultActiveKey=\"new\"\r\n                    id=\"justify-tab-example\"\r\n                    className=\"mb-3 notification-tabs job-listing-tabs gap-md-0 gap-3\"\r\n                    onSelect={handleSelect}\r\n                >\r\n                    {/* <Tab eventKey=\"need_suggest\" title=\"Need to Suggest\">\r\n                        <JobTabs jobListing={jobListing?.data} jobCategoryList={jobCategoryList} />\r\n                    </Tab> */}\r\n                    <Tab eventKey=\"new\" title={t(\"newJobPosts\")}>\r\n                        <JobTabs jobListing={jobListing?.data} jobCategoryList={jobCategoryList} />\r\n                    </Tab>\r\n                    <Tab eventKey=\"in-progress\" title={t(\"inProgress\")}>\r\n                        <JobTabs jobListing={jobListing?.data} jobCategoryList={jobCategoryList} />\r\n                    </Tab>\r\n                    <Tab eventKey=\"in-contracts\" title={t(\"in Contract\")}>\r\n                        <JobTabs jobListing={jobListing?.data} jobCategoryList={jobCategoryList} />\r\n                    </Tab>\r\n                    <Tab eventKey=\"ended\" title={t(\"endJobs\")}>\r\n                        <JobTabs jobListing={jobListing?.data} jobCategoryList={jobCategoryList} />\r\n                    </Tab>\r\n                    <Tab eventKey=\"all\" title={t(\"all\")}>\r\n                        <JobTabs jobListing={jobListing?.data} jobCategoryList={jobCategoryList} screenLoader={screenLoader} />\r\n                    </Tab>\r\n                </Tabs>\r\n            </section>\r\n            {!screenLoader && jobListing?.totalCount > 5 ? <div className=\"d-flex flex-wrap justify-content-between align-items-center mb-4\">\r\n                <p className=\"showing-result\">{t(\"showing\")} {(jobListing?.data?.length)} {t(\"results\")}</p>\r\n                <RexettPagination number={jobListing?.totalPages} setPage={setPage} page={page} />\r\n            </div> : \"\"}\r\n        </>\r\n    )\r\n}\r\nexport default AdminJobListing;","import * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseTabs from '@restart/ui/Tabs';\nimport Nav from './Nav';\nimport NavLink from './NavLink';\nimport NavItem from './NavItem';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\nimport { forEach, map } from './ElementChildren';\nimport getTabTransitionComponent from './getTabTransitionComponent';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction getDefaultActiveKey(children) {\n  let defaultActiveKey;\n  forEach(children, child => {\n    if (defaultActiveKey == null) {\n      defaultActiveKey = child.props.eventKey;\n    }\n  });\n  return defaultActiveKey;\n}\nfunction renderTab(child) {\n  const {\n    title,\n    eventKey,\n    disabled,\n    tabClassName,\n    tabAttrs,\n    id\n  } = child.props;\n  if (title == null) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(NavItem, {\n    as: \"li\",\n    role: \"presentation\",\n    children: /*#__PURE__*/_jsx(NavLink, {\n      as: \"button\",\n      type: \"button\",\n      eventKey: eventKey,\n      disabled: disabled,\n      id: id,\n      className: tabClassName,\n      ...tabAttrs,\n      children: title\n    })\n  });\n}\nconst Tabs = props => {\n  const {\n    id,\n    onSelect,\n    transition,\n    mountOnEnter = false,\n    unmountOnExit = false,\n    variant = 'tabs',\n    children,\n    activeKey = getDefaultActiveKey(children),\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  return /*#__PURE__*/_jsxs(BaseTabs, {\n    id: id,\n    activeKey: activeKey,\n    onSelect: onSelect,\n    transition: getTabTransitionComponent(transition),\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    children: [/*#__PURE__*/_jsx(Nav, {\n      id: id,\n      ...controlledProps,\n      role: \"tablist\",\n      as: \"ul\",\n      variant: variant,\n      children: map(children, renderTab)\n    }), /*#__PURE__*/_jsx(TabContent, {\n      children: map(children, child => {\n        const childProps = {\n          ...child.props\n        };\n        delete childProps.title;\n        delete childProps.disabled;\n        delete childProps.tabClassName;\n        delete childProps.tabAttrs;\n        return /*#__PURE__*/_jsx(TabPane, {\n          ...childProps\n        });\n      })\n    })]\n  });\n};\nTabs.displayName = 'Tabs';\nexport default Tabs;"],"names":["_ref","data","_jsx","className","children","_jsxs","src","errorImg","number","setPage","page","useDispatch","handlePageChange","pageNumber","_Fragment","Pagination","Prev","onClick","disabled","renderPaginationItems","paginationItems","i","push","Item","active","Ellipsis","Math","max","min","Next","jobListing","jobCategoryList","screenLoader","t","useTranslation","getCategory","cat","find","item","id","title","currentStatusCssClass","status","console","log","returnExperienceFromScreeningQuestions","screeningQuestions","length","requiredElement","curElem","question","ideal_answer","suggestText","Tooltip","shortlistText","interviewText","offerText","hiredText","ScreenLoader","map","index","_item$contract_type","_item$skills","_convertToArray","arr","category","screening_questions","contract_type","split","join","replace","c","toUpperCase","job_type","dangerouslySetInnerHTML","__html","description","Row","Col","md","skills","OverlayTrigger","placement","overlay","FaUsers","FaClipboardUser","PiChatsFill","FaHandshake","MdWorkHistory","concat","charAt","slice","created_at","Link","to","FaEye","NoDataFound","AdminJobListing","_jobListing$data","useState","dispatch","useSelector","state","adminData","clientData","useEffect","getJobCategoryList","adminJobListing","Tabs","defaultActiveKey","onSelect","key","filter","type","Tab","eventKey","JobTabs","totalCount","RexettPagination","totalPages","getDefaultActiveKey","forEach","child","props","renderTab","tabClassName","tabAttrs","NavItem","as","role","NavLink","transition","mountOnEnter","unmountOnExit","variant","activeKey","controlledProps","useUncontrolled","BaseTabs","getTabTransitionComponent","Nav","TabContent","childProps","TabPane","displayName"],"sourceRoot":""}
{"version":3,"file":"static/js/5709.ff05352c.chunk.js","mappings":"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","sources":["components/common/EditProfile/CompanyProfile.jsx","pages/views/EditProfile.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Form } from \"react-bootstrap\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { IoIosCamera } from \"react-icons/io\";\r\nimport Autocomplete from \"react-google-autocomplete\";\r\nimport RexettButton from \"../../atomic/RexettButton\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  filePreassignedUrlGenerate,\r\n  getAllTimezones,\r\n  getClientProfile,\r\n  updateClientProfile,\r\n} from \"../../../redux/slices/clientDataSlice\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport companyLogo from \"../../../assets/img/amazon.png\";\r\nimport CommonAutocomplete from \"../../atomic/CommonAutoComplete\";\r\nimport Select from \"react-select\";\r\n\r\nconst CompanyProfile = () => {\r\n  const userId = localStorage.getItem(\"userId\");\r\n  const [logo, setLogo] = useState(null);\r\n  const {\r\n    register,\r\n    control,\r\n    setValue,\r\n    watch,\r\n    trigger,\r\n    handleSubmit,\r\n\r\n    formState: { errors, isDirty, isValid, isSubmitting },\r\n  } = useForm({});\r\n\r\n  const GOOGLE_MAP_API_KEY = process.env.REACT_APP_GOOGLE_MAP_API;\r\n\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const { smallLoader, clientProfileDetails, screenLoader, approvedLoader } =\r\n    useSelector((state) => state.clientData);\r\n\r\n  useEffect(() => {\r\n    dispatch(getClientProfile());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    setValue(\"company_address\", clientProfileDetails?.data?.company_address);\r\n    setValue(\"company_name\", clientProfileDetails?.data?.company_name);\r\n    setValue(\"company_tax_id\", clientProfileDetails?.data?.company_tax_id);\r\n    setValue(\"company_type\", clientProfileDetails?.data?.company_type);\r\n    if (clientProfileDetails?.data?.company_logo) {\r\n      setLogo(clientProfileDetails?.data?.company_logo);\r\n    }\r\n  }, [clientProfileDetails]);\r\n\r\n  // const onSubmit = (values) => {\r\n  //   localStorage.setItem(\"newUserName\", values?.name);\r\n  //   console.log(values, \"values o\");\r\n  //   let formData = {\r\n  //     ...values,\r\n  //     password: values?.password ? values.password : null,\r\n  //     previous_password: values?.previous_password\r\n  //       ? values.previous_password\r\n  //       : null,\r\n  //     client_type: \"individual\",\r\n  //   };\r\n  //   dispatch(updateClientProfile(formData), () => {\r\n  //     dispatch(getClientProfile());\r\n  //   });\r\n  // };\r\n  // const handleJobStatusModal = () => {\r\n  //   setStatus(!status);\r\n  //   setShowModal(false);\r\n  // };\r\n\r\n  // const validatePassword = (value) => {\r\n  //   if (value === \"\") {\r\n  //     return true;\r\n  //   } else {\r\n  //     const pattern = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\r\n  //     if (!pattern.test(value)) {\r\n  //       return \"Password must contain at least a symbol, upper and lower case letters and a number\";\r\n  //     }\r\n  //   }\r\n  //   return true;\r\n  // };\r\n  const onSubmit = (values) => {\r\n    const clientProfileDetails = watch();\r\n    const payload = {\r\n      ...values,\r\n      // ...clientProfileDetails,\r\n      password: clientProfileDetails.password\r\n        ? clientProfileDetails.password\r\n        : null,\r\n      previous_password: clientProfileDetails.previous_password\r\n        ? clientProfileDetails.previous_password\r\n        : null,\r\n      client_type: \"company\",\r\n    };\r\n    if (values?.company_logo.name !== undefined) {\r\n      let fileData = new FormData();\r\n      fileData.append(\"file\", values?.company_logo);\r\n      dispatch(\r\n        filePreassignedUrlGenerate(fileData, (url) => {\r\n          let data = {\r\n            ...payload,\r\n            company_logo: url,\r\n            user_id: userId,\r\n          };\r\n          dispatch(updateClientProfile(data));\r\n        })\r\n      );\r\n    } else {\r\n      let data = {\r\n        ...payload,\r\n        company_logo: logo,\r\n        user_id: userId,\r\n      };\r\n      dispatch(updateClientProfile(data));\r\n    }\r\n  };\r\n  const handleCompanyLogo = (e) => {\r\n    const file = e?.target?.files?.[0];\r\n    const allowedTypes = [\"image/jpeg\", \"image/png\", \"image/jpg\", \"image/svg\"];\r\n    if (file) {\r\n      if (allowedTypes.includes(file.type)) {\r\n        const fileUrl = URL.createObjectURL(file);\r\n        setValue(\"company_logo\", file);\r\n        setLogo(fileUrl);\r\n      } else {\r\n        // clearErrors(\"company_logo\", {\r\n        //   type: \"manual\",\r\n        //   message:\r\n        //     \"Please select a valid image file i.e (.png,.jpg,.svg or jpeg)\",\r\n        // });\r\n        setValue(\"company_logo\", null);\r\n        setLogo(null);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit(onSubmit)} noValidate>\r\n        <Row>\r\n          <Col md={12}>\r\n            <Form.Group className=\"mb-4\">\r\n              <Form.Label className=\"common-label\">Company Logo</Form.Label>\r\n              <Form.Control\r\n                {...register(\"company_logo\", {\r\n                  onChange: (e) => handleCompanyLogo(e),\r\n                })}\r\n                type=\"file\"\r\n                id=\"company_logo_file\"\r\n                placeholder=\"Company Name\"\r\n                className=\"common-field d-none\"\r\n              />\r\n              <div className=\"file_shown\">\r\n                <img src={logo ? logo : companyLogo} alt=\"Company Logo\" />\r\n                <Form.Label\r\n                  htmlFor=\"company_logo_file\"\r\n                  className=\"camera-btn mb-0\"\r\n                >\r\n                  <IoIosCamera />\r\n                </Form.Label>\r\n              </div>\r\n              {errors?.company_logo && (\r\n                <p className=\"error-message\">{errors.company_logo?.message}</p>\r\n              )}\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={6}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label className=\"common-label\">Company Name*</Form.Label>\r\n              <Form.Control\r\n                {...register(\"company_name\", {\r\n                  required: \"Company name is required\",\r\n                })}\r\n                type=\"text\"\r\n                placeholder=\"Company Name\"\r\n                className=\"common-field\"\r\n              />\r\n              {errors?.company_name && (\r\n                <p className=\"error-message\">{errors.company_name?.message}</p>\r\n              )}\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={6}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label className=\"common-label\">Type of Company*</Form.Label>\r\n              <Form.Select\r\n                {...register(\"company_type\", {\r\n                  required: \"Company type is required\",\r\n                })}\r\n                className=\"common-field\"\r\n              >\r\n                <option disabled selected value=\"\">\r\n                  Please select company type\r\n                </option>\r\n                <option value=\"sole_partnership\">Sole Partnership</option>\r\n                <option value=\"partnership\">Partnership</option>\r\n                <option value=\"limited_liability_company(LLC)\">\r\n                  Limited Liability Company(LLC)\r\n                </option>\r\n                <option value=\"corporation\">Corporation</option>\r\n                <option value=\"nonprofit_organization\">\r\n                  Nonprofit Organization\r\n                </option>\r\n                <option value=\"cooperative\">Cooperative</option>\r\n                <option value=\"franchise\">Franchise</option>\r\n                <option value=\"joint_venture\">Joint Venture</option>\r\n              </Form.Select>\r\n              {errors?.company_type && (\r\n                <p className=\"error-message\">{errors.company_type?.message}</p>\r\n              )}\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={6}>\r\n            <Form.Group className=\"mb-3\">\r\n              <CommonAutocomplete\r\n                label={t(\"Company Address\") + \" *\"}\r\n                name=\"company_address\"\r\n                control={control}\r\n                rules={{ required: \"Company Address is required\" }}\r\n                error={errors.company_address}\r\n                apiKey={GOOGLE_MAP_API_KEY}\r\n                onPlaceSelected={(place) => {\r\n                  setValue(\"company_address\", place.formatted_address);\r\n                }}\r\n                onChange={(e) => {\r\n                  setValue(\"company_address\", e.target.value);\r\n                }}\r\n                options={{ types: [\"establishment\", \"geocode\"] }}\r\n              />\r\n              {/* {errors?.company_address && (\r\n                <p className=\"error-message\">\r\n                  {errors.company_address?.message}\r\n                </p>\r\n              )} */}\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={6}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label className=\"common-label\">Tax ID*</Form.Label>\r\n              <Form.Control\r\n                {...register(\"company_tax_id\", {\r\n                  required: \"Company tax id is required\",\r\n                })}\r\n                name=\"company_tax_id\"\r\n                type=\"text\"\r\n                placeholder=\"Tax Id\"\r\n                className=\"common-field\"\r\n              />\r\n              {errors?.company_tax_id && (\r\n                <p className=\"error-message\">\r\n                  {errors.company_tax_id?.message}\r\n                </p>\r\n              )}\r\n            </Form.Group>\r\n          </Col>\r\n          <div className=\"text-center\">\r\n              <RexettButton\r\n                type=\"submit\"\r\n                text={t(\"updateProfile\")}\r\n                className=\"main-btn px-5 mt-4\"\r\n                variant=\"transparent\"\r\n                disabled={smallLoader}\r\n                isLoading={smallLoader}\r\n              />\r\n            </div>\r\n        </Row>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyProfile;\r\n","import React from \"react\";\r\nimport { Nav, Tab } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport AllRoleEditProfile from \"../../components/common/EditProfile/AllRoleEditProfile\";\r\nimport ProfileWrapper from \"../../components/common/EditProfile/ProfileWrapper\";\r\nimport CompanyProfile from \"../../components/common/EditProfile/CompanyProfile\";\r\n\r\nconst EditProfile = () => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <>\r\n      <ProfileWrapper>\r\n        <section>\r\n          <Tab.Container\r\n            id=\"left-tabs-example\"\r\n            defaultActiveKey=\"personal_details\"\r\n          >\r\n            <Nav variant=\"pills\" className=\"mb-4 application-pills\">\r\n              <Nav.Item className=\"application-item\">\r\n                <Nav.Link\r\n                  className=\"application-link\"\r\n                  eventKey=\"personal_details\"\r\n                >\r\n                  Personal Details\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item className=\"application-item\">\r\n                <Nav.Link\r\n                  className=\"application-link\"\r\n                  eventKey=\"company_details\"\r\n                >\r\n                  Company Details\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey=\"personal_details\">\r\n              <AllRoleEditProfile role=\"client\" />\r\n              </Tab.Pane>\r\n\r\n              <Tab.Pane eventKey=\"company_details\">\r\n              <CompanyProfile role=\"client\"/>\r\n              </Tab.Pane>\r\n           \r\n            </Tab.Content> \r\n          </Tab.Container>\r\n        </section>\r\n      </ProfileWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n"],"names":["CompanyProfile","_errors$company_logo","_errors$company_name","_errors$company_type","_errors$company_tax_i","userId","localStorage","getItem","logo","setLogo","useState","register","control","setValue","watch","trigger","handleSubmit","formState","errors","isDirty","isValid","isSubmitting","useForm","dispatch","useDispatch","t","useTranslation","smallLoader","clientProfileDetails","screenLoader","approvedLoader","useSelector","state","clientData","useEffect","getClientProfile","_clientProfileDetails","_clientProfileDetails2","_clientProfileDetails3","_clientProfileDetails4","_clientProfileDetails5","_clientProfileDetails6","data","company_address","company_name","company_tax_id","company_type","company_logo","_jsx","children","onSubmit","values","payload","password","previous_password","client_type","undefined","name","fileData","FormData","append","filePreassignedUrlGenerate","url","user_id","updateClientProfile","noValidate","_jsxs","Row","Col","md","Form","Group","className","Label","Control","onChange","e","_e$target","_e$target$files","file","target","files","includes","type","fileUrl","URL","createObjectURL","handleCompanyLogo","id","placeholder","src","companyLogo","alt","htmlFor","IoIosCamera","message","required","Select","disabled","selected","value","CommonAutocomplete","label","rules","error","apiKey","process","onPlaceSelected","place","formatted_address","options","types","RexettButton","text","variant","isLoading","EditProfile","_Fragment","ProfileWrapper","Tab","Container","defaultActiveKey","Nav","Item","Link","eventKey","Content","Pane","AllRoleEditProfile","role"],"sourceRoot":""}
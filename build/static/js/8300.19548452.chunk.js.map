{"version":3,"file":"static/js/8300.19548452.chunk.js","mappings":"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","sources":["components/atomic/NotificationList.jsx","pages/admin/NotificationAdmin.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button, Tab, Tabs } from \"react-bootstrap\";\r\nimport { FaBell } from \"react-icons/fa6\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ScreenLoader from \"./ScreenLoader\";\r\nimport { getNotification, markAsRead } from \"../../redux/slices/adminDataSlice\";\r\nimport NoDataFound from \"../atomic/NoDataFound\"\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { timeReporting } from \"../../redux/slices/clientDataSlice\";\r\nimport RexettPagination from \"./RexettPagination\";\r\n\r\n\r\nconst NotificationList = ({ job, doc }) => {\r\n  const [page, setPage] = useState(1);\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n  const [currenTab, setCurrentTabs] = useState('allNotifications')\r\n  const [nottificationData, setNotificationData] = useState([])\r\n  const { notificationList, screenLoader } = useSelector((state) => state.adminData);\r\n  const { t } = useTranslation() \r\n\r\n  useEffect(() => {\r\n    setNotificationData(notificationList[currenTab])\r\n  }, [notificationList, currenTab])\r\n\r\n  useEffect(() => {\r\n    let data={\r\n      page:page\r\n    }\r\n    \r\n    dispatch(getNotification(data));\r\n  }, [page]);\r\n\r\n  const handleNotification = (notificationId, id, data) => {\r\n    dispatch(markAsRead(notificationId, () => {\r\n      let data={\r\n        page:page\r\n      }\r\n      dispatch(getNotification(data));\r\n    }))\r\n    if (data == \"Documents\") {\r\n      navigate(`/${doc}`);\r\n    } else if (data == \"Jobs\") {\r\n      navigate(`/${job}/${id}`);\r\n    } else if (data == \"Time_reports\") {\r\n      navigate(`/${timeReporting}`);\r\n    } else if (data == \"Users\") {\r\n      navigate(`/admin-single-developer/${id}`);\r\n    }\r\n  };\r\n\r\n  const handleSelect = (key) => {\r\n    setNotificationData(notificationList[key])\r\n  }\r\n\r\n  const newTitleFunction = (data) => {\r\n    const today = new Date();\r\n    const targetDate = new Date(data);\r\n    if (targetDate > today) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  // const markAllAsRead = () => {\r\n  //   dispatch(markAsRead(undefined, () => {\r\n\r\n  //   }))\r\n  // }\r\n  return (\r\n    <>\r\n      {screenLoader ? <ScreenLoader /> : <section className=\"notification-screen card-box\">\r\n        <div className=\"d-flex justify-content-between align-items-start\">\r\n          <div>\r\n            <h2 className=\"overview-card-heading fw-bold\">{t(\"notification\")}</h2>\r\n            {/* {notificationList['unreadNotifications']?.length > 0 ? <p className=\"notification-text\">{`You've ${notificationList['unreadNotifications']?.length} unread notifications`}</p> : \"\"} */}\r\n          </div>\r\n          {/* <Button variant=\"transparent\" className=\"mark-read-btn\" onClick={markAllAsRead}>\r\n            Mark all as read\r\n          </Button> */}\r\n        </div>\r\n        <Tabs\r\n          defaultActiveKey=\"allNotifications\"\r\n          id=\"justify-tab-example\"\r\n          className=\"mb-3 notification-tabs notify-tabs\"\r\n          justify\r\n          onSelect={handleSelect}\r\n        >\r\n          <Tab eventKey=\"allNotifications\" title=\"All\">\r\n            <div className=\"notification-main pt-4 d-block\">\r\n              <div className=\"notification-list\">\r\n                {nottificationData?.notifications?.length > 0 ? nottificationData?.notifications.map((item) => {\r\n                  return (\r\n                    <>\r\n                      <div className=\"notification-wrapper\" onClick={() => handleNotification(item?.id, item?.reference_id, item?.reference_model)}>\r\n                        <span className=\"bell-icon\">\r\n                          <FaBell />\r\n                        </span>\r\n                        <div className=\"d-flex gap-4 justify-content-between w-100\">\r\n                          <div>\r\n                            <h3 className=\"notification-heading\">\r\n                              {item?.title}\r\n                              {newTitleFunction(item?.created_at) && <span className=\"new-notify\">{t(\"new\")}</span>}\r\n                            </h3>\r\n                            <p className=\"notification-text\">\r\n                              {\r\n                                item?.message\r\n                              }\r\n                            </p>\r\n                          </div>\r\n                          <div className=\"notify-recieve\">\r\n                            <span className=\"notify-date\">{item?.created_at.slice(0, 10)}</span>\r\n                            {/* <span className=\"notify-time\">Just Now</span> */}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  );\r\n                }) : <NoDataFound />}\r\n              </div>\r\n            </div>\r\n          </Tab>\r\n          <Tab eventKey=\"readNotifications\" title=\"Read\">\r\n            <div className=\"notification-main pt-4 d-block\">\r\n              <div className=\"notification-list\">\r\n                {nottificationData?.notifications?.map((item) => {\r\n                  return (\r\n                    <>\r\n                      <div className=\"notification-wrapper\" onClick={() => handleNotification(item?.id, item?.reference_id, item?.reference_model)}>\r\n                        <span className=\"bell-icon\">\r\n                          <FaBell />\r\n                        </span>\r\n                        <div className=\"d-flex gap-4 w-100 justify-content-between\">\r\n                          <div>\r\n                            <h3 className=\"notification-heading\">\r\n                              {item?.title}\r\n                              {newTitleFunction(item?.created_at) && <span className=\"new-notify\">{t(\"new\")}</span>}\r\n                            </h3>\r\n                            <p className=\"notification-text\">\r\n                              {\r\n                                item?.message\r\n                              }\r\n                            </p>\r\n                          </div>\r\n                          <div className=\"notify-recieve\">\r\n                            <span className=\"notify-date\">{item?.created_at.slice(0, 10)}</span>\r\n                            {/* <span className=\"notify-time\">Just Now</span> */}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </Tab>\r\n          <Tab eventKey=\"unreadNotifications\" title=\"New\">\r\n            <div className=\"notification-main pt-4 d-block\">\r\n              <div className=\"notification-list\">\r\n                {nottificationData?.notifications?.map((item) => {\r\n                  return (\r\n                    <>\r\n                      <div className=\"notification-wrapper\" onClick={() => handleNotification(item?.id, item?.reference_id, item?.reference_model)}>\r\n                        <span className=\"bell-icon\">\r\n                          <FaBell />\r\n                        </span>\r\n                        <div className=\"d-flex gap-4 w-100 justify-content-between\">\r\n                          <div>\r\n                            <h3 className=\"notification-heading\">\r\n                              {item?.title}\r\n                              {newTitleFunction(item?.created_at) && <span className=\"new-notify\">{t(\"new\")}</span>}\r\n                            </h3>\r\n                            <p className=\"notification-text\">\r\n                              {\r\n                                item?.message\r\n                              }\r\n                            </p>\r\n                          </div>\r\n                          <div className=\"notify-recieve\">\r\n                            <span className=\"notify-date\">{item?.created_at.slice(0, 10)}</span>\r\n                            {/* <span className=\"notify-time\">Just Now</span> */}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </Tab>\r\n        </Tabs>\r\n        {nottificationData?.pagination?.totalCount > 5 ? (\r\n                <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                  <p className=\"showing-result\">\r\n                    {t(\"showing\")} {nottificationData?.pagination?.length} {t(\"results\")}\r\n                  </p>\r\n                  <RexettPagination\r\n                    number={nottificationData?.pagination?.totalPages}\r\n                    setPage={setPage}\r\n                    page={page}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n      </section>}\r\n    </>\r\n  );\r\n};\r\nexport default NotificationList;\r\n","import React from 'react'\r\nimport NotificationList from '../../components/atomic/NotificationList'\r\n\r\nconst NotificationAdmin = () => {\r\n  return (\r\n   <NotificationList  job=\"admin-single-job\" doc=\"admin-documents\"/>\r\n  )\r\n}\r\n\r\nexport default NotificationAdmin"],"names":["_ref","_nottificationData$no","_nottificationData$no2","_nottificationData$no3","_nottificationData$pa","_nottificationData$pa2","_nottificationData$pa3","job","doc","page","setPage","useState","navigate","useNavigate","dispatch","useDispatch","currenTab","setCurrentTabs","nottificationData","setNotificationData","notificationList","screenLoader","useSelector","state","adminData","t","useTranslation","useEffect","data","getNotification","handleNotification","notificationId","id","markAsRead","concat","timeReporting","newTitleFunction","today","Date","_jsx","_Fragment","children","ScreenLoader","_jsxs","className","Tabs","defaultActiveKey","justify","onSelect","key","Tab","eventKey","title","notifications","length","map","item","onClick","reference_id","reference_model","FaBell","created_at","message","slice","NoDataFound","pagination","totalCount","RexettPagination","number","totalPages","NotificationAdmin","NotificationList"],"sourceRoot":""}
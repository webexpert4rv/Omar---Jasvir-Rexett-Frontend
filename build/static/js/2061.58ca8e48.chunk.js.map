{"version":3,"file":"static/js/2061.58ca8e48.chunk.js","mappings":"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","sources":["components/atomic/NoDataFound.jsx","components/atomic/RexettPagination.jsx","components/clients/TimeReporiting/MemoWithTimeReport.jsx","components/clients/TimeReporiting/SingleTimeReporting.jsx","assets/img/remarks-icon.svg","components/clients/TimeReporiting/ReconcialiationModal.jsx","components/clients/TimeReporiting/TimeReportRemark.jsx","components/clients/TimeReporiting/RexettTable.jsx","components/clients/TimeReporiting/RexettTimeReporting.jsx","components/common/Guidelines/Guidelines.jsx","pages/views/Modals/ConfirmationModal.jsx","../node_modules/@restart/hooks/esm/useMediaQuery.js","../node_modules/@restart/hooks/esm/useBreakpoint.js","../node_modules/react-bootstrap/esm/OffcanvasBody.js","../node_modules/react-bootstrap/esm/OffcanvasToggling.js","../node_modules/react-bootstrap/esm/OffcanvasHeader.js","../node_modules/react-bootstrap/esm/OffcanvasTitle.js","../node_modules/react-bootstrap/esm/Offcanvas.js"],"sourcesContent":["import React from 'react'\r\nimport errorImg from '../../assets/img/warning-icon.gif'\r\nconst NoDataFound = ({data}) => {\r\n  return (\r\n    <div className='no-data-container'>\r\n      <div className='no-data'>\r\n        <img src={errorImg} />{data?data:\"No Data Found\"}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NoDataFound","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ResponsivePagination from 'react-responsive-pagination';\r\nimport 'react-responsive-pagination/themes/classic.css';\r\nimport { adminJobListing } from \"../../redux/slices/adminDataSlice\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\nconst RexettPagination = ({ number, setPage, page }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    setPage(pageNumber);\r\n  };\r\n\r\n  const renderPaginationItems = () => {\r\n    const paginationItems = [];\r\n\r\n    if (number <= 6) {\r\n      // If total number of pages is 6 or less, render all pages\r\n      for (let i = 1; i <= number; i++) {\r\n        paginationItems.push(\r\n          <Pagination.Item\r\n            key={i}\r\n            className=\"custom-pagination-item\"\r\n            active={i === page}\r\n            onClick={() => handlePageChange(i)}\r\n          >\r\n            {i}\r\n          </Pagination.Item>\r\n        );\r\n      }\r\n    } else {\r\n      // If total number of pages is greater than 6, render first 3 pages, last 3 pages, and dots\r\n      paginationItems.push(\r\n        <Pagination.Item\r\n          key={1}\r\n          className=\"custom-pagination-item\"\r\n          active={1 === page}\r\n          onClick={() => handlePageChange(1)}\r\n        >\r\n          {1}\r\n        </Pagination.Item>\r\n      );\r\n\r\n      if (page > 4) {\r\n        paginationItems.push(\r\n          <Pagination.Ellipsis key=\"start-dots\" disabled />\r\n        );\r\n      }\r\n\r\n      for (let i = Math.max(2, page - 1); i <= Math.min(page + 1, number - 1); i++) {\r\n        paginationItems.push(\r\n          <Pagination.Item\r\n            key={i}\r\n            className=\"custom-pagination-item\"\r\n            active={i === page}\r\n            onClick={() => handlePageChange(i)}\r\n          >\r\n            {i}\r\n          </Pagination.Item>\r\n        );\r\n      }\r\n\r\n      if (page < number - 3) {\r\n        paginationItems.push(\r\n          <Pagination.Ellipsis key=\"end-dots\" disabled />\r\n        );\r\n      }\r\n\r\n      paginationItems.push(\r\n        <Pagination.Item\r\n          key={number}\r\n          className=\"custom-pagination-item\"\r\n          active={number === page}\r\n          onClick={() => handlePageChange(number)}\r\n        >\r\n          {number}\r\n        </Pagination.Item>\r\n      );\r\n    }\r\n\r\n    return paginationItems;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Pagination className=\"pagination flex-wrap\">\r\n        <Pagination.Prev\r\n          className=\"pagination-arrow custom-pagination-item me-1\"\r\n          onClick={() => handlePageChange(page - 1)}\r\n          disabled={page === 1}\r\n        />\r\n        <div className=\"pages-link flex-wrap\">\r\n          {renderPaginationItems()}\r\n        </div>\r\n        <Pagination.Next\r\n          className=\"pagination-arrow next-arrow ms-1 custom-pagination-item\"\r\n          onClick={() => handlePageChange(page + 1)}\r\n          disabled={page === number}\r\n        />\r\n      </Pagination>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RexettPagination;\r\n","import React from 'react'\r\nimport userImage from \"../../../assets/img/user-img.jpg\"\r\nimport { FiCalendar } from \"react-icons/fi\";\r\nimport { FaRegClock } from \"react-icons/fa6\";\r\nimport moment from 'moment';\r\nconst MemoWithTimeReport = ({item}) => {\r\n    let {end_time,start_time,memo,report_date}=item\r\n  return (\r\n    <div className='weekly-detail mb-3 p-3'>\r\n        <div className='client-info mb-3 gap-5'>\r\n            <div className='mb-2'>\r\n                <p className='client-name-heading d-flex gap-1 align-items-center'><FiCalendar />{report_date}</p>\r\n            </div>\r\n            <div className='d-flex gap-4 justify-content-between'>\r\n                <div className='d-flex gap-3 align-items-center'>\r\n                    <p className='client-name-heading d-flex gap-1 align-items-center'><FaRegClock />{start_time? moment(start_time, 'HH:mm:ss').format('h:mm:ss A'):\"00:00\"}</p>\r\n                    <p className='client-name-heading'>-</p>\r\n                    <p className='client-name-heading d-flex gap-1 align-items-center'><FaRegClock />{end_time? moment(end_time, 'HH:mm:ss').format('h:mm:ss A'):\"00:00\"}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className='client-info'>\r\n            <h4 className='sidebar-heading'>Memo</h4>\r\n            <p className='client-name-heading'>{memo?memo:\"Memo not Found\"}</p>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MemoWithTimeReport","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { FiCalendar } from \"react-icons/fi\";\r\nimport { FaRegClock } from \"react-icons/fa6\";\r\nimport moment from \"moment\";\r\nimport MemoWithTimeReport from \"./MemoWithTimeReport\";\r\nimport { Nav, Tab } from \"react-bootstrap\";\r\n\r\nconst SingleTimeReporting = ({ currentDetails, selectedPeriod, role }) => {\r\n  const [updateWeeklyData, setUpdateWeeklyData] = useState();\r\n  let {\r\n    contractDetails: { user_details },\r\n    endDate,\r\n    startDate,\r\n    timeReports: {\r\n      end_time,\r\n      start_time,\r\n      memo,\r\n      weeklyDetails,\r\n      monthlyDetails,\r\n      report_date,\r\n      week,\r\n      month,\r\n    },\r\n    totalDuration,\r\n  } = currentDetails;\r\n\r\n  useEffect(() => {\r\n    if (weeklyDetails !== undefined) {\r\n      setUpdateWeeklyData(weeklyDetails);\r\n    } else if (monthlyDetails !== undefined) {\r\n      setUpdateWeeklyData(monthlyDetails[0]?.weeklyDetails);\r\n    }\r\n  }, []);\r\n\r\n  const selectCurrentTab = (select) => {\r\n    let montData = monthlyDetails?.find((item) => item.week == select);\r\n    setUpdateWeeklyData(montData?.weeklyDetails);\r\n  };\r\n\r\n  console.log(currentDetails,\"weeklyDetails\")\r\n  console.log(month,\"role\")\r\n  return (\r\n    <>\r\n      {selectedPeriod == \"weekly\" ? (\r\n        <div className=\"detail-view day-view\">\r\n          <div className=\"client-info mb-3\">\r\n            <h4 className=\"sidebar-heading\">\r\n              {role !== \"developer\" ? \"Developer Name\" : \"Client Name\"}\r\n            </h4>\r\n            <p className=\"client-name-heading\">\r\n              <img src={user_details?.profile_picture} />\r\n              {user_details?.name}\r\n            </p>\r\n          </div>\r\n          <div className=\"client-info mb-3 d-`flex gap-5\">\r\n            <div className=\"mb-0\">\r\n              <p className=\"client-name-heading d-flex gap-1 align-items-center mb-2\">\r\n                <FiCalendar />\r\n                {report_date}\r\n              </p>\r\n            </div>\r\n            <div className=\"d-flex gap-4 justify-content-between\">\r\n              <div className=\"d-flex gap-3 align-items-center\">\r\n                <p className=\"client-name-heading d-flex gap-1 align-items-center\">\r\n                  <FaRegClock />\r\n                  {start_time\r\n                    ? moment(start_time, \"HH:mm\").format(\"h:mm A\")\r\n                    : \"00:00\"}\r\n                </p>\r\n                <p className=\"client-name-heading\">-</p>\r\n                <p className=\"client-name-heading d-flex gap-1 align-items-center\">\r\n                  <FaRegClock />\r\n                  {start_time\r\n                    ? moment(end_time, \"HH:mm\").format(\"h:mm A\")\r\n                    : \"00:00\"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"weekly-detail\">\r\n            <div className=\"client-info\">\r\n              <h4 className=\"sidebar-heading\">Memo</h4>\r\n              <p className=\"client-name-heading\">\r\n                {memo ? memo : \"Memo not found\"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {selectedPeriod == \"monthly\" ? (\r\n        <div className=\"detail-view weekly-view\">\r\n          <div className=\"client-info mb-3\">\r\n          {role !== \"developer\" ? \"Developer Name\" : \"Client Name\"}\r\n            <p className=\"client-name-heading\">\r\n              <img src={user_details?.profile_picture} />\r\n              {user_details?.name}\r\n            </p>\r\n          </div>\r\n          {selectedPeriod == \"monthly\" ? (\r\n            <div className=\"client-info mb-3 gap-5 d-flex align-items-center\">\r\n              <div className=\"mb-0\">\r\n                <p className=\"client-name-heading d-flex gap-1 align-items-center\">\r\n                  <FiCalendar />\r\n                  {week} {report_date}\r\n                </p>\r\n              </div>\r\n              <div className=\"d-flex gap-4 justify-content-between\">\r\n                <div className=\"d-flex gap-3 align-items-center\">\r\n                  <p className=\"client-name-heading d-flex gap-1 align-items-center fw-semibold\">\r\n                    <FaRegClock /> {totalDuration} hrs\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <span className=\"status-progress\">Progress</span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {updateWeeklyData?.map((item, index) => {\r\n            return (\r\n              <>\r\n                <MemoWithTimeReport item={item} />\r\n              </>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {selectedPeriod == \"yearly\" ? (\r\n        <div className=\"detail-view monthly-view\">\r\n          <div className=\"client-info mb-3\">\r\n          {role !== \"developer\" ? \"Developer Name\" : \"Client Name\"}\r\n            <p className=\"client-name-heading\">\r\n              <img src={user_details?.profile_picture} />\r\n              {user_details?.name}\r\n            </p>\r\n          </div>\r\n          <div className=\"client-info mb-3 gap-5 d-flex align-items-center\">\r\n            <div className=\"mb-0\">\r\n              <p className=\"client-name-heading d-flex gap-1 align-items-center\">\r\n                <FiCalendar />\r\n                {month} {report_date}\r\n              </p>\r\n            </div>\r\n            <div className=\"d-flex gap-4 justify-content-between\">\r\n              <div className=\"d-flex gap-3 align-items-center\">\r\n                <p className=\"client-name-heading d-flex gap-1 align-items-center fw-semibold\">\r\n                  <FaRegClock /> {totalDuration.toFixed(\"2\")} hrs\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <span className=\"status-progress\">Progress</span>\r\n            </div>\r\n          </div>\r\n          <Tab.Container\r\n            id=\"left-tabs-example\"\r\n            defaultActiveKey=\"Week 1\"\r\n            onSelect={selectCurrentTab}\r\n          >\r\n            <Nav variant=\"pills\" className=\"weekly-tabs\">\r\n              <Nav.Item className=\"weekly-tab-item\">\r\n                <Nav.Link className=\"weekly-tab-link\" eventKey=\"Week 1\">\r\n                  Week 1\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item className=\"weekly-tab-item\">\r\n                <Nav.Link className=\"weekly-tab-link\" eventKey=\"Week 2\">\r\n                  Week 2\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item className=\"weekly-tab-item\">\r\n                <Nav.Link className=\"weekly-tab-link\" eventKey=\"Week 3\">\r\n                  Week 3\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item className=\"weekly-tab-item\">\r\n                <Nav.Link className=\"weekly-tab-link\" eventKey=\"Week 4\">\r\n                  Week 4\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey=\"Week 1\">\r\n                {updateWeeklyData?.map((item, index) => {\r\n                  return (\r\n                    <>\r\n                      <MemoWithTimeReport item={item} />\r\n                    </>\r\n                  );\r\n                })}\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"Week 2\">\r\n                {updateWeeklyData?.map((item, index) => {\r\n                  return (\r\n                    <>\r\n                      <MemoWithTimeReport item={item} />\r\n                    </>\r\n                  );\r\n                })}\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"Week 3\">\r\n                {updateWeeklyData?.map((item, index) => {\r\n                  return (\r\n                    <>\r\n                      <MemoWithTimeReport item={item} />\r\n                    </>\r\n                  );\r\n                })}\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"Week 4\">\r\n                {updateWeeklyData?.map((item, index) => {\r\n                  return (\r\n                    <>\r\n                      <MemoWithTimeReport item={item} />\r\n                    </>\r\n                  );\r\n                })}\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n          </Tab.Container>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleTimeReporting;\r\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgRemarksIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: \"svg-icon\",\n    style: {\n      width: \"1em\",\n      height: \"1em\",\n      verticalAlign: \"middle\",\n      fill: \"currentColor\",\n      overflow: \"hidden\"\n    },\n    viewBox: \"0 0 1024 1024\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M614.46116693 910.64456533c-1.62747733 3.43517867-5.12273067 6.30784-10.387456 8.03362134l-70.02740053 22.8458496c-12.57198933 4.09053867-19.34513493-2.52859733-15.187968-14.8504576l23.35921493-68.4654592c1.753088-5.18280533 4.74043733-8.585216 8.26299734-10.19630934l220.8366592-215.89415253 64.0253952 62.59452587L614.46116693 910.64456533z m-163.75261866-28.2198016l320.602112-313.442304V291.864576H611.3099776c-35.3468416-0.01092267-64.00354987-28.0231936-64.0090112-62.57814187V68.91984213H223.29535147c-50.8526592 0-92.05951147 40.28388693-92.05951147 89.97328214v653.11648426c0 18.67885227 7.602176 36.5920256 21.10368427 49.79316054 13.51133867 13.21096533 31.82974293 20.62854827 50.92911786 20.62308693h247.43990614z m165.37463466-801.72373333l143.20162134 140.00018773c20.3227136 19.85850027 13.46218667 35.95851093-15.220736 35.95851094h-112.787456c-28.70586027-0.01092267-51.98861653-22.7475456-52.01046187-50.8035072V95.6104704c0-28.08326827 16.48339627-34.71878827 36.77771093-14.87121067l0.0393216-0.03822933z m-356.82932053 332.40951467c0.01092267-17.28075093 14.336-31.2836096 32.00996693-31.2999936h320.045056c17.67396693 0.02184533 31.98266027 14.01924267 31.9881216 31.2999936-0.016384 17.26436693-14.32507733 31.26176427-31.9881216 31.27814826H291.27038293c-17.6685056-0.01092267-31.9881216-14.00832-32.01652053-31.27814826z m0 125.13989973c0.02730667-17.26982827 14.34692267-31.25630293 32.00996693-31.27268693h320.045056c17.66304427 0.016384 31.9717376 14.01378133 31.9881216 31.27268693-0.00546133 17.28075093-14.32507733 31.27814827-31.9881216 31.29453227H291.27038293c-17.6685056-0.01092267-32.0045056-14.00285867-32.01652053-31.29453227z m526.72047787 80.8091648l37.0180096-36.17150293c9.355264-9.158656 24.52794027-9.17504 33.91051093-0.049152l31.94989227 31.2180736c9.33888 9.17504 9.322496 24.01457493-0.049152 33.17323093l-37.0180096 36.20973227-65.7948672-64.3694592-0.016384-0.01092267z m0 0\",\n    fill: \"#037563\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgRemarksIcon);\nexport default __webpack_public_path__ + \"static/media/remarks-icon.e8394e1d1b0ac59ef737ba64dad11d00.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from \"react\";\r\nimport userImage from \"../../../assets/img/user-img.jpg\";\r\nimport { FiCalendar } from \"react-icons/fi\";\r\nimport { FaRegClock } from \"react-icons/fa6\";\r\nimport moment from \"moment\";\r\nimport { TiEdit } from \"react-icons/ti\";\r\nimport { Button, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { IoCheckmark, IoCloseOutline } from \"react-icons/io5\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { approveTimeReportReconciliation, rejectTimeReportReconciliation, timeReporting } from \"../../../redux/slices/clientDataSlice\";\r\n\r\nconst approveRemark = <Tooltip id=\"tooltip\">Approve</Tooltip>;\r\nconst rejectRemark = <Tooltip id=\"tooltip\">Reject</Tooltip>;\r\nconst ReconciliationModal = ({\r\n  item,\r\n  role,\r\n  index,\r\n  handleChangeUpdateWeeklyData,\r\n  selectedPeriod,\r\n  page\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const [editDetails, setEditDetails] = useState({\r\n    editItem: null,\r\n    isEdit: false,\r\n  });\r\n  const [reconciliationData, setReconcilitationData] = useState([]);\r\n  let { end_time, start_time, memo, report_date, id, contract_id } = item;\r\n  const handleEdit = (editData) => {\r\n    setEditDetails({\r\n      editItem: null,\r\n      isEdit: !editDetails?.isEdit,\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    setReconcilitationData([\r\n      {\r\n        ...item,\r\n        id: index,\r\n      },\r\n    ]);\r\n  }, []);\r\n\r\n\r\n  const approvedReject = async (currentStatus) => {\r\n    let data = {\r\n      contract_id: contract_id,\r\n      report_date: report_date,\r\n      reconciliation_id: id,\r\n      client_remark:null,\r\n      is_approved: currentStatus,\r\n    };\r\n    await dispatch(currentStatus?approveTimeReportReconciliation(data):rejectTimeReportReconciliation(data));\r\n    let filterData={\r\n      page:page,\r\n      selectedPeriod:selectedPeriod\r\n    }\r\n    dispatch(timeReporting(filterData, role));\r\n  };\r\n  const handleChange = (e, inx) => {\r\n    const { name, value } = e.target;\r\n    let duplicateItem = [...reconciliationData];\r\n    // duplicateItem[inx][name] = value;\r\n    // setReconcilitationData(duplicateItem);\r\n    // let ind = duplicateItem.findIndex((item,idx) => idx === inx);\r\n    if (inx > -1) {\r\n      duplicateItem[0] = {\r\n        ...duplicateItem[inx],\r\n        [name]: value,\r\n        // id:inx\r\n      };\r\n    } else {\r\n      setReconcilitationData([...reconciliationData, duplicateItem]);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"weekly-detail mb-3 p-3\">\r\n      <div className=\"client-info mb-3 gap-5\">\r\n        <div className=\"mb-2\">\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <div className=\"datePrim\">\r\n              <p className=\"client-name-heading d-flex gap-1 align-items-center\">\r\n                <FiCalendar />\r\n                {report_date}\r\n              </p>\r\n            </div>\r\n            <div className=\"editSec\">\r\n              {role !== \"client\" && item?.reconciliation_approved!==true ? (\r\n                <span className=\"px-3 mb-2 arrow-btn info-arrow font-16 text-decoration-none\" onClick={()=>handleEdit(item)}>\r\n                  <TiEdit />\r\n                </span>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <div className=\"d-flex gap-2\">\r\n                {role == \"client\" && item?.is_approved==null  ? (\r\n                  <>\r\n                    <OverlayTrigger placement=\"bottom\" overlay={approveRemark}>\r\n                      <Button\r\n                        variant=\"transparent\"\r\n                        className=\"px-3 mb-2 arrow-btn primary-arrow font-16 text-decoration-none\"\r\n                        onClick={() => approvedReject(true)}\r\n                      >\r\n                        <IoCheckmark />\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                    <OverlayTrigger placement=\"bottom\" overlay={rejectRemark}>\r\n                      <Button\r\n                        variant=\"transparent\"\r\n                        className=\"px-3 mb-2 arrow-btn danger-arrow font-16 text-decoration-none\"\r\n                        onClick={() => approvedReject(false)}\r\n                      >\r\n                        <IoCloseOutline />\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* {role !== \"client\" ? (\r\n            <span onClick={handleEdit}>\r\n              <TiEdit />\r\n            </span>\r\n          ) : (\r\n            \"\"\r\n          )} */}\r\n\r\n          {/* <p className=\"client-name-heading d-flex gap-1 align-items-center\">\r\n            <FiCalendar />\r\n            {report_date}\r\n          </p> */}\r\n        </div>\r\n        <div className=\"d-flex gap-4 justify-content-between\">\r\n          <div className=\"d-flex gap-3 align-items-center\">\r\n            <p className=\"client-name-heading d-flex gap-1 align-items-center\">\r\n              <FaRegClock />\r\n\r\n              {editDetails?.isEdit ? (\r\n                <>\r\n                <input type=\"time\" className=\"common-field form-control\" value={moment(item?.start_time, \"HH:mm:ss\").format(\"HH:mm\")} name=\"start_time\"  onChange={(e)=>handleChangeUpdateWeeklyData(e,index)}/>\r\n                \r\n                </>\r\n              ) : start_time ? (\r\n                moment(start_time, \"HH:mm:ss\").format(\"h:mm A\")\r\n              ) : (\r\n                \"00:00\"\r\n              )}\r\n            </p>\r\n            <p className=\"client-name-heading\">-</p>\r\n            <p className=\"client-name-heading d-flex gap-1 align-items-center\">\r\n              <FaRegClock />\r\n\r\n              {editDetails?.isEdit ? (\r\n                <input type=\"time\" className=\"common-field form-control\" value={moment(item?.end_time, \"HH:mm:ss\").format(\"HH:mm\")} name=\"end_time\"  onChange={(e)=>handleChangeUpdateWeeklyData(e,index)}/>\r\n              ) : end_time ? (\r\n                moment(end_time, \"HH:mm:ss\").format(\"h:mm A\")\r\n              ) : (\r\n                \"00:00\"\r\n              )}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"client-info\">\r\n        <h4 className=\"sidebar-heading\">Memo</h4>\r\n        {editDetails?.isEdit ? (\r\n          <input type=\"text\" className=\"common-field form-control\" value={item?.memo} name=\"memo\" onChange={(e)=>handleChangeUpdateWeeklyData(e,index)} />\r\n        ) : (\r\n          <p className=\"client-name-heading\">\r\n            {memo ? memo : \"Memo not Found\"}\r\n          </p>\r\n        )}\r\n        <div>\r\n          {item?.is_approved || item?.reconciliation_approved ? (\r\n            <span className=\"status-finished mt-2 mx-1\">Approved</span>\r\n          ) : (item?.is_approved === false || item?.reconciliation_approved==false )&&(\r\n            <span className=\"status-rejected mt-2\">Rejected</span>\r\n          )}\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReconciliationModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Offcanvas,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n} from \"react-bootstrap\";\r\nimport userImage from \"../../../assets/img/user-img.jpg\";\r\nimport { sendRemarkOnTimeReport } from \"../../../redux/slices/adminDataSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport RexettButton from \"../../atomic/RexettButton\";\r\nimport ReconciliationModal from \"./ReconcialiationModal\";\r\nimport { postReconciliationData } from \"../../../redux/slices/developerDataSlice\";\r\nimport { timeReporting } from \"../../../redux/slices/clientDataSlice\";\r\nconst TimeReportRemark = ({\r\n  remarkshow,\r\n  handleremarkClose,\r\n  contractId,\r\n  currentDetails,\r\n  role,\r\n  selectedPeriod,\r\n  page,\r\n}) => {\r\n  let {\r\n    contractDetails: { user_details, contract_id },\r\n    endDate,\r\n    startDate,\r\n    allSelectedTimeReport,\r\n    timeReports: {\r\n      end_time,\r\n      start_time,\r\n      memo,\r\n      weeklyDetails,\r\n      monthlyDetails,\r\n      report_date,\r\n      week,\r\n      month,\r\n    },\r\n    totalDuration,\r\n  } = currentDetails;\r\n  const [addRemark, setRemark] = useState(null);\r\n  const [reconciallationData, setReconciallationData] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const [updateWeeklyData, setUpdateWeeklyData] = useState([]);\r\n\r\n  const { smallLoader, reconciliationsData } = useSelector(\r\n    (state) => state.clientData\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (role == \"client\") {\r\n      setUpdateWeeklyData(reconciliationsData);\r\n    } else {\r\n      setUpdateWeeklyData(allSelectedTimeReport);\r\n    }\r\n  }, [reconciliationsData]);\r\n\r\n  console.log(allSelectedTimeReport,\"allSelectedTimeReport\")\r\n\r\n  const handleReconciliationSend = () => {\r\n    const temp = JSON.parse(JSON.stringify(updateWeeklyData));\r\n    const payload = temp.filter((curElem) => curElem?.isEdited === true);\r\n    // const modifiedPayload = payload.map((curElem) => {\r\n    //   if (curElem.isEdited) {\r\n    //     delete curElem.isEdited;\r\n    //     return curElem;\r\n    //   } else {\r\n    //     return curElem;\r\n    //   }\r\n    // });\r\n\r\n    // removing isEdited key that was added manually\r\n    let modifiedPayload = payload.map(({ isEdited, ...rest }) => {return {...rest,contract_id:Number(contractId)}});\r\n    if (modifiedPayload?.length) {\r\n      dispatch( \r\n        postReconciliationData(modifiedPayload, () => {\r\n          handleremarkClose();\r\n          dispatch(timeReporting({filter:\"weekly\"},role));\r\n        })\r\n      );\r\n    } else {\r\n      handleremarkClose();\r\n    }\r\n  };\r\n  const handleChangeUpdateWeeklyData = (e, index) => {\r\n    const { value, name } = e.target;\r\n    const temp = JSON.parse(JSON.stringify(updateWeeklyData));\r\n    temp[index][name] = value;\r\n    temp[index][\"isEdited\"] = true;\r\n    setUpdateWeeklyData(temp);\r\n  };\r\n\r\n  console.log(user_details,\"user\")\r\n\r\n  return (\r\n    <Offcanvas\r\n      className=\"time-detail-sidepanel\"\r\n      show={remarkshow}\r\n      onHide={handleremarkClose}\r\n      placement=\"end\"\r\n    >\r\n      <Offcanvas.Header closeButton>\r\n        <Offcanvas.Title>Reconciliation</Offcanvas.Title>\r\n      </Offcanvas.Header>\r\n      <Offcanvas.Body>\r\n        <div className=\"detail-view weekly-view\">\r\n          <div className=\"client-info mb-3\">\r\n            <p>{role !== \"developer\" ? \"Developer Name\" : \"Client Name\"}</p>\r\n            <p className=\"client-name-heading\">\r\n              <img src={user_details?.profile_picture} />\r\n              {user_details?.name}\r\n            </p>\r\n          </div>\r\n\r\n          {updateWeeklyData?.map((item, index) => { \r\n            return (\r\n              <>\r\n                <ReconciliationModal\r\n                  handleChangeUpdateWeeklyData={handleChangeUpdateWeeklyData}\r\n                  item={item}\r\n                  role={role}\r\n                  contract_id={contract_id}\r\n                  index={index}\r\n                  selectedPeriod={selectedPeriod}\r\n                  page={page}\r\n                />\r\n              </>\r\n            );\r\n          })}\r\n        </div>\r\n        {role !== \"client\" && (\r\n          <RexettButton\r\n            type=\"submit\"\r\n            text=\"Submit\"\r\n            className=\"main-btn font-14 mt-2 py-2 px-3\"\r\n            variant=\"transparent\"\r\n            onClick={handleReconciliationSend}\r\n            disabled={smallLoader}\r\n            isLoading={smallLoader}\r\n          />\r\n        )}\r\n      </Offcanvas.Body>\r\n    </Offcanvas>\r\n  );\r\n};\r\n\r\nexport default TimeReportRemark;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Button, Tooltip } from \"react-bootstrap\";\r\nimport RexettButton from \"../../atomic/RexettButton\";\r\nimport Offcanvas from \"react-bootstrap/Offcanvas\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport ScreenLoader from \"../../atomic/ScreenLoader\";\r\nimport NoDataFound from \"../../atomic/NoDataFound\";\r\nimport { approvedClient } from \"../../../redux/slices/developerDataSlice\";\r\nimport userImage from \"../../../assets/img/user-img.jpg\";\r\nimport { FiCalendar } from \"react-icons/fi\";\r\nimport { FaRegClock } from \"react-icons/fa6\";\r\nimport moment from \"moment\";\r\nimport SingleTimeReporting from \"./SingleTimeReporting\";\r\nimport ConfirmationModal from \"../../../pages/views/Modals/ConfirmationModal\";\r\nimport {\r\n  getReconciliationData,\r\n  timeReporting,\r\n} from \"../../../redux/slices/clientDataSlice\";\r\nimport remarkIcon from \"../../../assets/img/remarks-icon.svg\";\r\nimport { OverlayTrigger } from \"react-bootstrap/esm\";\r\nimport TimeReportRemark from \"./TimeReportRemark\";\r\nimport Guidelines from \"../../common/Guidelines/Guidelines\";\r\nimport { TIME_REPORTING } from \"./constant\";\r\n\r\nconst RexettTable = ({ selectedPeriod, headerColumn, data, role, page }) => {\r\n  const [show, setShow] = useState(false);\r\n  const [contractId, setContractID] = useState(null);\r\n  const [isAnyReportEmpty, setIsAnyReportEmpty] = useState(false);\r\n  const [selectedApprovedBtn, setSelectedApprovedBtn] = useState(null);\r\n  const [approvedConfirmation, setApprovedConfirmation] = useState({\r\n    isApproved: false,\r\n    approvedId: null,\r\n    startDate: null,\r\n    endDate: null,\r\n  });\r\n  const [currentDetails, setCurrentDetails] = useState(null);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = (data, index, isOff) => {\r\n    if (!isOff?.is_off_day) {\r\n      let memoDetails = data?.timeReports[index];\r\n      let newData = {\r\n        ...data,\r\n        timeReports: memoDetails,\r\n      };\r\n      setCurrentDetails(newData);\r\n      setShow(true);\r\n    }\r\n  };\r\n  const isAnyTimeReportingEmpty = (timeReports) => {\r\n    const index = timeReports?.findIndex(\r\n      (curElem) =>\r\n        !curElem?.is_holiday && !curElem?.is_off_day && !curElem?.memo\r\n    );\r\n    if (index === -1) {\r\n      setIsAnyReportEmpty(false);\r\n    } else {\r\n      setIsAnyReportEmpty(true);\r\n    }\r\n  };\r\n  const viewremark = <Tooltip id=\"tooltip\">View Reconciliation</Tooltip>;\r\n\r\n  const [remarkshow, setremarkShow] = useState(false);\r\n  const handleremarkClose = () => setremarkShow(false);\r\n\r\n  function filterReportDataByDate(reportData) {\r\n    const today = new Date().toISOString().split('T')[0];\r\n    return reportData.filter(entry => \r\n        entry.report_date <= today && \r\n        (!entry.is_off_day || entry.is_holiday)\r\n    );\r\n}\r\n\r\n  const handleremarkShow = (data, index) => {\r\n\r\n    let memoDetails = data?.timeReports[index];\r\n    let newData = {\r\n      ...data,\r\n      timeReports: memoDetails,\r\n      allSelectedTimeReport: filterReportDataByDate(data?.timeReports),\r\n    };\r\n    if (role == \"client\") {\r\n      dispatch(getReconciliationData(data?.contractDetails?.contract_id));\r\n    }\r\n    setCurrentDetails(newData);\r\n    setContractID(newData?.contractDetails?.contract_id);\r\n    setremarkShow(true);\r\n  };\r\n  const { approvedLoader, smallLoader } = useSelector(\r\n    (state) => state.developerData\r\n  );\r\n  const dispatch = useDispatch();\r\n  const submitApproved = (id, index, startDate, endDate) => {\r\n    setApprovedConfirmation({\r\n      isApproved: true,\r\n      approvedId: id,\r\n      startDate: startDate,\r\n      endDate: endDate,\r\n    });\r\n    // setSelectedApprovedBtn(index)\r\n    // dispatch(approvedClient(id,role))\r\n  };\r\n\r\n  const handleCloseApproveModal = () => {\r\n    setIsAnyReportEmpty(null);\r\n    setApprovedConfirmation({\r\n      isApproved: false,\r\n      approvedId: null,\r\n      startDate: null,\r\n      endDate: null,\r\n    });\r\n  };\r\n\r\n  const handleTimeSheetApprove = (e) => {\r\n    e.preventDefault();\r\n    const payload = {\r\n      startDate: approvedConfirmation?.startDate,\r\n      endDate: approvedConfirmation?.endDate,\r\n    };\r\n    dispatch(\r\n      approvedClient(approvedConfirmation?.approvedId, payload, role, () => {\r\n        setApprovedConfirmation({\r\n          isApproved: false,\r\n          approvedId: null,\r\n        });\r\n        let filterData = {\r\n          page: page,\r\n        };\r\n        dispatch(timeReporting(filterData, role));\r\n      })\r\n    );\r\n  };\r\n\r\n  const currentTextData = (role, isApproved) => {\r\n    if (role == \"client\") {\r\n      if (isApproved) {\r\n        return \"Approved\";\r\n      } else {\r\n        return \"Submit & Approve\";\r\n      }\r\n    } else {\r\n      if (isApproved) {\r\n        return \"Approved\";\r\n      } else {\r\n        return \"Submit\";\r\n      }\r\n    }\r\n  };\r\n  const shouldDisable = (isApproved) => {\r\n    if (role == \"client\") {\r\n      if (isApproved) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else if (role == \"developer\") {\r\n      if (isApproved) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n  // const isTodayMonthEnd = () => {\r\n  //   const today = new Date();\r\n  //   const lastDayOfMonth = new Date(\r\n  //     today.getFullYear(),\r\n  //     today.getMonth() + 1,\r\n  //     0\r\n  //   ); // The 0th day of the next month is the last day of the current month\r\n  //   return today.getDate() === lastDayOfMonth.getDate();\r\n  // };\r\n  const isTodayFriday = () => {\r\n    const today = new Date();\r\n    // const isFriday = today.getDay() === 5; \r\n    return today.getDay() === 5\r\n  }\r\n  return (\r\n    <>\r\n      <div className={`weekly-report-table ${selectedPeriod}`}>\r\n        <div className=\"table-responsive\">\r\n          {smallLoader ? (\r\n            <ScreenLoader />\r\n          ) : data?.length > 0 ? (\r\n            <table className=\"table time-table table-bordered table-ui-custom\">\r\n              <thead>\r\n                <th className=\"time-table-head\">\r\n                  <span>\r\n                    {role !== \"developer\" ? \"Developer Name\" : \"Client Name\"}\r\n                  </span>\r\n                </th>\r\n\r\n                {headerColumn?.map((item, index) => {\r\n                  return (\r\n                    <>\r\n                      <th className=\"time-table-head\">\r\n                        <span>{item} </span>\r\n                      </th>\r\n                    </>\r\n                  );\r\n                })}\r\n                <th className=\"time-table-head\">\r\n                  <span>Total Hours</span>\r\n                </th>\r\n                {/* <th className=\"time-table-head\">\r\n                                        <span>Contract</span>\r\n                                    </th> */}\r\n                {/* <th className=\"time-table-head\">\r\n                                        <span>Project</span>\r\n                                    </th> */}\r\n                { role==\"developer\" &&<th className=\"time-table-head\">\r\n                  <span>Timesheet</span>\r\n                </th>}\r\n                <th className=\"time-table-head\">\r\n                  <span>Reconciliation</span>\r\n                </th>\r\n                {selectedPeriod == \"weekly\" && role!==\"developer\" ? (\r\n                  <th className=\"time-table-head\">\r\n                    <span>Submit</span>\r\n                  </th>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </thead>\r\n\r\n              <tbody>\r\n                {data?.length > 0 ? (\r\n                  data?.map((item, index) => {\r\n                    return (\r\n                      <>\r\n                        <tr>\r\n                          <td className=\"time-table-data\">\r\n                            <div className=\"d-flex align-items-center gap-2\">\r\n                              <div className=\"d-flex gap-2 align-items-center white-nowrap\">\r\n                                <div className=\"position-relative\">\r\n                                  <img\r\n                                    src={\r\n                                      item?.contractDetails?.user_details\r\n                                        ?.profile_picture\r\n                                        ? item?.contractDetails?.user_details\r\n                                            ?.profile_picture\r\n                                        : userImage\r\n                                    }\r\n                                    className=\"developer-img\"\r\n                                    alt=\"\"\r\n                                  />\r\n                                  {/* <span className=\"number-count overlay\">\r\n                                    1\r\n                                  </span> */}\r\n                                </div>{\" \"}\r\n                                {item?.contractDetails?.user_details?.name}\r\n                              </div>\r\n                            </div>\r\n                          </td>\r\n                          {item?.timeReports?.map((reprt, inx) => {\r\n                            if (reprt.report_date) {\r\n                              return (\r\n                                <>\r\n                                  <td\r\n                                    onClick={() => handleShow(item, inx, reprt)}\r\n                                    className={`time-table-data white-nowrap ${\r\n                                      reprt?.is_public_holiday\r\n                                        ?  \"holiday-data\" :\r\n                                        reprt.is_off_day ?\r\n                                        \"offday-data\"\r\n                                        : \"workday-data\"\r\n                                    }`}\r\n                                  >\r\n                                    <div>\r\n                                      <span\r\n                                        className={`${\r\n                                          reprt.is_off_day\r\n                                            ? \"\"\r\n                                            : \"timing-text d-inline-block\"\r\n                                        }`}\r\n                                      >\r\n                                        {reprt.start_time && reprt?.end_time\r\n                                          ? `${moment(\r\n                                              reprt?.start_time,\r\n                                              \"HH:mm\"\r\n                                            ).format(\"h:mm A\")} - ${moment(\r\n                                              reprt?.end_time,\r\n                                              \"HH:mm\"\r\n                                            ).format(\"h:mm A\")} `\r\n                                          : reprt?.is_holiday\r\n                                          ? \"Holiday\"\r\n                                          :  reprt?.is_public_holiday ? reprt?.holiday_name:reprt?.is_off_day ? \"Leave\" :\"\"}\r\n                                      </span>\r\n                                      {reprt?.memo && (\r\n                                        <p className=\"memo-text\">\r\n                                          {reprt?.memo ? reprt?.memo : \"\"}\r\n                                        </p>\r\n                                      )}\r\n                                    </div>\r\n                                  </td>\r\n                                </>\r\n                              );\r\n                            } else if (reprt?.week) {\r\n                              return (\r\n                                <>\r\n                                  <td\r\n                                    onClick={() => handleShow(item, inx, reprt)}\r\n                                    className={`time-table-data white-nowrap ${\r\n                                      reprt.is_off_week\r\n                                        ? \"offday-data\"\r\n                                        : \"workday-data\"\r\n                                    }`}\r\n                                  >\r\n                                    <div>\r\n                                      {reprt?.duration\r\n                                        ? `${reprt?.duration.toFixed(\"2\")} hr`\r\n                                        : \"Holiday\"}\r\n                                    </div>\r\n                                  </td>\r\n                                  {/* <td className={`time-table-data ${reprt.is_off_month ? \"offday-data\" : \"workday-data\"}`} >{reprt?.duration ? reprt?.duration : \"-\"}</td> */}\r\n                                </>\r\n                              );\r\n                            } else {\r\n                              return (\r\n                                <>\r\n                                  <td\r\n                                    onClick={() => handleShow(item, inx, reprt)}\r\n                                    className={`time-table-data white-nowrap ${\r\n                                      reprt.is_off_month\r\n                                        ? \"offday-data\"\r\n                                        : \"workday-data\"\r\n                                    }`}\r\n                                  >\r\n                                    <div>\r\n                                      {reprt?.duration\r\n                                        ? `${reprt?.duration.toFixed(\"2\")} hr`\r\n                                        : \"Holiday\"}\r\n                                    </div>\r\n                                  </td>\r\n                                  {/* <td className={`time-table-data ${reprt.is_off_year ? \"offday-data\" : \"workday-data\"}`} >{reprt?.duration ? reprt?.duration : \"-\"}</td> */}\r\n                                </>\r\n                              );\r\n                            }\r\n                          })}\r\n                          <td className=\"time-table-data\">\r\n                            {item?.totalDuration > 0\r\n                              ? item?.totalDuration.toFixed(\"2\")\r\n                              : item?.totalDuration}\r\n                            hr\r\n                          </td>\r\n                          {/* <td className=\"time-table-data white-nowrap\">{item?.contractDetails?.employment_type}</td> */}\r\n                          {/* <td className=\"time-table-data\">\r\n                                                        <span className={item?.is_complete ? \"status-progress white-nowrap\" : \"status-finished white-nowrap\"}>{item?.is_complete ? \"Progress\" : \"Finished\"}</span>\r\n                                                    </td> */}\r\n                          {role==\"developer\" &&<td className=\"time-table-data\">\r\n                            <span className=\"status-progress white-nowrap\">\r\n                              {item?.isApproved ? \"Reviewed\" : \"Under Review\"}\r\n                            </span>\r\n                          </td>}\r\n                          <td className=\"time-table-data\">\r\n                            <button\r\n                              // disabled={item?.isApproved || !isTodayFriday()}\r\n                              onClick={() => {\r\n                                handleremarkShow(item, index);\r\n                              }}\r\n                              className=\"remarks-text position-relative white-nowrap removeBtnStyles\"\r\n                            >\r\n                              {item?.contractDetails?.remarks?.length > 0 ? (\r\n                                <img src={remarkIcon} className=\"remark-icon\" />\r\n                              ) : (\r\n                                <OverlayTrigger\r\n                                  placement=\"bottom\"\r\n                                  overlay={viewremark}\r\n                                >\r\n                                  <img\r\n                                    src={remarkIcon}\r\n                                    className=\"remark-icon\"\r\n                                  />\r\n                                </OverlayTrigger>\r\n                              )}{\" \"}\r\n                              {/* <span className=\"number-count overlay\">1</span> */}\r\n                            </button>\r\n                          </td>\r\n\r\n                          {selectedPeriod == \"weekly\" && role!==\"developer\" ? (\r\n                            <td className=\"time-table-data\">\r\n                              {item?.isApproved ? (\r\n                                <span className=\"status-finished\">\r\n                                  Approved\r\n                                </span>\r\n                              ) : (\r\n                                <RexettButton\r\n                                  type=\"submit\"\r\n                                  text={currentTextData(role, item?.isApproved)}\r\n                                  className={`outline-main-btn white-nowrap px-2 font-13`}\r\n                                  variant=\"transparent\"\r\n                                  disabled={shouldDisable(item?.isApproved)}\r\n                                  onClick={() => {\r\n                                    isAnyTimeReportingEmpty(item?.timeReports);\r\n                                    submitApproved(\r\n                                      item?.contractDetails?.contract_id,\r\n                                      index,\r\n                                      item?.startDate,\r\n                                      item?.endDate\r\n                                    );\r\n                                  }}\r\n                                  isLoading={\r\n                                    selectedApprovedBtn === index\r\n                                      ? approvedLoader\r\n                                      : false\r\n                                  }\r\n                                />\r\n                              )}\r\n                            </td>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </tr>\r\n                      </>\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <td colSpan={10}> <div className=\"simple-no-data\"><NoDataFound /></div>  </td>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n           <div className=\"simple-no-data\"><NoDataFound /></div>\r\n          )}\r\n        </div>\r\n        <Offcanvas\r\n          className=\"time-detail-sidepanel\"\r\n          show={show}\r\n          onHide={handleClose}\r\n          placement=\"end\"\r\n        >\r\n          <Offcanvas.Header closeButton>\r\n            <Offcanvas.Title>Time Reporting</Offcanvas.Title>\r\n          </Offcanvas.Header>\r\n          <Offcanvas.Body>\r\n            {selectedPeriod == \"weekly\" && (\r\n              <SingleTimeReporting\r\n                currentDetails={currentDetails}\r\n                selectedPeriod={selectedPeriod}\r\n                role={role}\r\n              />\r\n            )}\r\n\r\n            {selectedPeriod == \"monthly\" && (\r\n              <SingleTimeReporting\r\n                currentDetails={currentDetails}\r\n                selectedPeriod={selectedPeriod}\r\n                role={role}\r\n              />\r\n            )}\r\n\r\n            {/* { selectedPeriod == \"yearly\" &&  <SingleTimeReporting currentDetails={currentDetails} selectedPeriod={selectedPeriod}/> } */}\r\n            {selectedPeriod == \"yearly\" && (\r\n              <SingleTimeReporting\r\n                currentDetails={currentDetails}\r\n                selectedPeriod={selectedPeriod}\r\n                role={role}\r\n              />\r\n            )}\r\n          </Offcanvas.Body>\r\n        </Offcanvas>\r\n        {remarkshow ? (\r\n          <TimeReportRemark\r\n            contractId={contractId}\r\n            remarkshow={remarkshow}\r\n            handleremarkClose={handleremarkClose}\r\n            currentDetails={currentDetails}\r\n            page={page}\r\n            role={role}\r\n            selectedPeriod={selectedPeriod}\r\n          />\r\n\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <ConfirmationModal\r\n          text={\r\n            isAnyReportEmpty\r\n              ? `Are you sure to submit this time sheet ? It looks like you haven't written your work status for all the days of the week.`\r\n              : \"Are you sure you want to submit this time sheet?\"\r\n          }\r\n          show={approvedConfirmation?.isApproved}\r\n          startDate={approvedConfirmation?.startDate}\r\n          endDate={approvedConfirmation?.endDate}\r\n          handleClose={handleCloseApproveModal}\r\n          onClick={handleTimeSheetApprove}\r\n          smallLoader={approvedLoader}\r\n        />\r\n      </div>\r\n      {/* <div className=\"helper-text-section\">\r\n        <h3>Guiding You Through: Helpful Text to Navigate Time Reporting</h3>\r\n        <ol className=\"ps-3 mb-0\">\r\n          <li className=\"mb-2\">\r\n            <p>All developers must check in before starting their workday.</p>\r\n          </li>\r\n          <li className=\"mb-2\">\r\n            <p>\r\n              All developers must submit their time-sheets before the end of\r\n              Friday.\r\n            </p>\r\n          </li>\r\n          <li className=\"mb-2\">\r\n            <p>Please Check out at the end of your workday.</p>\r\n          </li>\r\n          <li className=\"mb-2\">\r\n            For Developers, Reconciliation get enable on every Friday.\r\n          </li>\r\n          <li className=\"mb-2\">\r\n            <p>\r\n              Developers may work on weekends and reconcile their Time-sheets.\r\n            </p>\r\n          </li>\r\n        </ol>\r\n      </div> */}\r\n      <Guidelines heading={\"Guiding You Through: Helpful Text to Navigate Time Reporting\"} guideLines={TIME_REPORTING}/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RexettTable;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport developerImg from \"../../../assets/img/user-img.jpg\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { timeReporting } from \"../../../redux/slices/clientDataSlice\";\r\nimport RexettTable from \"../../../components/clients/TimeReporiting/RexettTable\";\r\nimport { monthOptions, weekOptions, weeklyTimeReports, yearOption } from \"../../../components/clients/TimeReporiting/constant\";\r\nimport RexettButton from \"../../../components/atomic/RexettButton\";\r\nimport ScreenLoader from \"../../atomic/ScreenLoader\";\r\nimport RexettPagination from \"../../atomic/RexettPagination\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst RexettTimeReporting = ({ timeReportingData, handleShowModal, role }) => {\r\n    const dispatch = useDispatch();\r\n    const [selectedPeriod, setSelectedPeriod] = useState(\"weekly\");\r\n    const [selectedFilter, setSelectedFilter] = useState({ filter: \"weekly\" });\r\n    const [selectedWeek, setSelectedWeek] = useState(\"\");\r\n    const [selectedYear, setSelectedYear] = useState(\"\");\r\n    const [selectedMonth, setSelectedMonth] = useState(\"\");\r\n    const [selectedView, setSelectedView] = useState(\"\");\r\n    const [page, setPage] = useState(1);\r\n    const { t } = useTranslation();\r\n    const { screenLoader, timeReportingPage } = useSelector(\r\n        (state) => state.clientData\r\n    );\r\n\r\n   \r\n    useEffect(() => {\r\n        let filterData = {\r\n            ...selectedFilter,\r\n            filter: selectedPeriod,\r\n            page: page,\r\n        };\r\n        dispatch(timeReporting(filterData, role));\r\n    }, [page]);\r\n\r\n    const handlePeriodChange = (value) => {\r\n        setSelectedView(value);\r\n        const selectedPeriodValue = value;\r\n        setSelectedPeriod(selectedPeriodValue);\r\n        let filterData = {\r\n            ...selectedFilter,\r\n            filter: selectedPeriodValue,\r\n            page: page,\r\n        };\r\n\r\n        delete filterData.week;\r\n        delete filterData.month;\r\n        delete filterData.year;\r\n\r\n        setSelectedMonth(\"\");\r\n        setSelectedYear(\"\");\r\n        setSelectedWeek(\"\");\r\n        setSelectedFilter({ filter: selectedPeriodValue });\r\n        dispatch(timeReporting(filterData, role));\r\n    };\r\n\r\n    const handleChange = (e, select) => {\r\n        const selectedValue = e.target.value;\r\n        e.preventDefault();\r\n        setSelectedFilter({\r\n            ...selectedFilter,\r\n            [select]: e.target.value,\r\n        });\r\n        if (select === \"week\") {\r\n            setSelectedWeek(selectedValue);\r\n        } else if (select === \"month\") {\r\n            setSelectedMonth(selectedValue);\r\n        } else {\r\n            setSelectedYear(e.target.value);\r\n        }\r\n    };\r\n\r\n    const handlePrevTimeReporting = (e) => {\r\n        e.preventDefault();\r\n        let filterData = {\r\n            ...selectedFilter,\r\n            filter: selectedPeriod,\r\n            page: page,\r\n        };\r\n        if (selectedPeriod === \"yearly\") {\r\n            filterData.year = selectedFilter.year;\r\n            delete filterData.month;\r\n            delete filterData.week;\r\n        } else if (selectedPeriod === \"monthly\") {\r\n            filterData.year = selectedFilter.year;\r\n            filterData.month = selectedFilter.month;\r\n            delete filterData.week;\r\n        } else {\r\n            filterData.year = selectedFilter.year;\r\n            filterData.month = selectedFilter.month;\r\n            filterData.week = selectedFilter.week;\r\n        }\r\n        dispatch(timeReporting(filterData, role));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {screenLoader ? (\r\n                <ScreenLoader />\r\n            ) : (\r\n                <section>\r\n                    <div className=\"filter-section\">\r\n                        <div className=\"d-flex justify-content-between align-items-center flex-wrap gap-3\">\r\n                            <Form>\r\n                                <div className=\"d-flex gap-3 flex-wrap align-items-end\">\r\n                                    <div>\r\n                                        {/* <Form.Label className=\"common-label\">Select Year</Form.Label> */}\r\n                                        <Form.Select\r\n                                            className=\"time-filter-select shadow-none\"\r\n                                            onChange={(e) => handleChange(e, \"year\")}\r\n                                            value={selectedYear}\r\n                                        >\r\n                                            <option value=\"\" disabled selected>\r\n                                                {t(\"selectYear\")}\r\n                                            </option>\r\n                                            {yearOption?.map((item )=>(\r\n                                                 <option key={item}>{item}</option>\r\n                                            ))}\r\n                                        </Form.Select>\r\n                                    </div>\r\n                                    {selectedPeriod !== \"yearly\" ? (\r\n                                        <div>\r\n                                            {/* <Form.Label className=\"common-label\">Select Month</Form.Label> */}\r\n                                            <Form.Select\r\n                                                className=\"time-filter-select shadow-none\"\r\n                                                onChange={(e) => handleChange(e, \"month\")}\r\n                                                value={selectedMonth}\r\n                                            >\r\n                                                <option value=\"\" selected disabled>\r\n                                                    {t(\"selectMonth\")}\r\n                                                </option>\r\n                                                {monthOptions?.map((opt, index) => (\r\n                                                    <option key={index} value={opt?.value}>\r\n                                                        {opt?.label}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Form.Select>\r\n                                        </div>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                    {selectedPeriod !== \"yearly\" &&\r\n                                        selectedPeriod !== \"monthly\" ? (\r\n                                        <div>\r\n                                            {/* <Form.Label className=\"common-label\">Select Week</Form.Label> */}\r\n                                            <Form.Select\r\n                                                className=\"time-filter-select shadow-none\"\r\n                                                onChange={(e) => handleChange(e, \"week\")}\r\n                                                value={selectedWeek}\r\n                                            >\r\n                                                <option value=\"\" selected disabled>\r\n                                                    {t(\"selectWeek\")}\r\n                                                </option>\r\n                                                {weekOptions?.map((item, index) => (\r\n                                                    <option key={index} value={item?.value}>\r\n                                                        {item?.label}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Form.Select>\r\n                                        </div>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                    <div className=\"d-flex gap-3\">\r\n                                        {/* <Form.Control type=\"text\" placeholder=\"Search\" className=\"search-field\" onChange={handleSearchChange}></Form.Control> */}\r\n                                        <RexettButton\r\n                                            type=\"submit\"\r\n                                            text=\"Filter\"\r\n                                            className=\"main-btn py-1_5 px-4\"\r\n                                            variant=\"transparent\"\r\n                                            onClick={handlePrevTimeReporting}\r\n                                            isLoading={false}\r\n                                            disabled={\r\n                                                selectedPeriod === \"weekly\" &&\r\n                                                    Object.keys(selectedFilter).length > 3\r\n                                                    ? false\r\n                                                    : selectedPeriod === \"monthly\" &&\r\n                                                        Object.keys(selectedFilter).length > 2\r\n                                                        ? false\r\n                                                        : selectedPeriod === \"yearly\" &&\r\n                                                            Object.keys(selectedFilter).length > 1\r\n                                                            ? false\r\n                                                            : true\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </Form>\r\n                            <div className=\"d-flex gap-2\">\r\n                                <div className=\"d-flex justify-content-between align-items-center\">\r\n                                    <div>\r\n                                        <div className=\"indicator-time-slot d-flex gap-3 align-items-center flex-wrap\">\r\n                                            <div className=\"d-inline-flex align-items-center gap-1\">\r\n                                                <span className=\"slot-indicate offday\"></span>\r\n                                                <span className=\"font-14 fw-semibold\">{t(\"offDay\")}</span>\r\n                                            </div>\r\n                                            <div className=\"d-inline-flex align-items-center gap-1\">\r\n                                                <span className=\"slot-indicate workday\"></span>\r\n                                                <span className=\"font-14 fw-semibold\">{t(\"workDay\")}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"flex-none\">\r\n                                    {/* <Form.Label className=\"common-label\">Select View</Form.Label> */}\r\n                                    <Form.Select\r\n                                        className=\" time-filter-select shadow-none\"\r\n                                        value={selectedView}\r\n                                        onChange={(e) => handlePeriodChange(e.target.value)}\r\n                                    >\r\n                                        <option selected disabled>\r\n                                            {t(\"selectView\")}\r\n                                        </option>\r\n                                        <option value=\"weekly\">{t(\"weekly\")}</option>\r\n                                        <option value=\"monthly\">{t(\"monthly\")}</option>\r\n                                        <option value=\"yearly\">{t(\"yearly\")}</option>\r\n                                    </Form.Select>\r\n                                </div>\r\n                                {/* {role === \"developer\" ? (\r\n                                    <Button\r\n                                        variant=\"transparent\"\r\n                                        onClick={() => handleShowModal(\"Edit\")}\r\n                                        className=\"outline-main-btn px-xxl-3 px-2 py-1_5\"\r\n                                    >\r\n                                        {role === \"client\" ? `` : `${t(\"editTimeReport\")}`}\r\n                                    </Button>\r\n                                ) : (\r\n                                    \"\"\r\n                                )}\r\n                                <Button\r\n                                    variant=\"transparent\"\r\n                                    onClick={() => handleShowModal(\"AddTime\")}\r\n                                    className=\"outline-main-btn px-xxl-3 px-2 py-1_5\"\r\n                                >\r\n                                    {role === \"client\"\r\n                                        ? `${t(\"editTimeReport\")}`\r\n                                        : `${t(\"addBulkTime\")}`}\r\n                                </Button> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <RexettTable\r\n                        headerColumn={weeklyTimeReports(\r\n                            timeReportingData[0],\r\n                            selectedPeriod\r\n                        )}\r\n                        selectedPeriod={selectedPeriod}\r\n                        data={timeReportingData}\r\n                        role={role}\r\n                        page={page}\r\n                    />\r\n\r\n                    {timeReportingPage?.totalPages > 1 ? (\r\n                        <div className=\"d-flex justify-content-between align-items-center mt-3 mb-4\">\r\n                            <p className=\"showing-result\">\r\n                                {t(\"showing\")} {timeReportingData?.length} {t(\"results\")}\r\n                            </p>\r\n                            <RexettPagination\r\n                                number={timeReportingPage?.totalPages}\r\n                                setPage={setPage}\r\n                                page={page}\r\n                            />\r\n                        </div>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                </section>\r\n            )}\r\n        </>\r\n    );\r\n};\r\nexport default RexettTimeReporting;\r\n","import React from \"react\";\r\n\r\nconst Guidelines = ({heading ,guideLines}) => {\r\n  return (\r\n    <div>\r\n      <div className=\"helper-text-section\">\r\n        <h3>{heading}</h3>\r\n        <ol className=\"ps-3  mb-0\">\r\n          {guideLines?.map((lines, index) => (\r\n            <li className=\"mb-1\">\r\n              <p key={index}> {lines} </p>\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Guidelines;\r\n","import React from \"react\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport RexettButton from \"../../../components/atomic/RexettButton\";\r\nimport { clientDeleteHoliday, getClientHolidayList } from \"../../../redux/slices/clientDataSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nconst ConfirmationModal = ({ text,show, handleClose,onClick ,handleAction,smallLoader,type,startDate,endDate}) => {\r\n    const callBackBtn=(e )=>{\r\n        let data={\r\n            status: type,\r\n        }\r\n        onClick(e,data)\r\n    }\r\n    return(\r\n        <Modal show={show} onHide={(e)=>handleClose(e)} centered animation className=\"custom-modal\">\r\n            <Modal.Header closeButton className=\"border-0 pb-3\">\r\n            {/* <Modal.Title>End Job</Modal.Title> */}\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group className=\"mb-4\">\r\n                        <Form.Label className=\"d-block text-center\">{text}</Form.Label>\r\n                    </Form.Group>\r\n                    <div className=\"text-center\">\r\n                        <RexettButton\r\n                            type=\"submit\"\r\n                            text=\"Yes\"\r\n                            onClick={type ? callBackBtn : handleAction}\r\n                            // onClick={callBackBtn}\r\n                            className=\"main-btn px-4 me-3 font-14 fw-semibold\"\r\n                            variant=\"transparent\"\r\n                            disabled={smallLoader}\r\n                            isLoading={smallLoader}\r\n                        />\r\n                        <Button variant=\"transparent\" onClick={handleClose} className=\"outline-main-btn font-14 fw-semibold bg-transparent border-black text-black px-4\" >No</Button>\r\n                    </div>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\nexport default ConfirmationModal;","import useEffect from './useIsomorphicEffect';\nimport { useState } from 'react';\nconst matchersByWindow = new WeakMap();\nconst getMatcher = (query, targetWindow) => {\n  if (!query || !targetWindow) return undefined;\n  const matchers = matchersByWindow.get(targetWindow) || new Map();\n  matchersByWindow.set(targetWindow, matchers);\n  let mql = matchers.get(query);\n  if (!mql) {\n    mql = targetWindow.matchMedia(query);\n    mql.refCount = 0;\n    matchers.set(mql.media, mql);\n  }\n  return mql;\n};\n/**\n * Match a media query and get updates as the match changes. The media string is\n * passed directly to `window.matchMedia` and run as a Layout Effect, so initial\n * matches are returned before the browser has a chance to paint.\n *\n * ```tsx\n * function Page() {\n *   const isWide = useMediaQuery('min-width: 1000px')\n *\n *   return isWide ? \"very wide\" : 'not so wide'\n * }\n * ```\n *\n * Media query lists are also reused globally, hook calls for the same query\n * will only create a matcher once under the hood.\n *\n * @param query A media query\n * @param targetWindow The window to match against, uses the globally available one as a default.\n */\nexport default function useMediaQuery(query, targetWindow = typeof window === 'undefined' ? undefined : window) {\n  const mql = getMatcher(query, targetWindow);\n  const [matches, setMatches] = useState(() => mql ? mql.matches : false);\n  useEffect(() => {\n    let mql = getMatcher(query, targetWindow);\n    if (!mql) {\n      return setMatches(false);\n    }\n    let matchers = matchersByWindow.get(targetWindow);\n    const handleChange = () => {\n      setMatches(mql.matches);\n    };\n    mql.refCount++;\n    mql.addListener(handleChange);\n    handleChange();\n    return () => {\n      mql.removeListener(handleChange);\n      mql.refCount--;\n      if (mql.refCount <= 0) {\n        matchers == null ? void 0 : matchers.delete(mql.media);\n      }\n      mql = undefined;\n    };\n  }, [query]);\n  return matches;\n}","import useMediaQuery from './useMediaQuery';\nimport { useMemo } from 'react';\n/**\n * Create a responsive hook we a set of breakpoint names and widths.\n * You can use any valid css units as well as a numbers (for pixels).\n *\n * **NOTE:** The object key order is important! it's assumed to be in order from smallest to largest\n *\n * ```ts\n * const useBreakpoint = createBreakpointHook({\n *  xs: 0,\n *  sm: 576,\n *  md: 768,\n *  lg: 992,\n *  xl: 1200,\n * })\n * ```\n *\n * **Watch out!** using string values will sometimes construct media queries using css `calc()` which\n * is NOT supported in media queries by all browsers at the moment. use numbers for\n * the widest range of browser support.\n *\n * @param breakpointValues A object hash of names to breakpoint dimensions\n */\nexport function createBreakpointHook(breakpointValues) {\n  const names = Object.keys(breakpointValues);\n  function and(query, next) {\n    if (query === next) {\n      return next;\n    }\n    return query ? `${query} and ${next}` : next;\n  }\n  function getNext(breakpoint) {\n    return names[Math.min(names.indexOf(breakpoint) + 1, names.length - 1)];\n  }\n  function getMaxQuery(breakpoint) {\n    const next = getNext(breakpoint);\n    let value = breakpointValues[next];\n    if (typeof value === 'number') value = `${value - 0.2}px`;else value = `calc(${value} - 0.2px)`;\n    return `(max-width: ${value})`;\n  }\n  function getMinQuery(breakpoint) {\n    let value = breakpointValues[breakpoint];\n    if (typeof value === 'number') {\n      value = `${value}px`;\n    }\n    return `(min-width: ${value})`;\n  }\n\n  /**\n   * Match a set of breakpoints\n   *\n   * ```tsx\n   * const MidSizeOnly = () => {\n   *   const isMid = useBreakpoint({ lg: 'down', sm: 'up' });\n   *\n   *   if (isMid) return <div>On a Reasonable sized Screen!</div>\n   *   return null;\n   * }\n   * ```\n   * @param breakpointMap An object map of breakpoints and directions, queries are constructed using \"and\" to join\n   * breakpoints together\n   * @param window Optionally specify the target window to match against (useful when rendering into iframes)\n   */\n\n  /**\n   * Match a single breakpoint exactly, up, or down.\n   *\n   * ```tsx\n   * const PhoneOnly = () => {\n   *   const isSmall = useBreakpoint('sm', 'down');\n   *\n   *   if (isSmall) return <div>On a Small Screen!</div>\n   *   return null;\n   * }\n   * ```\n   *\n   * @param breakpoint The breakpoint key\n   * @param direction A direction 'up' for a max, 'down' for min, true to match only the breakpoint\n   * @param window Optionally specify the target window to match against (useful when rendering into iframes)\n   */\n\n  function useBreakpoint(breakpointOrMap, direction, window) {\n    let breakpointMap;\n    if (typeof breakpointOrMap === 'object') {\n      breakpointMap = breakpointOrMap;\n      window = direction;\n      direction = true;\n    } else {\n      direction = direction || true;\n      breakpointMap = {\n        [breakpointOrMap]: direction\n      };\n    }\n    let query = useMemo(() => Object.entries(breakpointMap).reduce((query, [key, direction]) => {\n      if (direction === 'up' || direction === true) {\n        query = and(query, getMinQuery(key));\n      }\n      if (direction === 'down' || direction === true) {\n        query = and(query, getMaxQuery(key));\n      }\n      return query;\n    }, ''), [JSON.stringify(breakpointMap)]);\n    return useMediaQuery(query, window);\n  }\n  return useBreakpoint;\n}\nconst useBreakpoint = createBreakpointHook({\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1400\n});\nexport default useBreakpoint;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst OffcanvasBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nOffcanvasBody.displayName = 'OffcanvasBody';\nexport default OffcanvasBody;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ENTERED, ENTERING, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport TransitionWrapper from './TransitionWrapper';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst transitionStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst OffcanvasToggling = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  in: inProp = false,\n  mountOnEnter = false,\n  unmountOnExit = false,\n  appear = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    in: inProp,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    appear: appear,\n    ...props,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames(className, children.props.className, (status === ENTERING || status === EXITING) && `${bsPrefix}-toggling`, transitionStyles[status])\n    })\n  });\n});\nOffcanvasToggling.displayName = 'OffcanvasToggling';\nexport default OffcanvasToggling;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst OffcanvasHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nOffcanvasHeader.displayName = 'OffcanvasHeader';\nexport default OffcanvasHeader;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst OffcanvasTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nOffcanvasTitle.displayName = 'OffcanvasTitle';\nexport default OffcanvasTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport useBreakpoint from '@restart/hooks/useBreakpoint';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport * as React from 'react';\nimport { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport Fade from './Fade';\nimport OffcanvasBody from './OffcanvasBody';\nimport OffcanvasToggling from './OffcanvasToggling';\nimport ModalContext from './ModalContext';\nimport NavbarContext from './NavbarContext';\nimport OffcanvasHeader from './OffcanvasHeader';\nimport OffcanvasTitle from './OffcanvasTitle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BootstrapModalManager, { getSharedManager } from './BootstrapModalManager';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(OffcanvasToggling, {\n    ...props\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props\n  });\n}\nconst Offcanvas = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  'aria-labelledby': ariaLabelledby,\n  placement = 'start',\n  responsive,\n  /* BaseModal props */\n\n  show = false,\n  backdrop = true,\n  keyboard = true,\n  scroll = false,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  renderStaticNode = false,\n  ...props\n}, ref) => {\n  const modalManager = useRef();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  const {\n    onToggle\n  } = useContext(NavbarContext) || {};\n  const [showOffcanvas, setShowOffcanvas] = useState(false);\n  const hideResponsiveOffcanvas = useBreakpoint(responsive || 'xs', 'up');\n  useEffect(() => {\n    // Handles the case where screen is resized while the responsive\n    // offcanvas is shown. If `responsive` not provided, just use `show`.\n    setShowOffcanvas(responsive ? show && !hideResponsiveOffcanvas : show);\n  }, [show, responsive, hideResponsiveOffcanvas]);\n  const handleHide = useEventCallback(() => {\n    onToggle == null ? void 0 : onToggle();\n    onHide == null ? void 0 : onHide();\n  });\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    if (scroll) {\n      // Have to use a different modal manager since the shared\n      // one handles overflow.\n      if (!modalManager.current) modalManager.current = new BootstrapModalManager({\n        handleContainerOverflow: false\n      });\n      return modalManager.current;\n    }\n    return getSharedManager();\n  }\n  const handleEnter = (node, ...args) => {\n    if (node) node.style.visibility = 'visible';\n    onEnter == null ? void 0 : onEnter(node, ...args);\n  };\n  const handleExited = (node, ...args) => {\n    if (node) node.style.visibility = '';\n    onExited == null ? void 0 : onExited(...args);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName)\n  }), [backdropClassName, bsPrefix]);\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    ...dialogProps,\n    ...props,\n    className: classNames(className, responsive ? `${bsPrefix}-${responsive}` : bsPrefix, `${bsPrefix}-${placement}`),\n    \"aria-labelledby\": ariaLabelledby,\n    children: children\n  });\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [!showOffcanvas && (responsive || renderStaticNode) && renderDialog({}), /*#__PURE__*/_jsx(ModalContext.Provider, {\n      value: modalContext,\n      children: /*#__PURE__*/_jsx(BaseModal, {\n        show: showOffcanvas,\n        ref: ref,\n        backdrop: backdrop,\n        container: container,\n        keyboard: keyboard,\n        autoFocus: autoFocus,\n        enforceFocus: enforceFocus && !scroll,\n        restoreFocus: restoreFocus,\n        restoreFocusOptions: restoreFocusOptions,\n        onEscapeKeyDown: onEscapeKeyDown,\n        onShow: onShow,\n        onHide: handleHide,\n        onEnter: handleEnter,\n        onEntering: onEntering,\n        onEntered: onEntered,\n        onExit: onExit,\n        onExiting: onExiting,\n        onExited: handleExited,\n        manager: getModalManager(),\n        transition: DialogTransition,\n        backdropTransition: BackdropTransition,\n        renderBackdrop: renderBackdrop,\n        renderDialog: renderDialog\n      })\n    })]\n  });\n});\nOffcanvas.displayName = 'Offcanvas';\nexport default Object.assign(Offcanvas, {\n  Body: OffcanvasBody,\n  Header: OffcanvasHeader,\n  Title: OffcanvasTitle\n});"],"names":["_ref","data","_jsx","className","children","_jsxs","src","errorImg","number","setPage","page","useDispatch","handlePageChange","pageNumber","_Fragment","Pagination","Prev","onClick","disabled","renderPaginationItems","paginationItems","i","push","Item","active","Ellipsis","Math","max","min","Next","item","end_time","start_time","memo","report_date","FiCalendar","FaRegClock","moment","format","currentDetails","selectedPeriod","role","updateWeeklyData","setUpdateWeeklyData","useState","contractDetails","user_details","endDate","startDate","timeReports","weeklyDetails","monthlyDetails","week","month","totalDuration","useEffect","undefined","_monthlyDetails$","console","log","profile_picture","name","class","map","index","MemoWithTimeReport","toFixed","Tab","Container","id","defaultActiveKey","onSelect","select","montData","find","Nav","variant","Link","eventKey","Content","Pane","approveRemark","Tooltip","rejectRemark","handleChangeUpdateWeeklyData","dispatch","editDetails","setEditDetails","editItem","isEdit","reconciliationData","setReconcilitationData","contract_id","approvedReject","async","reconciliation_id","client_remark","is_approved","currentStatus","approveTimeReportReconciliation","rejectTimeReportReconciliation","filterData","timeReporting","reconciliation_approved","TiEdit","OverlayTrigger","placement","overlay","Button","IoCheckmark","IoCloseOutline","type","value","onChange","e","remarkshow","handleremarkClose","contractId","allSelectedTimeReport","addRemark","setRemark","reconciallationData","setReconciallationData","smallLoader","reconciliationsData","useSelector","state","clientData","target","temp","JSON","parse","stringify","Offcanvas","show","onHide","Header","closeButton","Title","Body","ReconciliationModal","RexettButton","text","handleReconciliationSend","modifiedPayload","filter","curElem","isEdited","_ref2","rest","Number","length","postReconciliationData","isLoading","headerColumn","setShow","setContractID","isAnyReportEmpty","setIsAnyReportEmpty","selectedApprovedBtn","setSelectedApprovedBtn","approvedConfirmation","setApprovedConfirmation","isApproved","approvedId","setCurrentDetails","handleShow","isOff","is_off_day","memoDetails","newData","viewremark","setremarkShow","filterReportDataByDate","reportData","today","Date","toISOString","split","entry","is_holiday","approvedLoader","developerData","currentTextData","concat","ScreenLoader","_item$contractDetails","_item$contractDetails2","_item$contractDetails3","_item$contractDetails4","_item$contractDetails5","_item$contractDetails6","_item$timeReports","_item$contractDetails7","_item$contractDetails8","userImage","alt","reprt","inx","is_public_holiday","holiday_name","is_off_week","duration","is_off_month","handleremarkShow","_newData$contractDeta","_data$contractDetails","getReconciliationData","remarks","remarkIcon","_item$contractDetails9","findIndex","isAnyTimeReportingEmpty","colSpan","NoDataFound","handleClose","SingleTimeReporting","TimeReportRemark","ConfirmationModal","handleCloseApproveModal","preventDefault","payload","approvedClient","Guidelines","heading","guideLines","TIME_REPORTING","timeReportingData","handleShowModal","setSelectedPeriod","selectedFilter","setSelectedFilter","selectedWeek","setSelectedWeek","selectedYear","setSelectedYear","selectedMonth","setSelectedMonth","selectedView","setSelectedView","t","useTranslation","screenLoader","timeReportingPage","handleChange","selectedValue","Form","Select","selected","yearOption","monthOptions","opt","label","weekOptions","year","Object","keys","selectedPeriodValue","handlePeriodChange","RexettTable","weeklyTimeReports","totalPages","RexettPagination","lines","handleAction","Modal","centered","animation","Group","Label","status","matchersByWindow","WeakMap","getMatcher","query","targetWindow","matchers","get","Map","set","mql","matchMedia","refCount","media","useMediaQuery","arguments","window","matches","setMatches","addListener","removeListener","delete","breakpointValues","names","and","next","getMaxQuery","breakpoint","indexOf","getNext","breakpointOrMap","direction","breakpointMap","useMemo","entries","reduce","key","getMinQuery","createBreakpointHook","xs","sm","md","lg","xl","xxl","OffcanvasBody","React","ref","bsPrefix","as","Component","props","useBootstrapPrefix","classNames","displayName","transitionStyles","ENTERING","ENTERED","OffcanvasToggling","in","inProp","mountOnEnter","unmountOnExit","appear","TransitionWrapper","addEndListener","transitionEndListener","childRef","innerProps","EXITING","OffcanvasHeader","closeLabel","AbstractModalHeader","DivStyledAsH5","divWithClassName","OffcanvasTitle","DialogTransition","BackdropTransition","Fade","ariaLabelledby","responsive","backdrop","keyboard","scroll","onEscapeKeyDown","onShow","container","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","manager","propsManager","renderStaticNode","modalManager","useRef","onToggle","useContext","NavbarContext","showOffcanvas","setShowOffcanvas","hideResponsiveOffcanvas","useBreakpoint","handleHide","useEventCallback","modalContext","renderBackdrop","useCallback","backdropProps","renderDialog","dialogProps","ModalContext","Provider","BaseModal","node","style","visibility","_len","args","Array","_key","_len2","_key2","current","BootstrapModalManager","handleContainerOverflow","getSharedManager","transition","backdropTransition","assign"],"sourceRoot":""}
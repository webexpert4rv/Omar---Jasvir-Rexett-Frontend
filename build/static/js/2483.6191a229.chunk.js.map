{"version":3,"file":"static/js/2483.6191a229.chunk.js","mappings":"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","sources":["pages/admin/Modals/UploadInvoice.jsx","pages/admin/AdminTimeReporting.jsx","pages/admin/Modals/EditTimeReportModal.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { createNewFolderAndFile, filePreassignedUrlGenerate } from \"../../../redux/slices/clientDataSlice\";\r\nimport RexettButton from \"../../../components/atomic/RexettButton\";\r\nimport { MdPictureAsPdf } from \"react-icons/md\";\r\nconst UploadInvoice = ({ show, handleClose,contractId ,role}) => {\r\n    const [selectedFile, setSelectedFile] = useState(null)\r\n    const dispatch = useDispatch()\r\n    const { smallLoader } = useSelector(state => state.clientData);\r\n    const {\r\n        register,\r\n        setValue,\r\n        handleSubmit,\r\n        formState: { errors, isDirty, isValid, isSubmitting },\r\n    } = useForm({});\r\n\r\n    const onSubmit = (values) => {\r\n        console.log(values?.file?.type, \"values\");\r\n    \r\n       \r\n         if (values.category === \"3\" && values.file_name[0].type !== \"application/pdf\") {\r\n            alert(\"Only PDF files are allowed for Invoices category.\");\r\n            return; \r\n        }\r\n    \r\n        let fileData = new FormData();\r\n        fileData.append(\"file\", selectedFile);\r\n    \r\n        dispatch(filePreassignedUrlGenerate(fileData, (url) => {\r\n            let data = {\r\n                \"contract_id\": contractId,\r\n                \"file_type\": 0,\r\n                \"parent_id\": 0,\r\n                \"type\": values.category,\r\n                \"s3_path\": url,\r\n                \"file_extension\": \"pdf\" \r\n            };\r\n            dispatch(createNewFolderAndFile(data, () => {\r\n                handleClose();\r\n            }));\r\n        }));\r\n    };\r\n    return (\r\n        <Modal show={show} onHide={handleClose} centered animation size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Upload File</Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <form onSubmit={handleSubmit(onSubmit)} noValidate>\r\n                    <div className=\"experience-container\">\r\n                        <Row>\r\n                            <Col md=\"12\">\r\n                                <Form.Group className=\"mb-4\">\r\n                                    <Form.Label>Select Category</Form.Label>\r\n                                   { role ===\"admin\" ?  <Form.Select\r\n                                        {...register(\"category\", { required: \"Please select a Category\" })}\r\n                                    >\r\n                                        <option value=\"\" selected disabled>Select Category</option>\r\n                                        <option value=\"3\">Invoices</option>\r\n                                    </Form.Select> : <Form.Select\r\n                                        {...register(\"category\", { required: \"Please select a Category\" })}\r\n                                    >\r\n                                        <option value=\"\" selected disabled>Select Category</option>\r\n                                        <option value=\"3\">Invoices</option>\r\n                                        <option value=\"1\">Contracts</option>\r\n                                        <option value=\"2\">CV</option>\r\n                                        <option value=\"4\">Others</option>\r\n                                    </Form.Select>}\r\n                                    <Form.Control type=\"file\" className=\"d-none\" id=\"upload-file\"\r\n                                        name=\"file_name\"\r\n                                        {...register(\"file_name\", {\r\n                                            onChange: (e) => setSelectedFile(e.target.files[0]),\r\n                                            required: {\r\n                                                value: true,\r\n                                            },\r\n                                        })}\r\n                                    />\r\n                                    <Form.Label htmlFor=\"upload-file\" className=\"upload-file-label\">Upload File</Form.Label>\r\n                                </Form.Group>\r\n                                {selectedFile ? <div>Selected File:<span className=\"fs-6\">{selectedFile?.name}</span></div> : \"\"}\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                        <RexettButton\r\n                            type=\"submit\"\r\n                            text=\"Create\"\r\n                            className=\"main-btn px-4\"\r\n                            variant=\"transparent\"\r\n                            disabled={smallLoader}\r\n                            isLoading={smallLoader}\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\nexport default UploadInvoice;","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { HiUpload } from \"react-icons/hi\";\r\nimport EditTimeReport from \"./Modals/EditTimeReportModal\";\r\nimport UploadInvoice from \"./Modals/UploadInvoice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { adminTimeReporting } from \"../../redux/slices/adminDataSlice\";\r\nimport ScreenLoader from \"../../components/atomic/ScreenLoader\";\r\nimport { getClientList } from \"../../redux/slices/vendorDataSlice\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { IoSearch } from \"react-icons/io5\";\r\nimport NoDataFound from \"../../components/atomic/NoDataFound\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst AdminTimeReporting = () => {\r\n    const dispatch = useDispatch()\r\n    const { adminTimeReportingList, screenLoader, adminClientList } = useSelector(state => state.adminData)\r\n    const { clientList } = useSelector(state => state.vendorData);\r\n    const [contractId, setContractID] = useState(null);\r\n    const [showEditTimeModal, setShowEditTimeModal] = useState(false);\r\n    const [developerData, setDeveloperData] = useState([])\r\n    const { t } = useTranslation()\r\n    const navigate=useNavigate()\r\n\r\n    // useEffect(() => {\r\n    //     let newContacts = [...adminTimeReportingList?.raisedByDeveloperVendor];\r\n    //     let d = newContacts.map((item, index) => {\r\n    //         return {\r\n    //             ...item,\r\n    //             newData: item.contracts[index] ? item.contracts[index] : item.contracts[0]\r\n    //         };\r\n    //     });\r\n\r\n    //     setDeveloperData(d)\r\n\r\n    // }, [adminTimeReportingList])\r\n\r\n\r\n    // useEffect(()=>{\r\n    //     dispatch(getClientList())\r\n    //      },[])\r\n\r\n\r\n    const handleShowEditTimeModal = () => {\r\n        setShowEditTimeModal(true);\r\n    };\r\n    const handleCloseEditTimeModal = () => {\r\n        setShowEditTimeModal(false);\r\n    };\r\n\r\n    const [showUploadInvoice, setShowUploadInvoice] = useState(false);\r\n    const handleShowUploadInvoice = (id) => {\r\n        setShowUploadInvoice(true);\r\n        setContractID(id)\r\n    };\r\n\r\n    const handleCloseUploadInvoice = () => {\r\n        setShowUploadInvoice(false);\r\n    };\r\n    useEffect(() => {\r\n        dispatch(adminTimeReporting())\r\n    }, [])\r\n\r\n    const contractName = (data) => {\r\n        let devName = data.map((item) => {\r\n            return { dev: item?.contractDetails?.developer.name }\r\n        })\r\n        return devName\r\n    }\r\n\r\n    const handleDeveloper = (e, inx) => {\r\n        let newInx = e.target.value\r\n        let newDev = [...developerData]\r\n        newDev[inx].newData = newDev[inx].contracts[newInx]\r\n        setDeveloperData(newDev)\r\n    }\r\n\r\n    const handleClientClick = (e) => {\r\n        dispatch(adminTimeReporting(e))\r\n    }\r\n    \r\n    const redirectToTimeReporting = (clientId) => {\r\n        navigate(`/admin-time-reporting-detail/${clientId}`)\r\n    }\r\n    return (\r\n        <>\r\n            <section>\r\n                <div className=\"filter-section mb-4\">\r\n                    <Form>\r\n                        <div className=\"d-md-flex gap-3 justify-content-between align-items-end\">\r\n                            <div className=\"mb-md-0 mb-3\">\r\n                                {/* <div>\r\n                                    <Form.Select className=\"filter-select shadow-none\" onClick={(e) => handleClientClick(e.target.value)}>\r\n                                        <option value=\"\" selected disabled>{t(\"selectClients\")}</option>\r\n                                        {\r\n                                            adminClientList?.map((item, index) => {\r\n                                                return (<>\r\n                                                    <option key={index} value={item.id}  >{item?.name}</option>\r\n                                                </>)\r\n                                            })\r\n                                        }\r\n                                    </Form.Select>\r\n                                </div> */}\r\n                            </div>\r\n                            <div className=\"d-flex align-items-center gap-3\">\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    className=\"common-field font-14 shadow-none\"\r\n                                    placeholder=\"Enter Keyword...\"\r\n                                />\r\n                                <Button variant=\"transparent\" className=\"main-btn px-3 search-btn\">\r\n                                    <IoSearch />\r\n                                </Button>\r\n                            </div>\r\n                            {/* <div>\r\n                                <Button className=\"main-btn px-5\" onClick={handleShowEditTimeModal}>{t(\"editTimeReport\")}</Button>\r\n                            </div> */}\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n                <div>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table time-table table-bordered table-ui-custom\">\r\n                            <thead>\r\n                                <th className=\"time-table-head\">\r\n                                    {t(\"clientName\")}\r\n                                </th>\r\n                                <th className=\"time-table-head\">\r\n                                    {t(\"totalHiredDevelopers\")}\r\n                                </th>\r\n                                <th className=\"time-table-head\">\r\n                                    {t(\"totalProjects\")}\r\n                                </th>\r\n                                <th className=\"time-table-head\">\r\n                                    {t(\"totalVendorDev\")}\r\n                                </th>\r\n                                <th className=\"time-table-head\">\r\n                                    {t(\"totalIndivisualDev\")}\r\n\r\n                                </th>\r\n                                {/* <th className=\"time-table-head\">\r\n                                    {t(\"contract\")}\r\n                                </th> */}\r\n                            </thead>\r\n                            <tbody>\r\n                                {screenLoader ? <ScreenLoader /> : <>\r\n                                    {adminTimeReportingList?.length > 0 ?\r\n                                        adminTimeReportingList?.map(({client_name,client_id,total_hired_developers,total_individual_dev,total_projects,total_vendors_dev,contracts}, index) => {\r\n                                            return (\r\n                                                <Fragment key={index}>\r\n                                                    <tr key={index} className=\"row-hover\" onClick={()=>{redirectToTimeReporting(client_id)}}>\r\n                                                        <td className=\"time-table-data\">{client_name}</td>\r\n                                                        <td className=\"time-table-data\">{total_hired_developers}</td>\r\n                                                        <td className=\"time-table-data\">{total_projects}</td>\r\n                                                        <td className=\"time-table-data\">{total_vendors_dev}</td>\r\n                                                        <td className=\"time-table-data\">{total_individual_dev}</td>\r\n                                                        {/* <td className=\"time-table-data\">{}</td> */}\r\n                                                    </tr>\r\n                                                </Fragment>\r\n                                            )\r\n                                        })\r\n                                        :<td colSpan={10}> <div className=\"simple-no-data\">  <NoDataFound/></div>  </td>}\r\n                                </>}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div className=\"helper-text-section\">\r\n                        <h3>Guiding You Through: Helpful Text to Navigate Time Reporting</h3>\r\n                        <p>Admin can effortlessly review daily time sheets and promptly raise invoices for clients. Click on any client's name in the table above to delve deeper into their project and time reporting details. Gain insights and manage project progress with precision. Also you can raise invoice for clients and track the invoices for Devs , Vendors and Clients.</p>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <EditTimeReport show={showEditTimeModal} handleClose={handleCloseEditTimeModal} adminTimeReportingList={adminTimeReportingList} />\r\n            <UploadInvoice show={showUploadInvoice} handleClose={handleCloseUploadInvoice} contractId={contractId} role={\"admin\"} />\r\n        </>\r\n    )\r\n}\r\nexport default AdminTimeReporting;","import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport RexettButton from \"../../../components/atomic/RexettButton\";\r\nimport { adminTimeReporting, editTimeReporting } from \"../../../redux/slices/adminDataSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useTranslation } from \"react-i18next\";\r\nconst EditTimeReport = ({ show, handleClose,adminTimeReportingList }) => {\r\n    const [devloperState,setDeveloperState]=useState([])\r\n    const {smallLoader}=useSelector(state=>state.adminData)\r\n    const dispatch =useDispatch()\r\n    const [time,setTime]=useState(null)\r\n    const [hours,setHours]=useState(null)\r\n    const { t } = useTranslation()\r\n\r\n    const handleClient=(e)=>{\r\n     let copyList=[...adminTimeReportingList]\r\n     let findData=copyList.find((item)=>item.client_details.id==e.target.value)\r\n     let devName=findData?.contracts.map((item)=>{\r\n        return { dev:item?.contractDetails?.developer.name,\r\n        time:item?.time_report?.totalDuration,\r\n        contract_id:item?.contractDetails?.id\r\n        }\r\n    })\r\n    setDeveloperState(devName)\r\n    }\r\n\r\n    useEffect(()=>{\r\n      return ()=>{\r\n        setTime(null)\r\n      }\r\n    },[])\r\n\r\n    const handleDeveloper=(e)=>{\r\n    let obj=JSON.parse(e.target.value)\r\n        setTime(obj)\r\n    }\r\n\r\n    const handleEditTime=async (e)=>{\r\n        e.preventDefault()\r\n        if(time==null){\r\n            return \r\n        }\r\n\r\n   let paylaod={\r\n    \"contract_id\": time?.contract_id,\r\n    \"total_hours\": hours\r\n  }\r\n  console.log(time.contractId,\"contractId\");\r\n  await dispatch(editTimeReporting(paylaod))\r\n  dispatch(adminTimeReporting())\r\n  setTime(null)\r\n  \r\n  handleClose()\r\n    }\r\n\r\n    const handleChange=(e)=>{\r\n        setHours(e.target.value)\r\n        setTime({\r\n            ...time,\r\n            time:e.target.value\r\n        })\r\n    }\r\n    return (\r\n        <Modal show={show} onHide={handleClose} centered className=\"custom-modal\" animation>\r\n            <Modal.Header closeButton className=\"border-0 pb-3\">\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <h3 className=\"popup-heading\">{t(\"endTimeReport\")}</h3>\r\n                <Form>\r\n                    <Row>   \r\n                        {/* <Col md=\"12\">\r\n                            <Form.Group className=\"mb-4\">\r\n                                <Form.Select className=\"common-field\" onChange={handleClient}>\r\n                                    <option selected disabled>Select Client</option>\r\n                                     {\r\n                                       adminTimeReportingList?.map((item)=>{\r\n                                        return( <>\r\n                                          <option value={item?.client_details?.id}>{item?.client_details?.name}</option>\r\n                                        </>)\r\n                                       }) \r\n                                     }\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                        </Col> */}\r\n                        <Col md=\"12\">\r\n                            <Form.Group className=\"mb-4\">\r\n                                <Form.Select className=\"common-field\" onChange={handleDeveloper}>\r\n                                    <option selected disabled>Select Developer</option>\r\n                                     {\r\n                                       devloperState?.map((item)=>{\r\n                                        return( <>\r\n                                          <option value={JSON.stringify(item)}>{item?.dev}</option>\r\n                                        </>)\r\n                                       }) \r\n                                     }\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"12\">\r\n                            <Form.Group className=\"mb-4\">\r\n                                <Form.Select className=\"common-field\" onChange={handleDeveloper}>\r\n                                    <option selected disabled>Select Client</option>\r\n                                    <option>Amazon</option>\r\n                                    <option>Google</option>\r\n                                    <option>Volvo</option>\r\n                                    <option>BMW</option>\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                            <Form.Group className=\"mb-4\">\r\n                                <Form.Select className=\"common-field\" onChange={handleDeveloper}>\r\n                                    <option selected disabled>Select Month</option>\r\n                                    <option>January</option>\r\n                                    <option>Feburary</option>\r\n                                    <option>March</option>\r\n                                    <option>April</option>\r\n                                    <option>May</option>\r\n                                    <option>June</option>\r\n                                    <option>July</option>\r\n                                    <option>August</option>\r\n                                    <option>September</option>\r\n                                    <option>October</option>\r\n                                    <option>November</option>\r\n                                    <option>December</option>\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                            <Form.Group className=\"mb-4\">\r\n                                <Form.Select className=\"common-field\" onChange={handleDeveloper}>\r\n                                    <option selected disabled>Select Year</option>\r\n                                    <option>2024</option>\r\n                                    <option>2023</option>\r\n                                    <option>2022</option>\r\n                                    <option>2021</option>\r\n                                    <option>2020</option>\r\n                                    <option>2019</option>\r\n                                    <option>2018</option>\r\n                                    <option>2017</option>\r\n                                    </Form.Select>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"12\">\r\n                            <Form.Group className=\"mb-4\">\r\n                                <Form.Control type=\"text\" className=\"common-field\" placeholder=\"Enter Total Hours\" value={time?.time} name=\"name\" onChange={handleChange} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"12\">\r\n                            <Form.Group className=\"mb-4\">\r\n                                <Form.Control type=\"text\" as=\"textarea\" className=\"common-field\" placeholder=\"Enter reason for edit time sheet\" />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <div className=\"text-center\">\r\n                        <RexettButton\r\n                            type=\"submit\"\r\n                            text=\"Submit\"\r\n                            className=\"main-btn px-4 font-14 fw-semibold\"\r\n                            variant=\"transparent\"\r\n                            onClick={handleEditTime}\r\n                            isLoading={smallLoader}\r\n                        />\r\n                    </div>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\nexport default EditTimeReport;"],"names":["_ref","show","handleClose","contractId","role","selectedFile","setSelectedFile","useState","dispatch","useDispatch","smallLoader","useSelector","state","clientData","register","setValue","handleSubmit","formState","errors","isDirty","isValid","isSubmitting","useForm","_jsxs","Modal","onHide","centered","animation","size","children","_jsx","Header","closeButton","Title","Body","onSubmit","values","_values$file","console","log","file","type","category","file_name","alert","fileData","FormData","append","filePreassignedUrlGenerate","url","data","createNewFolderAndFile","noValidate","className","Row","Col","md","Form","Group","Label","Select","required","value","selected","disabled","Control","id","name","onChange","e","target","files","htmlFor","RexettButton","text","variant","isLoading","AdminTimeReporting","adminTimeReportingList","screenLoader","adminClientList","adminData","clientList","vendorData","setContractID","showEditTimeModal","setShowEditTimeModal","developerData","setDeveloperData","t","useTranslation","navigate","useNavigate","showUploadInvoice","setShowUploadInvoice","useEffect","adminTimeReporting","_Fragment","placeholder","Button","IoSearch","ScreenLoader","length","map","index","client_name","client_id","total_hired_developers","total_individual_dev","total_projects","total_vendors_dev","contracts","Fragment","onClick","colSpan","NoDataFound","EditTimeReport","handleCloseEditTimeModal","UploadInvoice","handleCloseUploadInvoice","devloperState","setDeveloperState","time","setTime","hours","setHours","handleDeveloper","obj","JSON","parse","item","stringify","dev","as","async","preventDefault","paylaod","contract_id","editTimeReporting"],"sourceRoot":""}
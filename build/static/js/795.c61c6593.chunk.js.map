{"version":3,"file":"static/js/795.c61c6593.chunk.js","mappings":"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","sources":["components/atomic/NoDataFound.jsx","components/common/LeaveRequest/ListOfHolidays.jsx","components/common/LeaveRequest/Header.jsx","components/common/LeaveRequest/Tabs.jsx","components/common/LeaveRequest/HeaderTable.jsx","pages/views/Modals/NewEvent.jsx","pages/views/LeaveRequests.jsx","pages/views/Modals/ConfirmationModal.jsx","pages/views/Modals/EndJob.jsx"],"sourcesContent":["import React from 'react'\r\nimport errorImg from '../../assets/img/warning-icon.gif'\r\nconst NoDataFound = ({data}) => {\r\n  return (\r\n    <div className='no-data-container'>\r\n      <div className='no-data'>\r\n        <img src={errorImg} />{data?data:\"No Data Found\"}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NoDataFound","import moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { MONTH_NAME, SELECT_YEAR } from \"../../clients/TimeReporiting/constant\";\r\nimport { TiEdit } from \"react-icons/ti\";\r\nimport { IoCheckmark, IoCloseOutline } from \"react-icons/io5\";\r\nimport ToolTip from \"../Tooltip/ToolTip\";\r\nimport RexettButton from \"../../atomic/RexettButton\";\r\nimport RexettSpinner from \"../../atomic/RexettSpinner\";\r\n\r\nconst ListOfHolidays = ({\r\n  holidayList,\r\n  handleShowEvent,\r\n  handleDelete,\r\n  handleAproveDisapprove,\r\n  approvedLoader,\r\n  selectedIndex,\r\n  selectedRejectIndex\r\n}) => {\r\n  const [data, setData] = useState();\r\n  const [yearData, setYearData] = useState();\r\n  const [selectedMonth, setSelectedMonth] = useState(\"All\");\r\n  const [selectedYear, setSelectedYear] = useState(\"2024\");\r\n  let role = localStorage.getItem(\"role\");\r\n  console.log(selectedIndex,\"selectedIndex\")\r\n\r\n  console.log(holidayList, \"holidaylist\");\r\n  console.log(data, \"data\");\r\n  console.log(selectedIndex,\"selectedindex\")\r\n  console.log(selectedRejectIndex,\"selectedRejectindex\")\r\n\r\n  useEffect(() => {\r\n    const yearDetails = holidayList?.filter(\r\n      (values) => moment(values?.date).year() == \"2024\"\r\n    );\r\n    setYearData(yearDetails);\r\n    setSelectedYear(\"2024\");\r\n    setData(yearDetails);\r\n  }, [holidayList]);\r\n\r\n  const FilteredDeveloperData = data?.filter(\r\n    (values) => values?.is_approved_by_client == true\r\n  );\r\n  console.log(FilteredDeveloperData, \"filterData\");\r\n\r\n  const handleYearFilter = (year) => {\r\n    setSelectedYear(year);\r\n    setSelectedMonth(\"All\");\r\n    const yearDetails = holidayList?.filter(\r\n      (values) => moment(values?.date).year() == year\r\n    );\r\n    setYearData(yearDetails);\r\n    setData(yearDetails);\r\n  };\r\n\r\n  const handleMonthFilter = (month) => {\r\n    setSelectedMonth(month);\r\n    if (month !== \"All\") {\r\n      const selectedMonthHolidays = yearData?.filter(\r\n        (values) =>\r\n          moment(values?.date).month() + 1 == moment(month, \"MMMM\").format(\"M\")\r\n      );\r\n      setData(selectedMonthHolidays);\r\n    } else {\r\n      setData(yearData);\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"\">\r\n      <div className=\"card-box border shadow-none\">\r\n        {role === \"client\" ? (\r\n          <div className=\"mb-0\">\r\n            <Button className=\"main-btn font-14\" onClick={handleShowEvent}>\r\n              + Create New Holiday\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div className=\"d-flex justify-content-between align-items-center\">\r\n          <div className=\"skill-filters\">\r\n            {MONTH_NAME.map((month) => (\r\n              <span\r\n                key={month}\r\n                className={selectedMonth === month ? \"active\" : \"\"}\r\n                onClick={() => handleMonthFilter(month)}\r\n              >\r\n                {month}\r\n              </span>\r\n            ))}\r\n          </div>\r\n\r\n          <Form className=\"d-flex gap-2\">\r\n            <Form.Select\r\n              className=\"common-field font-14 w-auto\"\r\n              onChange={(e) => handleYearFilter(e.target.value)}\r\n              value={selectedYear}\r\n            >\r\n              {/* <option>Select Year</option> */}\r\n              {SELECT_YEAR?.map((item, idx) => (\r\n                <option key={idx}>{item}</option>\r\n              ))}\r\n            </Form.Select>\r\n          </Form>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-ui-custom mb-0\">\r\n            <thead>\r\n              <tr>\r\n                <th>Date</th>\r\n                <th>Name</th>\r\n                {/* <th>Type</th> */}\r\n                {role === \"client\" ? <th>Action</th> : \"\"}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data?.length > 0 ? (\r\n                role === \"developer\"  ? (\r\n                  FilteredDeveloperData?.map((field, idx) => (\r\n                    <>\r\n                      <tr key={idx}>\r\n                        <td className=\"font-14 align-middle\">\r\n                          <strong>{field?.date}</strong>\r\n                        </td>\r\n                        <td className=\"font-14 align-middle\">\r\n                          {field?.name}\r\n                        </td>\r\n                      </tr>\r\n                    </>\r\n                  ))\r\n                ) : (\r\n                  data?.map((holiday, index) => (\r\n                    <tr key={index}>\r\n                      <td className=\"font-14 align-middle\">\r\n                        <strong>{holiday?.date}</strong>\r\n                      </td>\r\n                      <td className=\"font-14 align-middle\">\r\n                        {holiday?.name}\r\n                        {role === \"client\" && holiday?.added_by === \"client\" ? (\r\n                          <span className=\"associate-text\">\r\n                            <span className=\"associate\">Created</span>\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </td>\r\n                      {/* <td className=\"font-14 align-middle\">\r\n                      {holiday.type}\r\n                    </td> */}\r\n                      <td>\r\n                        {role === \"client\" ? (\r\n                          holiday?.added_by === \"system\" ? (\r\n                            holiday?.is_approved_by_client === true ? (\r\n                              <div>\r\n                                <h6>Approved</h6>\r\n                              </div>\r\n                            ) : holiday?.is_approved_by_client === false  ? (\r\n                              <div>\r\n                              <h6>Disapproved</h6>\r\n                            </div>\r\n                            ) :(\r\n                              <div>\r\n                                <div className=\"d-flex gap-2\">\r\n                                  <ToolTip text=\"Approve\">\r\n                                    <RexettButton\r\n                                      variant=\"transparent\"\r\n                                      className=\"px-3 arrow-btn primary-arrow font-16 text-decoration-none\"\r\n                                      isLoading={selectedIndex == index    ?  approvedLoader : false  }   \r\n                                      icon = {selectedIndex == index ? approvedLoader : <IoCheckmark />}\r\n                                      onClick={() =>\r\n                                        handleAproveDisapprove(\r\n                                          holiday?.id,\r\n                                          \"approve\",\r\n                                          index\r\n                                        )\r\n                                      }\r\n                                    >\r\n                                      \r\n                                    </RexettButton>\r\n                                  </ToolTip>\r\n                                  <ToolTip text=\"Disapprove\">\r\n                                    <RexettButton\r\n                                      variant=\"transparent\"\r\n                                      className=\"px-3 arrow-btn danger-arrow font-16 text-decoration-none\"\r\n                                     isLoading={selectedRejectIndex  == index   ?  approvedLoader : false }\r\n                                      // disabled={selectedRejectIndex == index  ? approvedLoader : <IoCloseOutline /> }\r\n                                      icon = {selectedRejectIndex == index ? approvedLoader : <IoCloseOutline />}\r\n                                      onClick={() =>\r\n                                        handleAproveDisapprove(\r\n                                          holiday?.id,\r\n                                          \"disapprove\",\r\n                                          index\r\n                                        )\r\n                                      } \r\n                                    >\r\n                                      \r\n                                      \r\n                                    </RexettButton>\r\n                                  </ToolTip>\r\n                                </div>\r\n                              </div>\r\n                            )\r\n                          ) : (\r\n                            <div className=\"d-flex gap-2\">\r\n                              <ToolTip text=\"Edit\">\r\n                                <Button\r\n                                  variant=\"transparent\"\r\n                                  className=\"px-3 arrow-btn info-arrow font-16 text-decoration-none\"\r\n                                  onClick={() =>\r\n                                    handleShowEvent(holiday?.id, \"edit\")\r\n                                  }\r\n                                >\r\n                                  <TiEdit />\r\n                                </Button>\r\n                              </ToolTip>\r\n                              <ToolTip text=\"Delete\">\r\n                                <Button\r\n                                  variant=\"transparent\"\r\n                                  className=\"px-3 arrow-btn danger-arrow font-16 text-decoration-none\"\r\n                                  onClick={() => handleDelete(holiday?.id)}\r\n                                >\r\n                                  <IoCloseOutline />\r\n                                </Button>\r\n                              </ToolTip>\r\n                            </div>\r\n                          )\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                )\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan=\"3\" className=\"font-14\">\r\n                    <p className=\"text-danger mb-0\">\r\n                      No holidays in this month\r\n                    </p>\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ListOfHolidays;\r\n","import React from \"react\";\r\nimport { Nav, Tab } from \"react-bootstrap\";\r\n\r\nconst Header = ({ data }) => {\r\n  return (\r\n    <div>\r\n      <table className=\"table time-table table-bordered table-ui-custom\">\r\n        <thead>\r\n          {data?.map((item) => (\r\n            <th key={item} value={item} className=\"time-table-head\">\r\n              {item}\r\n            </th>\r\n          ))}\r\n        </thead>\r\n        <tbody></tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport { Nav, Tab } from \"react-bootstrap\";\r\n\r\nconst Tabs = ({ handleSelect, tabText ,currentTab }) => {\r\n  console.log(currentTab,\"currentTab\")\r\n  return (\r\n    <div>\r\n     \r\n        <Tab.Container\r\n          id=\"left-tabs-example\"\r\n          defaultActiveKey={currentTab ? currentTab : \"first\"}\r\n          onSelect={handleSelect}\r\n        >\r\n           {tabText?.map((item, index) => (\r\n          <Nav variant=\"pills\" className=\"mb-4 application-pills\">\r\n            <Nav.Item className=\"application-item\">\r\n              <Nav.Link className=\"application-link\" eventKey={item?.key}>\r\n                {item.value}\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n          </Nav> ))}\r\n\r\n        </Tab.Container>\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tabs;\r\n","import moment from \"moment\";\r\nimport React from \"react\";\r\nimport { Button, OverlayTrigger } from \"react-bootstrap\";\r\nimport { IoCheckmark, IoCloseOutline } from \"react-icons/io5\";\r\nimport associateLogo from \"../../../assets/img/aviox-logo.png\";\r\nimport ToolTip from \"../Tooltip/ToolTip\";\r\nimport { generateLeave } from \"../../clients/TimeReporiting/constant\";\r\nimport NoDataFound from \"../../atomic/NoDataFound\";\r\nimport userImg from \"../../../assets/img/user-img.jpg\";\r\nimport RexettButton from \"../../atomic/RexettButton\";\r\nimport RexettSpinner from \"../../atomic/RexettSpinner\";\r\nimport ScreenLoader from \"../../atomic/ScreenLoader\";\r\n\r\nfunction HeaderTable({\r\n  tableData,\r\n  currentTab,\r\n  handleApproveReject,\r\n  approvedLoader,\r\n  approveIndex,\r\n  screenLoader,\r\n\r\n}) {\r\n  console.log(approveIndex , \"approveINdex\")\r\n  return (\r\n    <div>\r\n      {screenLoader ? <ScreenLoader/> : \r\n      tableData?.length > 0 ? (\r\n        <table className=\"table time-table table-bordered table-ui-custom\">\r\n          <tbody>\r\n            {tableData?.map((item, index) => (\r\n              <tr>\r\n                <td className=\"time-table-data text-start\">\r\n                  <div className=\"d-flex align-items-center gap-2 white-nowrap\">\r\n                    <div className=\"user-imgbx application-userbx\">\r\n                      <img\r\n                        src={\r\n                          item?.contract?.developer?.profile_picture\r\n                            ? item?.contract?.developer?.profile_picture\r\n                            : userImg\r\n                        }\r\n                        className=\"user-img\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"user-imgbx application-imgbx mx-0 mb-0\"></div>\r\n                    {item?.contract?.developer?.name}\r\n                  </div>\r\n                </td>\r\n                <td className=\"time-table-data text-start\">\r\n                  <h4 className=\"leave-type-heading mb-0 white-nowrap\">\r\n                    {generateLeave(item?.type)}\r\n                  </h4>\r\n                </td>\r\n                <td className=\"time-table-data text-start\">\r\n                  <p className=\"leave-date white-nowrap\">\r\n                    {moment(item?.start_date).format(\"MM-DD-YYYY\")} to\r\n                    {moment(item.end_date).format(\"MM-DD-YYYY\")}\r\n                  </p>\r\n                </td>\r\n                <td className=\"time-table-data text-start reason-data\">\r\n                  <p className=\"font-14 mb-0\">{item?.reason_for_leave}</p>\r\n                </td>\r\n                {/* <td className=\"time-table-data text-start white-nowrap\">\r\n                  AI Bot Project\r\n                </td> */}\r\n                {/* <td className=\"time-table-data text-start\">\r\n                  <ToolTip text=\"Aviox Technologies Pvt Ltd\">\r\n                    <div className=\"text-start\">\r\n                      <div className=\"user-imgbx d-inline-block associated-logo application-imgbx mx-0 mb-0\">\r\n                        <img src={associateLogo} className=\"user-img\" />\r\n                        ---\r\n                      </div>\r\n                    </div>\r\n                  </ToolTip>\r\n                </td> */}\r\n                <td className=\"time-table-data text-start\">\r\n                  {currentTab !== \"first\" ? (\r\n                    <span className=\"status-finished\">\r\n                      {item?.approval_status}\r\n                    </span>\r\n                  ) : (\r\n                    <div className=\"d-flex justify-content-start gap-2\">\r\n                      <ToolTip text=\"Approve\">\r\n                        <RexettButton\r\n                          variant=\"transparent\"\r\n                          className=\"px-3 mb-2 arrow-btn primary-arrow font-16 text-decoration-none\"\r\n                          icon={approveIndex == index ? approvedLoader :  <IoCheckmark />}\r\n                          onClick={() =>handleApproveReject(item?.id, \"Approved\", index)}\r\n                          isLoading={  approveIndex == index ? approvedLoader :false } \r\n                        />\r\n                      </ToolTip>\r\n                      <ToolTip text=\"Reject\">\r\n                        <RexettButton\r\n                          variant=\"transparent\"\r\n                          className=\"px-3 mb-2 arrow-btn danger-arrow font-16 text-decoration-none\"\r\n                          icon = { <IoCloseOutline />}\r\n                          onClick={() =>\r\n                            handleApproveReject(item?.id, \"Rejected\" ,index)\r\n                          }\r\n                          // isLoading={  selectedRejectIndex == index ? approvedLoader: false}\r\n                        >\r\n                         \r\n                        </RexettButton>\r\n                      </ToolTip>\r\n                    </div>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <td colSpan={8}>\r\n          <NoDataFound />\r\n        </td>\r\n      )}\r\n    </div> \r\n  );\r\n  \r\n}\r\n\r\nexport default HeaderTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport RexettButton from \"../../../components/atomic/RexettButton\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  getAddHoliday,\r\n  getClientHolidayList,\r\n  updateClientHoliday,\r\n} from \"../../../redux/slices/clientDataSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nconst NewEvent = ({ show, handleClose, status }) => {\r\n  const dispatch = useDispatch();\r\n  const { smallLoader ,btnLoader ,clientHolidayList } = useSelector((state) => state.clientData);\r\n  const {\r\n    register,\r\n    setValue,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors, isDirty, isValid, isSubmitting },\r\n  } = useForm({});\r\n\r\n  useEffect(() => {\r\n    if (status?.status =='edit') {\r\n      const selectedHoliday = clientHolidayList?.find((value) => value.id == status?.id);\r\n      console.log(selectedHoliday,\"selectedHoliday\")\r\n      console.log(status,\"status\")\r\n      setValue(\"name\", selectedHoliday?.name);\r\n      setValue(\"country\", selectedHoliday?.country);\r\n      setValue(\"description\", selectedHoliday?.description);\r\n      setValue(\"date\", selectedHoliday?.date);\r\n    }else{\r\n      reset()\r\n    }\r\n  }, [status, clientHolidayList]);\r\n\r\n  const onSubmit = async (values) => {\r\n    const payload = {\r\n      country: values?.country,\r\n      name: values?.name,\r\n      description: values?.description,\r\n      date: values?.date,\r\n    };\r\n    if (status?.status == \"edit\") {\r\n      await dispatch(updateClientHoliday(payload,status?.id));\r\n      dispatch(getClientHolidayList());\r\n    } else {\r\n      await dispatch(getAddHoliday(payload));\r\n      dispatch(getClientHolidayList());\r\n    }\r\n    handleClose();\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={(e) => handleClose(e)}\r\n      centered\r\n      animation\r\n      className=\"custom-modal\"\r\n    >\r\n      <Modal.Header closeButton className=\"border-0 pb-3\">\r\n        {/* <Modal.Title>End Job</Modal.Title> */}\r\n      </Modal.Header>\r\n\r\n      <Modal.Body>\r\n       {status?.status===\"edit\" ?  <h3 className=\"popup-heading\">Edit Holiday</h3>:<h3 className=\"popup-heading\">Create New Holiday</h3>}\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <Row>\r\n            <Col md={12} className=\"mb-3\">\r\n              <Form.Group>\r\n                <Form.Label className=\"d-block font-14\">\r\n                  Holiday Name\r\n                </Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  className=\"common-field font-14\"\r\n                  {...register(\"name\", {\r\n                    required: {\r\n                      value: true,\r\n                      message: \"Event name is required\",\r\n                    },\r\n                  })}\r\n                />\r\n                <p className=\"error-message\">{errors?.name?.message}</p>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group>\r\n                <Form.Label className=\"d-block font-14\">Country</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  className=\"common-field font-14\"\r\n                  {...register(\"country\", {\r\n                    required: {\r\n                      value: true,\r\n                      message: \"Country is required\",\r\n                    },\r\n                  })}\r\n                />\r\n                <p className=\"error-message\">{errors?.name?.message}</p>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group>\r\n                <Form.Label className=\"d-block font-14\">Description</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  className=\"common-field font-14\"\r\n                  {...register(\"description\", {\r\n                    required: {\r\n                      value: true,\r\n                      message: \"Description is required\",\r\n                    },\r\n                  })}\r\n                />\r\n                <p className=\"error-message\">{errors?.name?.message}</p>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group>\r\n                <Form.Label className=\"d-block font-14\">Date</Form.Label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  className=\"common-field font-14\"\r\n                  min={new Date().toISOString().split(\"T\")[0]}\r\n                  {...register(\"date\", {\r\n                    required: {\r\n                      value: true,\r\n                      message: \"Date is required\",\r\n                    },\r\n                  })}\r\n                />\r\n                <p className=\"error-message\">{errors?.date?.message}</p>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={12}>\r\n              <div className=\"d-flex align-items-center gap-2 justify-content-center\">\r\n                <div className=\"text-center \">\r\n                  <RexettButton\r\n                    type=\"submit\"\r\n                    text=\"Submit\"\r\n                    isLoading={smallLoader}\r\n                    disabled={smallLoader}\r\n                    className=\"main-btn px-4 me-2 font-14 fw-semibold\"\r\n                    variant=\"transparent\"\r\n                  />\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  {\" \"}\r\n                  <RexettButton\r\n                    type=\"button\"\r\n                    variant=\"transparent\"\r\n                    onClick={handleClose}\r\n                    text=\"Cancel\"\r\n                    isLoading={btnLoader}\r\n                    className=\"outline-main-btn font-14 fw-semibold bg-transparent border-black text-black px-4\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\nexport default NewEvent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport associateLogo from \"../../assets/img/aviox-logo.png\";\r\nimport userImage from \"../../assets/img/user-img.jpg\";\r\nimport { IoCheckmark } from \"react-icons/io5\";\r\nimport { IoCloseOutline } from \"react-icons/io5\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getLeaveHistory } from \"../../redux/slices/developerDataSlice\";\r\nimport Header from \"../../components/common/LeaveRequest/Header\";\r\nimport Tabs from \"../../components/common/LeaveRequest/Tabs\";\r\nimport HeaderTable from \"../../components/common/LeaveRequest/HeaderTable\";\r\nimport { Row, Col, Button, Form, Tab, Nav } from \"react-bootstrap\";\r\nimport {\r\n  clientDeleteHoliday,\r\n  getClientLeaveHistory,\r\n  getClientLeaveStatus,\r\n} from \"../../redux/slices/clientDataSlice\";\r\nimport { HEADER } from \"../../components/clients/TimeReporiting/constant\";\r\nimport { tabText } from \"../../components/clients/TimeReporiting/constant\";\r\nimport RejectModal from \"./Modals/EndJob\";\r\nimport ScreenLoader from \"../../components/atomic/ScreenLoader\";\r\nimport {\r\n  getApproveDisapprove,\r\n  getClientHolidayList,\r\n} from \"../../redux/slices/clientDataSlice\";\r\nimport { TiEdit } from \"react-icons/ti\";\r\nimport Calendar from \"react-calendar\";\r\nimport NewEvent from \"./Modals/NewEvent\";\r\nimport ListOfHolidays from \"../../components/common/LeaveRequest/ListOfHolidays\";\r\nimport ToolTip from \"../../components/common/Tooltip/ToolTip\";\r\nimport moment from \"moment\";\r\nimport ConfirmationModal from \"./Modals/ConfirmationModal\";\r\n\r\nconst LeaveRequest = () => {\r\n  const dispatch = useDispatch();\r\n  const [currentTab, setCurrentTab] = useState(\"first\");\r\n  const { clientHolidayList } = useSelector((state) => state.clientData);\r\n  const [selectedIndex, setSelectedIndex] = useState(null);\r\n  const [selectedRejectIndex , setSelectedRejectIndex] = useState(null)\r\n  const [approveIndex , setApproveIndex] =  useState(null)\r\n  const [status, setStatus] = useState({\r\n    id: \"\",\r\n    status: \"\",\r\n  });\r\n  const { screenLoader, approvedLoader, smallLoader, clientLeaveHistory } =useSelector((state) => state.clientData);\r\n  const [leaveId, setLeaveId] = useState();\r\n  const [deleteShowModal, setDeleteShowModal] = useState(false);\r\n  const [showRejectModal, setShowRejectModal] = useState(false);\r\n  const [deleteId, setDeleteId] = useState();\r\n  const handleSelect = (selectedTab) => {\r\n    setCurrentTab(selectedTab);\r\n  };\r\n\r\n \r\n  console.log(deleteId, \"deleteId\");\r\n  const handleCloseDeleteModal = () => {\r\n    setDeleteShowModal(false);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setShowRejectModal(false);\r\n  };\r\n  const handleClick = async (e, reason) => {\r\n    let payload = {\r\n      leaveId: leaveId,\r\n      approval_status: \"Not Approved\",\r\n      rejection_reason: reason,\r\n    };\r\n    await dispatch(getClientLeaveStatus(payload));\r\n    let data = {\r\n      approval_status: \"Under Approval\",\r\n    };\r\n    dispatch(getClientLeaveHistory(data));\r\n    setShowRejectModal(!showRejectModal);\r\n  };\r\n\r\n  const handleApproveReject = async (id, status, index) => {\r\n    console.log(status,\"status\")\r\n    console.log(index,\"index\")\r\n      setApproveIndex(index);\r\n      setLeaveId(id);\r\n    if (status === \"Approved\") {\r\n      let payload = {\r\n        leaveId: id,\r\n        approval_status: status,\r\n        rejection_reason: null,\r\n      };\r\n      await dispatch(getClientLeaveStatus(payload));\r\n      let data = {\r\n        approval_status: \"Under Approval\",\r\n      };\r\n      dispatch(getClientLeaveHistory(data));\r\n    } else {\r\n      setShowRejectModal(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let data;\r\n    if (currentTab === \"first\") {\r\n      data = {\r\n        approval_status: \"Under Approval\",\r\n      };\r\n    } else if (currentTab === \"second\") {\r\n      data = {\r\n        approval_status: \"Not Approved\",\r\n      };\r\n    } else if (currentTab === \"third\") {\r\n      data = {\r\n        approval_status: \"Approved\",\r\n      };\r\n    } else {\r\n      data = {\r\n        approval_status: \"Withdrawn\",\r\n      };\r\n    }\r\n    console.log(data,\"data\")\r\n    dispatch(getClientLeaveHistory(data));\r\n  }, [currentTab]);\r\n\r\n  const tableHeader = () => {\r\n    if (currentTab === \"first\") {\r\n      HEADER[HEADER.length - 1] = \"Action\";\r\n    } else {\r\n      HEADER[HEADER.length - 1] = \"Leave Status\";\r\n    }\r\n    return HEADER;\r\n  };\r\n\r\n  const [showEvent, setShowEvent] = useState(false);\r\n  const handleShowEvent = (id, status) => {\r\n    setShowEvent(!showEvent);\r\n    setStatus({\r\n      id: id,\r\n      status: status,\r\n    });\r\n  };\r\n  const handleCloseEvent = () => {\r\n    setShowEvent(false);\r\n  };\r\n  useEffect(() => {\r\n    dispatch(getClientHolidayList());\r\n  }, []);\r\n\r\n  const handleAproveDisapprove = async (id, status, idx) => {\r\n    if(status== \"disapprove\"){\r\n    setSelectedRejectIndex(idx)\r\n    }else {\r\n    setSelectedIndex(idx);\r\n    }\r\n    const payload = {\r\n      action: status,\r\n    };\r\n    await dispatch(getApproveDisapprove(payload, id));\r\n    let data = {\r\n      approval_status: \"Under Approval\",\r\n    };\r\n    dispatch(getClientHolidayList(data));\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    setDeleteShowModal(!deleteShowModal);\r\n    setDeleteId(id);\r\n  };\r\n  const handleAction = async (e) => {\r\n    e.preventDefault();\r\n    await dispatch(clientDeleteHoliday(deleteId));\r\n    dispatch(getClientHolidayList());\r\n    setDeleteShowModal(false);\r\n  };\r\n\r\n  const listHolidays = (data) => {\r\n    const holidays = data?.map((value) => new Date(value?.date));\r\n    return holidays;\r\n  };\r\n\r\n  const [value, onChange] = useState(new Date());\r\n  // Define the dates you want to mark\r\n  const markedDates = listHolidays(clientHolidayList);\r\n\r\n  // Function to add custom content to tile\r\n  const tileContent = ({ date, view }) => {\r\n    const holidayForDate = clientHolidayList.find((holiday) => {\r\n      return new Date(holiday.date).toDateString() === date.toDateString();\r\n    });\r\n\r\n    if (\r\n      view === \"month\" &&\r\n      markedDates.find((d) => d.toDateString() === date.toDateString())\r\n    ) {\r\n      return (\r\n        <ToolTip text={holidayForDate?.name}>\r\n          <div className=\"dot\"></div>\r\n        </ToolTip>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tab.Container\r\n        id=\"left-tabs-example\"\r\n        defaultActiveKey=\"devleave-request\"\r\n        // onSelect={handleSelect}\r\n      >\r\n        <Nav variant=\"pills\" className=\"mb-4 application-pills\">\r\n          <Nav.Item className=\"application-item\">\r\n            <Nav.Link className=\"application-link\" eventKey=\"devleave-request\">\r\n              Leave Request\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item className=\"application-item\">\r\n            <Nav.Link className=\"application-link\" eventKey=\"public-holiday\">\r\n              Public Holiday\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n        <Tab.Content>\r\n          <Tab.Pane eventKey=\"devleave-request\">\r\n            <Tabs\r\n              handleSelect={handleSelect}\r\n              tabText={tabText}\r\n              currentTab={currentTab}\r\n            />\r\n            <Header data={tableHeader()} />\r\n            <HeaderTable\r\n              tableData={clientLeaveHistory}\r\n              currentTab={currentTab}\r\n              handleApproveReject={handleApproveReject}\r\n              approvedLoader={approvedLoader}\r\n              approveIndex={approveIndex}\r\n              screenLoader={screenLoader}\r\n            />\r\n            {showRejectModal && (\r\n              <RejectModal\r\n                show={showRejectModal}\r\n                handleClose={handleClose}\r\n                header={\"Rejection Reason\"}\r\n                feedbacks={\"Reasons\"}\r\n                submit={\"Submit\"}\r\n                handleClick={handleClick}\r\n                smallLoader={smallLoader}\r\n              />\r\n            )}\r\n          </Tab.Pane>\r\n          <Tab.Pane eventKey=\"public-holiday\">\r\n            <ListOfHolidays\r\n              onChange={onChange}\r\n              value={value}\r\n              tileContent={tileContent}\r\n              holidayList={clientHolidayList}\r\n              handleShowEvent={handleShowEvent}\r\n              handleDelete={handleDelete}\r\n              handleAproveDisapprove={handleAproveDisapprove}\r\n              selectedIndex={selectedIndex}\r\n              selectedRejectIndex = {selectedRejectIndex}\r\n              approvedLoader = {approvedLoader}\r\n            />\r\n          </Tab.Pane>\r\n          <NewEvent\r\n            show={showEvent}\r\n            handleClose={handleCloseEvent}\r\n            status={status}\r\n          />\r\n          <ConfirmationModal\r\n            show={deleteShowModal}\r\n            handleClose={handleCloseDeleteModal}\r\n            onClick={handleAction}\r\n            smallLoader={smallLoader}\r\n            text={\"Are you sure, you want to delete this holiday\"}\r\n          />\r\n        </Tab.Content>\r\n      </Tab.Container>\r\n    </>\r\n  );\r\n};\r\nexport default LeaveRequest;\r\n","import React from \"react\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport RexettButton from \"../../../components/atomic/RexettButton\";\r\nimport { clientDeleteHoliday, getClientHolidayList } from \"../../../redux/slices/clientDataSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nconst ConfirmationModal = ({ text,show, handleClose,onClick ,handleAction,smallLoader,type,startDate,endDate}) => {\r\n    const callBackBtn=(e )=>{\r\n        let data={\r\n            status: type,\r\n        }\r\n        onClick(e,data)\r\n    }\r\n    return(\r\n        <Modal show={show} onHide={(e)=>handleClose(e)} centered animation className=\"custom-modal\">\r\n            <Modal.Header closeButton className=\"border-0 pb-3\">\r\n            {/* <Modal.Title>End Job</Modal.Title> */}\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group className=\"mb-4\">\r\n                        <Form.Label className=\"d-block text-center\">{text}</Form.Label>\r\n                    </Form.Group>\r\n                    <div className=\"text-center\">\r\n                        <RexettButton\r\n                            type=\"submit\"\r\n                            text=\"Yes\"\r\n                            onClick={type ? callBackBtn : handleAction}\r\n                            // onClick={callBackBtn}\r\n                            className=\"main-btn px-4 me-3 font-14 fw-semibold\"\r\n                            variant=\"transparent\"\r\n                            disabled={smallLoader}\r\n                            isLoading={smallLoader}\r\n                        />\r\n                        <Button variant=\"transparent\" onClick={handleClose} className=\"outline-main-btn font-14 fw-semibold bg-transparent border-black text-black px-4\" >No</Button>\r\n                    </div>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\nexport default ConfirmationModal;","import React, { useState } from \"react\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport RexettSpinner from \"../../../components/atomic/RexettSpinner\";\r\nimport { useStateManager } from \"react-select\";\r\nconst RejectModal = ({\r\n  show,\r\n  handleClose,\r\n  handleClick,\r\n  smallLoader,\r\n  header,\r\n  feedbacks,\r\n  submit,\r\n}) => {\r\n  const [feedback, setFeedback] = useState(\"\");\r\n  const handleFeedback = (e) => {\r\n    setFeedback(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={handleClose}\r\n      centered\r\n      className=\"custom-modal\"\r\n      animation\r\n    >\r\n      <Modal.Header closeButton className=\"border-0 pb-3\"></Modal.Header>\r\n\r\n      <Modal.Body>\r\n        <h3 className=\"popup-heading\">{header} </h3>\r\n        <Form>\r\n          <Form.Group className=\"mb-4\">\r\n            <Form.Label>{feedbacks}</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows=\"6\"\r\n              placeholder={\r\n                feedbacks === \"Reasons\"\r\n                  ? \"Enter your reason, why you want to reject the leave ?\"\r\n                  : \"Enter your feedback, why you want to reject?\"\r\n              }\r\n              onChange={handleFeedback}\r\n              required\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <div className=\"text-center\">\r\n            <Button\r\n              variant=\"transparent\"\r\n              className=\"main-btn px-4\"\r\n              onClick={(e) => {\r\n                let data;\r\n                if (feedbacks === \"Reasons\") {\r\n                  data = feedback\r\n                } else {\r\n                  data = {\r\n                    status: \"ended\",\r\n                    end_reason: feedback,\r\n                  };\r\n                }\r\n                handleClick(e, data);\r\n              }}\r\n              disabled={feedback?.length === 0}\r\n            >\r\n              {smallLoader ? <RexettSpinner /> : submit}\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\nexport default RejectModal;\r\n"],"names":["_ref","data","_jsx","className","children","_jsxs","src","errorImg","holidayList","handleShowEvent","handleDelete","handleAproveDisapprove","approvedLoader","selectedIndex","selectedRejectIndex","setData","useState","yearData","setYearData","selectedMonth","setSelectedMonth","selectedYear","setSelectedYear","role","localStorage","getItem","console","log","useEffect","yearDetails","filter","values","moment","date","year","FilteredDeveloperData","is_approved_by_client","Button","onClick","MONTH_NAME","map","month","selectedMonthHolidays","format","handleMonthFilter","Form","Select","onChange","e","handleYearFilter","target","value","SELECT_YEAR","item","idx","length","field","_Fragment","name","holiday","index","added_by","ToolTip","text","RexettButton","variant","isLoading","icon","IoCheckmark","id","IoCloseOutline","TiEdit","colSpan","handleSelect","tabText","currentTab","Tab","Container","defaultActiveKey","onSelect","Nav","Item","Link","eventKey","key","tableData","handleApproveReject","approveIndex","screenLoader","ScreenLoader","_item$contract","_item$contract$develo","_item$contract2","_item$contract2$devel","_item$contract3","_item$contract3$devel","contract","developer","profile_picture","userImg","generateLeave","type","start_date","end_date","reason_for_leave","approval_status","NoDataFound","_errors$name","_errors$name2","_errors$name3","_errors$date","show","handleClose","status","dispatch","useDispatch","smallLoader","btnLoader","clientHolidayList","useSelector","state","clientData","register","setValue","handleSubmit","reset","formState","errors","isDirty","isValid","isSubmitting","useForm","selectedHoliday","find","country","description","Modal","onHide","centered","animation","Header","closeButton","Body","onSubmit","async","payload","updateClientHoliday","getClientHolidayList","getAddHoliday","Row","Col","md","Group","Label","Control","required","message","min","Date","toISOString","split","disabled","LeaveRequest","setCurrentTab","setSelectedIndex","setSelectedRejectIndex","setApproveIndex","setStatus","clientLeaveHistory","leaveId","setLeaveId","deleteShowModal","setDeleteShowModal","showRejectModal","setShowRejectModal","deleteId","setDeleteId","getClientLeaveHistory","showEvent","setShowEvent","markedDates","holidays","listHolidays","Content","Pane","Tabs","selectedTab","HEADER","HeaderTable","rejection_reason","getClientLeaveStatus","RejectModal","header","feedbacks","submit","handleClick","reason","ListOfHolidays","tileContent","view","holidayForDate","toDateString","d","action","getApproveDisapprove","NewEvent","handleCloseEvent","ConfirmationModal","handleCloseDeleteModal","preventDefault","clientDeleteHoliday","handleAction","startDate","endDate","feedback","setFeedback","as","rows","placeholder","end_reason","RexettSpinner"],"sourceRoot":""}
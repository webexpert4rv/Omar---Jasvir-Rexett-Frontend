{"version":3,"file":"static/js/8705.27bcc68d.chunk.js","mappings":"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","sources":["pages/views/EditProfile.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Nav, Tab } from \"react-bootstrap\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport AllRoleEditProfile from \"../../components/common/EditProfile/AllRoleEditProfile\";\r\nimport ProfileWrapper from \"../../components/common/EditProfile/ProfileWrapper\";\r\nimport CompanyProfile from \"../../components/common/EditProfile/CompanyProfile\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCoutriesList, getCitiesList, getStatesList, getTimeZoneForCountry } from \"../../redux/slices/clientDataSlice\";\r\nimport { fileUploadForWeb, getDeveloperProfileDetails } from \"../../redux/slices/developerDataSlice\";\r\nimport { developerRegistration } from \"../../redux/slices/developerDataSlice\";\r\nimport { getDeveloperActiveStepFields, getStepDataFromAPI, getActiveStepFields, getClientEditFields } from \"../Registration flows/registrationConstant\";\r\nimport { clientRegistration } from \"../../redux/slices/clientDataSlice\";\r\nimport { getClientProfileDetails } from \"../../redux/slices/clientDataSlice\";\r\n\r\nconst EditProfile = () => {\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    control,\r\n    reset,\r\n    formState: { errors },\r\n    watch,\r\n    setError,\r\n    setValue,\r\n    clearErrors,\r\n  } = useForm({});\r\n  const dispatch = useDispatch()\r\n  const { smallLoader, clientProfileData } = useSelector(\r\n    (state) => state?.clientData\r\n  );\r\n  const [previewImage, setPreviewImage] = useState({\r\n    profile_picture: \"\",\r\n    resume: \"\",\r\n    introVideo: \"\",\r\n  });\r\n  const { t } = useTranslation();\r\n  let userId = localStorage.getItem(\"userId\")\r\n  const [imageFile, setImageFile] = useState({\r\n    resume: \"\",\r\n    introVideo: \"\",\r\n  });\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(values, \"vaues\");\r\n    const uploadFiles = (files) => {\r\n      let uploadedUrls = {};\r\n      const uploadPromises = Object.keys(files).map((key) => {\r\n        if (files[key]) {\r\n          let fileData = new FormData();\r\n          fileData.append(\"file\", files[key]);\r\n          return new Promise((resolve) => {\r\n            dispatch(\r\n              fileUploadForWeb(fileData, (url) => {\r\n                console.log(url, `${key} url`);\r\n                uploadedUrls[key] = url;\r\n                resolve();\r\n              })\r\n            );\r\n          });\r\n        } else {\r\n          return Promise.resolve(); // Resolve immediately if no file to upload\r\n        }\r\n      });\r\n\r\n      Promise.all(uploadPromises).then(() => {\r\n        let payload = {\r\n          user_id: userId,\r\n          first_name: values?.first_name,\r\n          last_name: values?.last_name,\r\n          profile_picture: uploadedUrls?.profile_picture,\r\n          profession: values?.profession,\r\n          email: values?.email,\r\n          country: values?.country_code?.label,\r\n          address: values?.address,\r\n          previous_password: values?.previous_password,\r\n          password: values?.password,\r\n          language_preference: values?.language_preference?.value,\r\n          total_experience: values?.total_experience,\r\n          city: null,\r\n          cin: values?.cin,\r\n          state: values?.state_iso_code?.label,\r\n          country_iso_code: values?.country_iso_code?.value,\r\n          state_iso_code: values?.state_iso_code?.value,\r\n          passcode: values?.passcode,\r\n          country_code: values?.country_code.value,\r\n          phone_number: values?.phone_number,\r\n          language_proficiency: values?.language_proficiency,\r\n          time_zone: values?.time_zone?.label,\r\n          resume: uploadedUrls?.resume,\r\n          linkedin_url: values?.linked_in,\r\n          github_url: values?.git_hub,\r\n          intro_video_url: uploadedUrls?.introVideo,\r\n          user_id: userId,\r\n          company_name: values?.company_name,\r\n          tax_id: values?.tax_id,\r\n          establishment_year: values?.establishment_year,\r\n          website_url: values?.website_url,\r\n          yearly_revenue: values?.yearly_revenue,\r\n          employee_strength: values?.employee_strength,\r\n          is_2FA_enabled: values?.is_2FA_enabled,\r\n        };\r\n        dispatch(clientRegistration(payload));\r\n      });\r\n    };\r\n    uploadFiles({\r\n      resume: imageFile.resume,\r\n      introVideo: imageFile.introVideo,\r\n      profile_picture: imageFile.profile_picture,\r\n    });\r\n  }\r\n  const watchAllFields = watch();\r\n  const [screenLoader, setScreenLoader] = React.useState(false); // Assuming screenLoader is a state\r\n\r\n  const activeStep = 1; // Assuming activeStep is defined somewhere\r\n  const nestedActiveStep = 0; // Assuming nestedActiveStep is defined somewhere\r\n\r\n  const activeStepFields = getActiveStepFields(\r\n    activeStep,\r\n  );\r\n  useEffect(() => {\r\n    if (userId) {\r\n      dispatch(getClientProfileDetails(userId));\r\n      dispatch(getCoutriesList());\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (watch(\"country\")?.value) {\r\n      dispatch(getStatesList(watch(\"country\")?.value));\r\n      dispatch(getTimeZoneForCountry(watch(\"country\")?.value));\r\n    }\r\n  }, [watch(\"country\")]);\r\n\r\n  useEffect(() => {\r\n    if (watch(\"state\")?.value) {\r\n      dispatch(getCitiesList(watch(\"country\")?.value, watch(\"state\")?.value));\r\n      setValue(\"city\", null);\r\n    }\r\n  }, [watch(\"state\")]);\r\n\r\n  return (\r\n    <>\r\n      <ProfileWrapper>\r\n        <AllRoleEditProfile role=\"client\" name={\"individual\"} onSubmit={onSubmit} activeStep={activeStep} previewImage={previewImage} imageFile={imageFile} setImageFile={setImageFile} setPreviewImage={setPreviewImage} stepData={clientProfileData} activeStepFields={activeStepFields?.individual} />\r\n      </ProfileWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n"],"names":["EditProfile","handleSubmit","register","control","reset","formState","errors","watch","setError","setValue","clearErrors","useForm","dispatch","useDispatch","smallLoader","clientProfileData","useSelector","state","clientData","previewImage","setPreviewImage","useState","profile_picture","resume","introVideo","t","useTranslation","userId","localStorage","getItem","imageFile","setImageFile","screenLoader","setScreenLoader","React","activeStepFields","getActiveStepFields","useEffect","getClientProfileDetails","getCoutriesList","_watch","_watch2","_watch3","value","getStatesList","getTimeZoneForCountry","_watch4","_watch5","_watch6","getCitiesList","_jsx","_Fragment","children","ProfileWrapper","AllRoleEditProfile","role","name","onSubmit","values","console","log","files","uploadedUrls","uploadPromises","Object","keys","map","key","fileData","FormData","append","Promise","resolve","fileUploadForWeb","url","all","then","_values$country_code","_values$language_pref","_values$state_iso_cod","_values$country_iso_c","_values$state_iso_cod2","_values$time_zone","payload","user_id","first_name","last_name","profession","email","country","country_code","label","address","previous_password","password","language_preference","total_experience","city","cin","state_iso_code","country_iso_code","passcode","phone_number","language_proficiency","time_zone","linkedin_url","linked_in","github_url","git_hub","intro_video_url","company_name","tax_id","establishment_year","website_url","yearly_revenue","employee_strength","is_2FA_enabled","clientRegistration","uploadFiles","activeStep","stepData","individual"],"sourceRoot":""}
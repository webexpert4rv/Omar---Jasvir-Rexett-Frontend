{"version":3,"file":"static/js/2414.ded7a8eb.chunk.js","mappings":"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","sources":["components/atomic/TableComponentOne.jsx","components/common/CommonInvoiceTable.jsx","pages/views/Invoice.jsx"],"sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport paidInvoice from \"../../assets/img/invoice_paid.png\";\r\nimport unpaidInvoice from \"../../assets/img/invoice_unpaid.png\";\r\nimport timeSheetNotApproved from \"../../assets/img/timesheet_notapproved.png\";\r\nimport timeSheetApproved from \"../../assets/img/timesheet_approved.png\";\r\nimport NoDataFound from \"./NoDataFound\";\r\nimport RexettPagination from \"./RexettPagination\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst TableComponentOne = ({ data, columns, page, setPage, totalPages}) => {\r\n  const { t } = useTranslation();\r\n  const downloadtimesheet = <Tooltip id=\"tooltip\">Download Timesheet</Tooltip>;\r\n  const downloadinvoice = <Tooltip id=\"tooltip\">Download Invoice</Tooltip>;\r\n\r\n  const handleDownload = (fileUrl) => {\r\n    if (fileUrl) {\r\n      const newTab = window.open(fileUrl, \"_blank\");\r\n      if (newTab) {\r\n        newTab.focus();\r\n      } else {\r\n        alert(\r\n          \"Please allow pop-ups for this site to download the file in a new tab.\" \r\n        );\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table time-table table-bordered table-ui-custom\">\r\n          <thead>\r\n            {columns?.length > 0 &&\r\n              columns?.map(({ label }, idx) => (\r\n                <th\r\n                  key={idx}\r\n                  className=\"time-table-head text-start text-uppercase\"\r\n                >\r\n                  {label}\r\n                </th>\r\n              ))}\r\n          </thead>\r\n          <tbody>\r\n            {data?.length > 0 ? (\r\n              data?.map((curData, rowIdx) => (\r\n                <tr key={rowIdx}>\r\n                  {columns?.map(\r\n                    ({\r\n                      key,\r\n                      subkey,\r\n                      profilePictureKey,  \r\n                      isStatus,\r\n                      isHours,\r\n                      isAction,\r\n                      timesheetStatusKey,\r\n                      invoiceUrlKey,\r\n                      invoiceStatusKey,\r\n                      timeSheetUrlKey,\r\n                    },index) => (\r\n                      <Fragment key={index}>\r\n                        {profilePictureKey ? (\r\n                          <td className=\"time-table-data text-start\">\r\n                            <div className=\"d-flex align-items-center gap-2\">\r\n                              <div className=\"user-imgbx application-imgbx mx-0 mb-0\">\r\n                                <img\r\n                                  src={\r\n                                    curData?.[key][profilePictureKey]\r\n                                      ? curData[key][profilePictureKey]\r\n                                      : \"/demo-user.png\"\r\n                                  }\r\n                                  className=\"user-img\"\r\n                                />\r\n                              </div>\r\n                              {curData[key][subkey]}\r\n                            </div>\r\n                          </td>\r\n                        ) : isStatus ? (\r\n                          <td className=\"time-table-data text-start\">\r\n                            {curData?.[key]?.[subkey] && (\r\n                              <span\r\n                                className={`white-nowrap text-capitalize ${\r\n                                  curData?.[key]?.[subkey] === \"Progress\" ||\r\n                                  curData?.[key]?.[subkey] === \"progress\"\r\n                                    ? \"status-progress\"\r\n                                    : \"status-finished\"\r\n                                }`}\r\n                              >\r\n                                {curData?.[key]?.[subkey]}\r\n                              </span>\r\n                            )}\r\n                          </td>\r\n                        ) : isAction ? (\r\n                          <td className=\"time-table-data text-start\">\r\n                            <div className=\"d-flex align-items-center gap-2\">\r\n                              <OverlayTrigger\r\n                                placeholder=\"bottom\"\r\n                                overlay={downloadtimesheet}\r\n                              >\r\n                                <img\r\n                                // may be need to check condition after getting data from API\r\n                                  src={curData[timesheetStatusKey]===\"pending\" ? timeSheetNotApproved: timeSheetApproved}\r\n                                  className=\"approved_icon pointer\"\r\n                                  onClick={() => {\r\n                                    handleDownload(curData[timeSheetUrlKey]);\r\n                                  }}\r\n                                />\r\n                              </OverlayTrigger>\r\n                              <OverlayTrigger\r\n                                placeholder=\"bottom\"\r\n                                overlay={downloadinvoice}\r\n                              >\r\n                                <img\r\n                                  src={curData?.[invoiceStatusKey] === \"pending\" ? unpaidInvoice : paidInvoice}\r\n                                  className=\"approved_icon pointer\"\r\n                                  onClick={() => {\r\n                                    handleDownload(curData[invoiceUrlKey]);\r\n                                  }}\r\n                                />\r\n                              </OverlayTrigger>\r\n                            </div>\r\n                          </td>\r\n                        ) : key === \"invoiceMonth\" ? (\r\n                          <td className=\"time-table-data text-start\">\r\n                            <div className=\"d-flex align-items-center gap-2\">\r\n                              {curData?.[key]}\r\n                            </div>\r\n                          </td>\r\n                        ) : (\r\n                          <td className=\"time-table-data text-start\">\r\n                            <div className=\"d-flex align-items-center gap-2\">\r\n                              {curData?.[key]?.[subkey]} {isHours && \"hrs\" }\r\n                            </div>\r\n                          </td>\r\n                        )}\r\n                      </Fragment>\r\n                    )\r\n                  )}\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <td colSpan={10}> <div className=\"simple-no-data\"><NoDataFound /></div>  </td>\r\n            \r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {totalPages > 1 ? (\r\n        <div className=\"d-flex justify-content-between align-items-center mt-3 mb-4\">\r\n          <p className=\"showing-result\">\r\n            {t(\"showing\")} {data?.length} {t(\"results\")}\r\n          </p>\r\n          <RexettPagination number={totalPages} page={page} setPage={setPage} />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TableComponentOne;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n  Col,\r\n  Form,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  addFileInvoice,\r\n  getDeveloperList,\r\n  getClientList,\r\n} from \"../../redux/slices/vendorDataSlice\";\r\nimport { filePreassignedUrlGenerate } from \"../../redux/slices/clientDataSlice\";\r\nimport RexettButton from \"../../components/atomic/RexettButton\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport timeSheetIcon from \"../../assets/img/timesheet_approved.png\";\r\nimport companyLogo from \"../../assets/img/amazon.png\";\r\nimport invoiceIcon from \"../../assets/img/invoice_paid.png\";\r\nimport timeSheetNotApproved from \"../../assets/img/timesheet_notapproved.png\";\r\nimport invoiceUnpaid from \"../../assets/img/invoice_unpaid.png\";\r\nimport { IoSearch } from \"react-icons/io5\";\r\nimport userImage from \"../../assets/img/user-img.jpg\";\r\nimport { RxChevronRight } from \"react-icons/rx\";\r\nimport { convertDateIntoRequiredFormat } from \"../../pages/websiteRegisterForm/developer/developeStepConstant\";\r\n// dummy data\r\n\r\n\r\nconst dummyColumns = {\r\n  projectInfo: [\r\n    // if data is inside different objects  then key and subkey concept will be used otherwise not\r\n    // { label: \"projectName\", key: \"project\", subkey: \"title\" }, //project name can be in title key\r\n    { label: \"projectName\", key: \"projectName\" },\r\n    { label: \"totalHiredDevelopers\", key: \"totalHiredDevelopers\" },\r\n    { label: \"totalInvoiceRaised\", key: \"totalInvoiceRaised\" },\r\n    { label: \"totalHoursSpend\", key: \"totalHoursSpend\", isHours: true },\r\n    { label: \"startDate\", key: \"startDate\", isDate: true },\r\n    { label: \"invoiceMonth\", key: \"invoiceMonth\" },\r\n    { label: \"projectStatus\", key: \"projectStatus\", isStatus: true },\r\n  ],\r\n  developerInfo: [\r\n    {\r\n      label: \"developerName\",\r\n      //   key: \"developers\",\r\n      key: \"developerName\",\r\n      profilePictureKey: \"profile_picture\",\r\n    },\r\n    {\r\n      label: \"totalHoursSpend\",\r\n      key: \"totalHoursSpend\",\r\n      isHours: true,\r\n    },\r\n    {\r\n      label: \"invoiceMonth\",\r\n      key: \"invoiceMonth\",\r\n    },\r\n    {\r\n      // need to change this key\r\n      label: \"projectStatus\",\r\n      key: \"projectStatus\",\r\n      isAction: true,\r\n      invoiceUrlKey: \"invoiceUrl\",\r\n      timesheetUrlKey: \"timesheetUrl\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst CommonInvoiceTable = ({ data, columns }) => {\r\n  const downloadinvoice = <Tooltip id=\"tooltip\">Download Invoice</Tooltip>;\r\n  const downloadtimesheet = <Tooltip id=\"tooltip\">Download Timesheet</Tooltip>;\r\n  const { t } = useTranslation();\r\n  const [expandedRow, setExpandedRow] = useState(null);\r\n  const [arrowActive, setArrowActive] = useState(null);\r\n  const handleRowClick = (index) => {\r\n    setExpandedRow(expandedRow === index ? null : index);\r\n    setArrowActive(index == arrowActive ? null : index);\r\n  };\r\n  const handleDownload = (fileUrl) => {\r\n    if (fileUrl) {\r\n      const newTab = window.open(fileUrl, \"_blank\");\r\n      if (newTab) {\r\n        newTab.focus();\r\n      } else {\r\n        // If the popup blocker prevents opening the new tab\r\n        alert(\r\n          \"Please allow pop-ups for this site to download the file in a new tab.\"\r\n        );\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table time-table table-bordered table-ui-custom\">\r\n        <thead>\r\n          {\r\n            // add columns instead of dummy columns\r\n            dummyColumns?.projectInfo.map(({ label }) => (\r\n              <th className=\"time-table-head text-start\">{t(label)}</th>\r\n            ))\r\n          }\r\n        </thead>\r\n        <tbody>\r\n          {/* {dummyProjects?.projectInfo?.map((curRow, rowIndex) => ( */}\r\n          {data?.map((curRow, rowIndex) => (\r\n            <>\r\n              <tr\r\n                className=\"application-row\"\r\n                onClick={() => handleRowClick(rowIndex)}\r\n              >\r\n                {dummyColumns?.projectInfo?.map(\r\n                  ({ key, subkey, isHours, isDate, isStatus }, index) => (\r\n                    <td key={index} className=\"time-table-data text-start\">\r\n                      {index === 0 && (\r\n                        <span\r\n                          className={\r\n                            arrowActive == rowIndex\r\n                              ? \"row-arrow active\"\r\n                              : \"row-arrow\"\r\n                          }\r\n                        >\r\n                          <RxChevronRight />\r\n                        </span>\r\n                      )}\r\n                      {!subkey && (\r\n                        <>\r\n                          {isDate &&\r\n                            convertDateIntoRequiredFormat(\r\n                              curRow[key],\r\n                              \"DD-MM-YYYY\"\r\n                            )}\r\n                          {isStatus && (\r\n                            <span className=\"status-progress\">Progress</span>\r\n                          )}\r\n                          {!isDate && !isStatus && curRow[key]}{\" \"}\r\n                          {isHours && \" hrs\"}\r\n                        </>\r\n                      )}\r\n                    </td>\r\n                  )\r\n                )}\r\n              </tr>\r\n              {expandedRow === rowIndex && (\r\n                <tr>\r\n                  <td colSpan=\"7\">\r\n                    <div className=\"table-responsive\">\r\n                      <table className=\"table time-table table-bordered table-ui-custom mb-0\">\r\n                        <thead>\r\n                          {dummyColumns?.developerInfo?.map(\r\n                            ({ label }, index) => (\r\n                              <th\r\n                                key={index}\r\n                                className=\"time-table-head text-start\"\r\n                              >\r\n                                {t(label)}\r\n                              </th>\r\n                            )\r\n                          )}\r\n                        </thead>\r\n                        <tbody>\r\n                          {curRow?.developers?.map((curExpandedRow) => (\r\n                            <tr>\r\n                              {dummyColumns?.developerInfo?.map(\r\n                                ({\r\n                                  key,\r\n                                  subkey,\r\n                                  profilePictureKey,\r\n                                  isAction,\r\n                                  isHours,\r\n                                  invoiceUrlKey,\r\n                                  timesheetUrlKey,\r\n                                }) => (\r\n                                  <>\r\n                                    <td className=\"time-table-data text-start\">\r\n                                      {profilePictureKey && (\r\n                                        <div className=\"d-flex align-items-center gap-2\">\r\n                                          <div className=\"user-imgbx application-imgbx mx-0 mb-0\">\r\n                                            <img\r\n                                              src={\r\n                                                curExpandedRow?.[\r\n                                                  profilePictureKey\r\n                                                ]\r\n                                                  ? curExpandedRow?.[\r\n                                                      profilePictureKey\r\n                                                    ]\r\n                                                  : \"/demo-user.png\"\r\n                                              }\r\n                                              className=\"user-img\"\r\n                                            />\r\n                                          </div>\r\n                                          {curExpandedRow?.[key]}\r\n                                        </div>\r\n                                      )}\r\n                                      {isAction && (\r\n                                        <div className=\"d-flex align-items-center gap-2\">\r\n                                          <OverlayTrigger\r\n                                            placeholder=\"bottom\"\r\n                                            overlay={downloadtimesheet}\r\n                                          >\r\n                                            <img\r\n                                              onClick={() => {\r\n                                                handleDownload(\r\n                                                  curExpandedRow?.[\r\n                                                    timesheetUrlKey\r\n                                                  ]\r\n                                                );\r\n                                              }} //if invoice url key is same for both eveloper and vendr than ads that statically no need to create invoice and timesheet url key\r\n                                              src={timeSheetIcon}\r\n                                              className=\"approved_icon\"\r\n                                            />\r\n                                          </OverlayTrigger>\r\n                                          <OverlayTrigger\r\n                                            placeholder=\"bottom\"\r\n                                            overlay={downloadinvoice}\r\n                                          >\r\n                                            <img\r\n                                              onClick={() => {\r\n                                                handleDownload(\r\n                                                  curExpandedRow?.[\r\n                                                    invoiceUrlKey\r\n                                                  ]\r\n                                                );\r\n                                              }} //if invoice url key is same for both eveloper and vendr than ads that statically no need to create invoice and timesheet url key\r\n                                              src={invoiceIcon} //timesheet icon according to status is pending\r\n                                              className=\"approved_icon\"\r\n                                            />\r\n                                          </OverlayTrigger>\r\n                                        </div>\r\n                                      )}\r\n                                      {!profilePictureKey &&\r\n                                        !isAction &&\r\n                                        curExpandedRow?.[key]}\r\n                                      {isHours && \"hrs\"}\r\n                                    </td>\r\n                                  </>\r\n                                )\r\n                              )}\r\n\r\n                              {/* <td className=\"time-table-data text-start\">\r\n                                140 hrs\r\n                              </td>\r\n                              <td className=\"time-table-data text-start\">\r\n                                Jun 2024\r\n                              </td>\r\n                              <td className=\"time-table-data text-start\">\r\n                                <div className=\"d-flex align-items-center gap-2\">\r\n                                  <OverlayTrigger\r\n                                    placeholder=\"bottom\"\r\n                                    overlay={downloadtimesheet}\r\n                                  >\r\n                                    <img\r\n                                      src={timeSheetIcon}\r\n                                      className=\"approved_icon\"\r\n                                    />\r\n                                  </OverlayTrigger>\r\n                                  <OverlayTrigger\r\n                                    placeholder=\"bottom\"\r\n                                    overlay={downloadinvoice}\r\n                                  >\r\n                                    <img\r\n                                      src={invoiceIcon}\r\n                                      className=\"approved_icon\"\r\n                                    />\r\n                                  </OverlayTrigger>\r\n                                </div>\r\n                              </td> */}\r\n                            </tr>\r\n                          ))}\r\n                          {/* <tr>\r\n                            <td className=\"time-table-data text-start\">\r\n                              <div className=\"d-flex align-items-center gap-2\">\r\n                                <div className=\"user-imgbx application-imgbx mx-0 mb-0\">\r\n                                  <img src={userImage} className=\"user-img\" />\r\n                                </div>\r\n                                Emily Davis\r\n                              </div>\r\n                            </td>\r\n                            <td className=\"time-table-data text-start\">\r\n                              140 hrs\r\n                            </td>\r\n                            <td className=\"time-table-data text-start\">\r\n                              Jun 2024\r\n                            </td>\r\n                            <td className=\"time-table-data text-start\">\r\n                              <div className=\"d-flex align-items-center gap-2\">\r\n                                <OverlayTrigger\r\n                                  placeholder=\"bottom\"\r\n                                  overlay={downloadtimesheet}\r\n                                >\r\n                                  <img\r\n                                    src={timeSheetIcon}\r\n                                    className=\"approved_icon\"\r\n                                  />\r\n                                </OverlayTrigger>\r\n                                <OverlayTrigger\r\n                                  placeholder=\"bottom\"\r\n                                  overlay={downloadinvoice}\r\n                                >\r\n                                  <img\r\n                                    src={invoiceIcon}\r\n                                    className=\"approved_icon\"\r\n                                  />\r\n                                </OverlayTrigger>\r\n                              </div>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td className=\"time-table-data text-start\">\r\n                              <div className=\"d-flex align-items-center gap-2\">\r\n                                <div className=\"user-imgbx application-imgbx mx-0 mb-0\">\r\n                                  <img src={userImage} className=\"user-img\" />\r\n                                </div>\r\n                                James Taylor\r\n                              </div>\r\n                            </td>\r\n                            <td className=\"time-table-data text-start\">\r\n                              140 hrs\r\n                            </td>\r\n                            <td className=\"time-table-data text-start\">\r\n                              Jun 2024\r\n                            </td>\r\n                            <td className=\"time-table-data text-start\">\r\n                              <div className=\"d-flex align-items-center gap-2\">\r\n                                <OverlayTrigger\r\n                                  placeholder=\"bottom\"\r\n                                  overlay={downloadtimesheet}\r\n                                >\r\n                                  <img\r\n                                    src={timeSheetIcon}\r\n                                    className=\"approved_icon\"\r\n                                  />\r\n                                </OverlayTrigger>\r\n                                <OverlayTrigger\r\n                                  placeholder=\"bottom\"\r\n                                  overlay={downloadinvoice}\r\n                                >\r\n                                  <img\r\n                                    src={invoiceUnpaid}\r\n                                    className=\"approved_icon\"\r\n                                  />\r\n                                </OverlayTrigger>\r\n                              </div>\r\n                            </td>\r\n                          </tr> */}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommonInvoiceTable;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Form, Button, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { FaFolder } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MdPictureAsPdf } from \"react-icons/md\";\r\nimport RexettButton from \"../../components/atomic/RexettButton\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getInvoice } from \"../../redux/slices/clientDataSlice\";\r\nimport SingleInvoiceRow from \"../../components/common/Single Invoice/SingleInvoiceRow\";\r\nimport RexettPagination from \"../../components/atomic/RexettPagination\";\r\nimport RexettInvoiceFilter from \"../../components/common/Invoice filter/RexettInvoiceFilter\";\r\nimport ScreenLoader from \"../../components/atomic/ScreenLoader\";\r\nimport timeSheetIcon from \"../../assets/img/timesheet_approved.png\";\r\nimport associateLogo from \"../../assets/img/aviox-logo.png\";\r\nimport invoiceIcon from \"../../assets/img/invoice_paid.png\";\r\nimport timeSheetNotApproved from \"../../assets/img/timesheet_notapproved.png\";\r\nimport invoiceUnpaid from \"../../assets/img/invoice_unpaid.png\";\r\nimport { IoSearch } from \"react-icons/io5\";\r\nimport userImage from \"../../assets/img/user-img.jpg\";\r\nimport {\r\n  DEVELOPER_NAME_OPTIONS,\r\n  INVOICE_OPTIONS,\r\n  MONTH_FILTER_OPTIONS,\r\n  PROJECT_FILTER_OPTIONS,\r\n  YEAR_FILTER_OPTIONS,\r\n  buildQueryFromObjects,\r\n} from \"../admin/adminConstant\";\r\nimport CommonFilterSection from \"../../components/atomic/CommonFilterSection\";\r\nimport TableComponentOne from \"../../components/atomic/TableComponentOne\";\r\nimport CommonInvoiceTable from \"../../components/common/CommonInvoiceTable\";\r\nconst dummyProjects = [\r\n  {\r\n    projectName: \"Figma to UI\",\r\n    totalHiredDevelopers: 3,\r\n    totalInvoiceRaised: 5,\r\n    totalHoursSpend: \"3000\",\r\n    startDate: \"10-04-2024\",\r\n    invoiceMonth: \"Jun 2024\",\r\n    developers: [\r\n      {\r\n        developerName: \"John Smith\",\r\n        totalHoursSpend: \"140 \",\r\n        invoiceMonth: \"Jun 2024\",\r\n        projectStatus: \"Paid\",\r\n      },\r\n      {\r\n        developerName: \"Emily Davis\",\r\n        totalHoursSpend: \"140 \",\r\n        invoiceMonth: \"Jun 2024\",\r\n        projectStatus: \"Paid\",\r\n      },\r\n      {\r\n        developerName: \"James Taylor\",\r\n        totalHoursSpend: \"140 \",\r\n        invoiceMonth: \"Jun 2024\",\r\n        projectStatus: \"Paid\",\r\n      },\r\n      {\r\n        developerName: \"Michael Brown\",\r\n        totalHoursSpend: \"140 \",\r\n        invoiceMonth: \"Jun 2024\",\r\n        projectStatus: \"Paid\",\r\n      },\r\n      {\r\n        developerName: \"Sarah Wilson\",\r\n        totalHoursSpend: \"140 \",\r\n        invoiceMonth: \"Jun 2024\",\r\n        projectStatus: \"Paid\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    projectName: \"Backend API Development\",\r\n    totalHiredDevelopers: 4,\r\n    totalInvoiceRaised: 8,\r\n    totalHoursSpend: \"5000 \",\r\n    startDate: \"01-05-2024\",\r\n    invoiceMonth: \"Jul 2024\",\r\n    developers: [\r\n      {\r\n        developerName: \"Anna Lee\",\r\n        totalHoursSpend: \"160 \",\r\n        invoiceMonth: \"Jul 2024\",\r\n        projectStatus: \"Paid\",\r\n      },\r\n      {\r\n        developerName: \"David Kim\",\r\n        totalHoursSpend: \"160 \",\r\n        invoiceMonth: \"Jul 2024\",\r\n        projectStatus: \"Paid\",\r\n      },\r\n      {\r\n        developerName: \"Sophia Martinez\",\r\n        totalHoursSpend: \"160\",\r\n        invoiceMonth: \"Jul 2024\",\r\n        projectStatus: \"Paid\",\r\n      },\r\n      {\r\n        developerName: \"Robert Johnson\",\r\n        totalHoursSpend: \"160\",\r\n        invoiceMonth: \"Jul 2024\",\r\n        projectStatus: \"Paid\",\r\n      },\r\n      {\r\n        developerName: \"Jessica White\",\r\n        totalHoursSpend: \"160\",\r\n        invoiceMonth: \"Jul 2024\",\r\n        projectStatus: \"Paid\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    projectName: \"Mobile App Development\",\r\n    totalHiredDevelopers: 5,\r\n    totalInvoiceRaised: 10,\r\n    totalHoursSpend: \"7000\",\r\n    startDate: \"15-06-2024\",\r\n    invoiceMonth: \"Aug 2024\",\r\n    developers: [\r\n      {\r\n        developerName: \"Kevin Wang\",\r\n        totalHoursSpend: \"180\",\r\n        invoiceMonth: \"Aug 2024\",\r\n        projectStatus: \"Paid\",\r\n      },\r\n      {\r\n        developerName: \"Laura Brown\",\r\n        totalHoursSpend: \"180\",\r\n        invoiceMonth: \"Aug 2024\",\r\n        projectStatus: \"Paid\",\r\n      },\r\n      {\r\n        developerName: \"Steven Clark\",\r\n        totalHoursSpend: \"180\",\r\n        invoiceMonth: \"Aug 2024\",\r\n        projectStatus: \"Paid\",\r\n      },\r\n      {\r\n        developerName: \"Rachel Adams\",\r\n        totalHoursSpend: \"180\",\r\n        invoiceMonth: \"Aug 2024\",\r\n        projectStatus: \"Paid\",\r\n      },\r\n      {\r\n        developerName: \"Daniel Rodriguez\",\r\n        totalHoursSpend: \"180\",\r\n        invoiceMonth: \"Aug 2024\",\r\n        projectStatus: \"Paid\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n// add these inside constant file\r\nconst CLIENT_INVOICE_PER_PAGE = 5;\r\nconst CLIENT_INVOICE_FILTER_FIELDS = {\r\n  selectFilters : [\r\n    {\r\n      filterLabel: \"Select Month\",\r\n      key: \"month\",\r\n      options: MONTH_FILTER_OPTIONS,\r\n    },\r\n    {\r\n      filterLabel: \"Select Year\",\r\n      key: \"year\",\r\n      options: YEAR_FILTER_OPTIONS,\r\n    },\r\n    {\r\n      filterLabel: \"Invoice Status\",\r\n      key: \"invoiceStatus\",\r\n      options: INVOICE_OPTIONS,\r\n    },\r\n  ],\r\n  searchFilter:{key:\"developerName\",placeholder:\"Enter developer name\"}\r\n}\r\n\r\nexport const DEVELOPER_INVOICE_COLUMNS = [\r\n  {\r\n    label: \"Developer Name\",\r\n    key: \"developer\",\r\n    subkey: \"name\",\r\n    profilePictureKey: \"profile_picture\",\r\n  },\r\n  { label: \"Project\", key: \"project\", subkey: \"title\" },\r\n  {\r\n    label: \"Total hours\",\r\n    key: \"project\",\r\n    subkey: \"total_hours\",\r\n    isHours: true,\r\n  },\r\n  { label: \"Invoice month\", key: \"invoiceMonth\"},\r\n  { label: \"Project status\", key: \"project\", subkey: \"status\", isStatus: true },\r\n  {\r\n    label: \"Action\",\r\n    key: \"status\",\r\n    isAction: true,\r\n    timesheetStatusKey: \"\", \r\n    timeSheetUrlKey: \"\",\r\n    invoiceStatusKey:\"invoiceStatus\",\r\n    invoiceUrlKey:\"invoiceUrl\"\r\n  },\r\n];\r\nconst Invoice = () => {\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const { invoiceList, screenLoader, totalInvoicePages } = useSelector(\r\n    (state) => state.clientData\r\n  );\r\n  const [page, setPage] = useState(1);\r\n  const [filters, setFilters] = useState({\r\n    developerName: \"\",\r\n    year: \"\",\r\n    month: \"\",\r\n    invoiceStatus: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const filterQuery = buildQueryFromObjects(filters);\r\n    const query = `${filterQuery}&page=${page}&perPage=${CLIENT_INVOICE_PER_PAGE}`;\r\n    handleGetInvoice(query);\r\n  }, [page, filters]);\r\n\r\n  const handleGetInvoice = (query) => {\r\n    dispatch(getInvoice(query));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {screenLoader ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <>\r\n          <CommonFilterSection\r\n            filters={filters}\r\n            setFilters={setFilters}\r\n            filterFields={CLIENT_INVOICE_FILTER_FIELDS}\r\n            // isSearchFilterRequired={false}\r\n          />\r\n          <CommonInvoiceTable \r\n          data={dummyProjects}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Invoice;\r\n"],"names":["_ref","data","columns","page","setPage","totalPages","t","useTranslation","downloadtimesheet","_jsx","Tooltip","id","children","downloadinvoice","handleDownload","fileUrl","newTab","window","open","focus","alert","_jsxs","_Fragment","className","length","map","_ref2","idx","label","curData","rowIdx","_ref3","index","_curData$key","_curData$key2","_curData$key3","_curData$key4","_curData$key5","key","subkey","profilePictureKey","isStatus","isHours","isAction","timesheetStatusKey","invoiceUrlKey","invoiceStatusKey","timeSheetUrlKey","Fragment","src","concat","OverlayTrigger","placeholder","overlay","timeSheetNotApproved","timeSheetApproved","onClick","unpaidInvoice","paidInvoice","colSpan","NoDataFound","RexettPagination","number","dummyColumns","projectInfo","isDate","developerInfo","timesheetUrlKey","expandedRow","setExpandedRow","useState","arrowActive","setArrowActive","curRow","rowIndex","_dummyColumns$project","_dummyColumns$develop","_curRow$developers","handleRowClick","RxChevronRight","convertDateIntoRequiredFormat","_ref4","developers","curExpandedRow","_dummyColumns$develop2","_ref5","timeSheetIcon","invoiceIcon","dummyProjects","projectName","totalHiredDevelopers","totalInvoiceRaised","totalHoursSpend","startDate","invoiceMonth","developerName","projectStatus","CLIENT_INVOICE_FILTER_FIELDS","selectFilters","filterLabel","options","MONTH_FILTER_OPTIONS","YEAR_FILTER_OPTIONS","INVOICE_OPTIONS","searchFilter","DEVELOPER_INVOICE_COLUMNS","Invoice","dispatch","useDispatch","invoiceList","screenLoader","totalInvoicePages","useSelector","state","clientData","filters","setFilters","year","month","invoiceStatus","useEffect","filterQuery","buildQueryFromObjects","query","handleGetInvoice","getInvoice","ScreenLoader","CommonFilterSection","filterFields","CommonInvoiceTable"],"sourceRoot":""}
{"version":3,"file":"static/js/3197.8a4d4978.chunk.js","mappings":"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","sources":["components/clients/TimeReporiting/MemoWithTimeReport.jsx","components/clients/TimeReporiting/SingleTimeReporting.jsx","assets/img/remarks-icon.svg","components/clients/TimeReporiting/ReconcialiationModal.jsx","components/clients/TimeReporiting/TimeReportRemark.jsx","components/clients/TimeReporiting/RexettTable.jsx","components/clients/TimeReporiting/RexettTimeReporting.jsx","components/common/Guidelines/Guidelines.jsx"],"sourcesContent":["import React from 'react'\r\nimport userImage from \"../../../assets/img/user-img.jpg\"\r\nimport { FiCalendar } from \"react-icons/fi\";\r\nimport { FaRegClock } from \"react-icons/fa6\";\r\nimport moment from 'moment';\r\nconst MemoWithTimeReport = ({item}) => {\r\n    let {end_time,start_time,memo,report_date}=item\r\n  return (\r\n    <div className='weekly-detail mb-3 p-3'>\r\n        <div className='client-info mb-3 gap-5'>\r\n            <div className='mb-2'>\r\n                <p className='client-name-heading d-flex gap-1 align-items-center'><FiCalendar />{report_date}</p>\r\n            </div>\r\n            <div className='d-flex gap-4 justify-content-between'>\r\n                <div className='d-flex gap-3 align-items-center'>\r\n                    <p className='client-name-heading d-flex gap-1 align-items-center'><FaRegClock />{start_time? moment(start_time, 'HH:mm:ss').format('h:mm:ss A'):\"00:00\"}</p>\r\n                    <p className='client-name-heading'>-</p>\r\n                    <p className='client-name-heading d-flex gap-1 align-items-center'><FaRegClock />{end_time? moment(end_time, 'HH:mm:ss').format('h:mm:ss A'):\"00:00\"}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className='client-info'>\r\n            <h4 className='sidebar-heading'>Memo</h4>\r\n            <p className='client-name-heading'>{memo?memo:\"Memo not Found\"}</p>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MemoWithTimeReport","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { FiCalendar } from \"react-icons/fi\";\r\nimport { FaRegClock } from \"react-icons/fa6\";\r\nimport moment from \"moment\";\r\nimport MemoWithTimeReport from \"./MemoWithTimeReport\";\r\nimport { Nav, Tab } from \"react-bootstrap\";\r\n\r\nconst SingleTimeReporting = ({ currentDetails, selectedPeriod, role }) => {\r\n  const [updateWeeklyData, setUpdateWeeklyData] = useState();\r\n  let {\r\n    contractDetails: { user_details },\r\n    endDate,\r\n    startDate,\r\n    timeReports: {\r\n      end_time,\r\n      start_time,\r\n      memo,\r\n      weeklyDetails,\r\n      monthlyDetails,\r\n      report_date,\r\n      week,\r\n      month,\r\n    },\r\n    totalDuration,\r\n  } = currentDetails;\r\n\r\n  useEffect(() => {\r\n    if (weeklyDetails !== undefined) {\r\n      setUpdateWeeklyData(weeklyDetails);\r\n    } else if (monthlyDetails !== undefined) {\r\n      setUpdateWeeklyData(monthlyDetails[0]?.weeklyDetails);\r\n    }\r\n  }, []);\r\n\r\n  const selectCurrentTab = (select) => {\r\n    let montData = monthlyDetails?.find((item) => item.week == select);\r\n    setUpdateWeeklyData(montData?.weeklyDetails);\r\n  };\r\n\r\n  console.log(currentDetails,\"weeklyDetails\")\r\n  console.log(month,\"role\")\r\n  return (\r\n    <>\r\n      {selectedPeriod == \"weekly\" ? (\r\n        <div className=\"detail-view day-view\">\r\n          <div className=\"client-info mb-3\">\r\n            <h4 className=\"sidebar-heading\">\r\n              {role !== \"developer\" ? \"Developer Name\" : \"Client Name\"}\r\n            </h4>\r\n            <p className=\"client-name-heading\">\r\n              <img src={user_details?.profile_picture} />\r\n              {user_details?.name}\r\n            </p>\r\n          </div>\r\n          <div className=\"client-info mb-3 d-`flex gap-5\">\r\n            <div className=\"mb-0\">\r\n              <p className=\"client-name-heading d-flex gap-1 align-items-center mb-2\">\r\n                <FiCalendar />\r\n                {report_date}\r\n              </p>\r\n            </div>\r\n            <div className=\"d-flex gap-4 justify-content-between\">\r\n              <div className=\"d-flex gap-3 align-items-center\">\r\n                <p className=\"client-name-heading d-flex gap-1 align-items-center\">\r\n                  <FaRegClock />\r\n                  {start_time\r\n                    ? moment(start_time, \"HH:mm\").format(\"h:mm A\")\r\n                    : \"00:00\"}\r\n                </p>\r\n                <p className=\"client-name-heading\">-</p>\r\n                <p className=\"client-name-heading d-flex gap-1 align-items-center\">\r\n                  <FaRegClock />\r\n                  {start_time\r\n                    ? moment(end_time, \"HH:mm\").format(\"h:mm A\")\r\n                    : \"00:00\"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"weekly-detail\">\r\n            <div className=\"client-info\">\r\n              <h4 className=\"sidebar-heading\">Memo</h4>\r\n              <p className=\"client-name-heading\">\r\n                {memo ? memo : \"Memo not found\"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {selectedPeriod == \"monthly\" ? (\r\n        <div className=\"detail-view weekly-view\">\r\n          <div className=\"client-info mb-3\">\r\n          {role !== \"developer\" ? \"Developer Name\" : \"Client Name\"}\r\n            <p className=\"client-name-heading\">\r\n              <img src={user_details?.profile_picture} />\r\n              {user_details?.name}\r\n            </p>\r\n          </div>\r\n          {selectedPeriod == \"monthly\" ? (\r\n            <div className=\"client-info mb-3 gap-5 d-flex align-items-center\">\r\n              <div className=\"mb-0\">\r\n                <p className=\"client-name-heading d-flex gap-1 align-items-center\">\r\n                  <FiCalendar />\r\n                  {week} {report_date}\r\n                </p>\r\n              </div>\r\n              <div className=\"d-flex gap-4 justify-content-between\">\r\n                <div className=\"d-flex gap-3 align-items-center\">\r\n                  <p className=\"client-name-heading d-flex gap-1 align-items-center fw-semibold\">\r\n                    <FaRegClock /> {totalDuration} hrs\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <span className=\"status-progress\">Progress</span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {updateWeeklyData?.map((item, index) => {\r\n            return (\r\n              <>\r\n                <MemoWithTimeReport item={item} />\r\n              </>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {selectedPeriod == \"yearly\" ? (\r\n        <div className=\"detail-view monthly-view\">\r\n          <div className=\"client-info mb-3\">\r\n          {role !== \"developer\" ? \"Developer Name\" : \"Client Name\"}\r\n            <p className=\"client-name-heading\">\r\n              <img src={user_details?.profile_picture} />\r\n              {user_details?.name}\r\n            </p>\r\n          </div>\r\n          <div className=\"client-info mb-3 gap-5 d-flex align-items-center\">\r\n            <div className=\"mb-0\">\r\n              <p className=\"client-name-heading d-flex gap-1 align-items-center\">\r\n                <FiCalendar />\r\n                {month} {report_date}\r\n              </p>\r\n            </div>\r\n            <div className=\"d-flex gap-4 justify-content-between\">\r\n              <div className=\"d-flex gap-3 align-items-center\">\r\n                <p className=\"client-name-heading d-flex gap-1 align-items-center fw-semibold\">\r\n                  <FaRegClock /> {totalDuration.toFixed(\"2\")} hrs\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <span className=\"status-progress\">Progress</span>\r\n            </div>\r\n          </div>\r\n          <Tab.Container\r\n            id=\"left-tabs-example\"\r\n            defaultActiveKey=\"Week 1\"\r\n            onSelect={selectCurrentTab}\r\n          >\r\n            <Nav variant=\"pills\" className=\"weekly-tabs\">\r\n              <Nav.Item className=\"weekly-tab-item\">\r\n                <Nav.Link className=\"weekly-tab-link\" eventKey=\"Week 1\">\r\n                  Week 1\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item className=\"weekly-tab-item\">\r\n                <Nav.Link className=\"weekly-tab-link\" eventKey=\"Week 2\">\r\n                  Week 2\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item className=\"weekly-tab-item\">\r\n                <Nav.Link className=\"weekly-tab-link\" eventKey=\"Week 3\">\r\n                  Week 3\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item className=\"weekly-tab-item\">\r\n                <Nav.Link className=\"weekly-tab-link\" eventKey=\"Week 4\">\r\n                  Week 4\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey=\"Week 1\">\r\n                {updateWeeklyData?.map((item, index) => {\r\n                  return (\r\n                    <>\r\n                      <MemoWithTimeReport item={item} />\r\n                    </>\r\n                  );\r\n                })}\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"Week 2\">\r\n                {updateWeeklyData?.map((item, index) => {\r\n                  return (\r\n                    <>\r\n                      <MemoWithTimeReport item={item} />\r\n                    </>\r\n                  );\r\n                })}\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"Week 3\">\r\n                {updateWeeklyData?.map((item, index) => {\r\n                  return (\r\n                    <>\r\n                      <MemoWithTimeReport item={item} />\r\n                    </>\r\n                  );\r\n                })}\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"Week 4\">\r\n                {updateWeeklyData?.map((item, index) => {\r\n                  return (\r\n                    <>\r\n                      <MemoWithTimeReport item={item} />\r\n                    </>\r\n                  );\r\n                })}\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n          </Tab.Container>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleTimeReporting;\r\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgRemarksIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: \"svg-icon\",\n    style: {\n      width: \"1em\",\n      height: \"1em\",\n      verticalAlign: \"middle\",\n      fill: \"currentColor\",\n      overflow: \"hidden\"\n    },\n    viewBox: \"0 0 1024 1024\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M614.46116693 910.64456533c-1.62747733 3.43517867-5.12273067 6.30784-10.387456 8.03362134l-70.02740053 22.8458496c-12.57198933 4.09053867-19.34513493-2.52859733-15.187968-14.8504576l23.35921493-68.4654592c1.753088-5.18280533 4.74043733-8.585216 8.26299734-10.19630934l220.8366592-215.89415253 64.0253952 62.59452587L614.46116693 910.64456533z m-163.75261866-28.2198016l320.602112-313.442304V291.864576H611.3099776c-35.3468416-0.01092267-64.00354987-28.0231936-64.0090112-62.57814187V68.91984213H223.29535147c-50.8526592 0-92.05951147 40.28388693-92.05951147 89.97328214v653.11648426c0 18.67885227 7.602176 36.5920256 21.10368427 49.79316054 13.51133867 13.21096533 31.82974293 20.62854827 50.92911786 20.62308693h247.43990614z m165.37463466-801.72373333l143.20162134 140.00018773c20.3227136 19.85850027 13.46218667 35.95851093-15.220736 35.95851094h-112.787456c-28.70586027-0.01092267-51.98861653-22.7475456-52.01046187-50.8035072V95.6104704c0-28.08326827 16.48339627-34.71878827 36.77771093-14.87121067l0.0393216-0.03822933z m-356.82932053 332.40951467c0.01092267-17.28075093 14.336-31.2836096 32.00996693-31.2999936h320.045056c17.67396693 0.02184533 31.98266027 14.01924267 31.9881216 31.2999936-0.016384 17.26436693-14.32507733 31.26176427-31.9881216 31.27814826H291.27038293c-17.6685056-0.01092267-31.9881216-14.00832-32.01652053-31.27814826z m0 125.13989973c0.02730667-17.26982827 14.34692267-31.25630293 32.00996693-31.27268693h320.045056c17.66304427 0.016384 31.9717376 14.01378133 31.9881216 31.27268693-0.00546133 17.28075093-14.32507733 31.27814827-31.9881216 31.29453227H291.27038293c-17.6685056-0.01092267-32.0045056-14.00285867-32.01652053-31.29453227z m526.72047787 80.8091648l37.0180096-36.17150293c9.355264-9.158656 24.52794027-9.17504 33.91051093-0.049152l31.94989227 31.2180736c9.33888 9.17504 9.322496 24.01457493-0.049152 33.17323093l-37.0180096 36.20973227-65.7948672-64.3694592-0.016384-0.01092267z m0 0\",\n    fill: \"#037563\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgRemarksIcon);\nexport default __webpack_public_path__ + \"static/media/remarks-icon.e8394e1d1b0ac59ef737ba64dad11d00.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from \"react\";\r\nimport userImage from \"../../../assets/img/user-img.jpg\";\r\nimport { FiCalendar } from \"react-icons/fi\";\r\nimport { FaRegClock } from \"react-icons/fa6\";\r\nimport moment from \"moment\";\r\nimport { TiEdit } from \"react-icons/ti\";\r\nimport { Button, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { IoCheckmark, IoCloseOutline } from \"react-icons/io5\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { approveTimeReportReconciliation, rejectTimeReportReconciliation, timeReporting } from \"../../../redux/slices/clientDataSlice\";\r\n\r\nconst approveRemark = <Tooltip id=\"tooltip\">Approve</Tooltip>;\r\nconst rejectRemark = <Tooltip id=\"tooltip\">Reject</Tooltip>;\r\nconst ReconciliationModal = ({\r\n  item,\r\n  role,\r\n  index,\r\n  handleChangeUpdateWeeklyData,\r\n  selectedPeriod,\r\n  page\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const [editDetails, setEditDetails] = useState({\r\n    editItem: null,\r\n    isEdit: false,\r\n  });\r\n  const [reconciliationData, setReconcilitationData] = useState([]);\r\n  let { end_time, start_time, memo, report_date, id, contract_id } = item;\r\n  const handleEdit = (editData) => {\r\n    setEditDetails({\r\n      editItem: null,\r\n      isEdit: !editDetails?.isEdit,\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    setReconcilitationData([\r\n      {\r\n        ...item,\r\n        id: index,\r\n      },\r\n    ]);\r\n  }, []);\r\n\r\n\r\n  const approvedReject = async (currentStatus) => {\r\n    let data = {\r\n      contract_id: contract_id,\r\n      report_date: report_date,\r\n      reconciliation_id: id,\r\n      client_remark:null,\r\n      is_approved: currentStatus,\r\n    };\r\n    await dispatch(currentStatus?approveTimeReportReconciliation(data):rejectTimeReportReconciliation(data));\r\n    let filterData={\r\n      page:page,\r\n      selectedPeriod:selectedPeriod\r\n    }\r\n    dispatch(timeReporting(filterData, role));\r\n  };\r\n  const handleChange = (e, inx) => {\r\n    const { name, value } = e.target;\r\n    let duplicateItem = [...reconciliationData];\r\n    // duplicateItem[inx][name] = value;\r\n    // setReconcilitationData(duplicateItem);\r\n    // let ind = duplicateItem.findIndex((item,idx) => idx === inx);\r\n    if (inx > -1) {\r\n      duplicateItem[0] = {\r\n        ...duplicateItem[inx],\r\n        [name]: value,\r\n        // id:inx\r\n      };\r\n    } else {\r\n      setReconcilitationData([...reconciliationData, duplicateItem]);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"weekly-detail mb-3 p-3\">\r\n      <div className=\"client-info mb-3 gap-5\">\r\n        <div className=\"mb-2\">\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <div className=\"datePrim\">\r\n              <p className=\"client-name-heading d-flex gap-1 align-items-center\">\r\n                <FiCalendar />\r\n                {report_date}\r\n              </p>\r\n            </div>\r\n            <div className=\"editSec\">\r\n              {role !== \"client\" && item?.reconciliation_approved!==true ? (\r\n                <span className=\"px-3 mb-2 arrow-btn info-arrow font-16 text-decoration-none\" onClick={()=>handleEdit(item)}>\r\n                  <TiEdit />\r\n                </span>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <div className=\"d-flex gap-2\">\r\n                {role == \"client\" && item?.is_approved==null  ? (\r\n                  <>\r\n                    <OverlayTrigger placement=\"bottom\" overlay={approveRemark}>\r\n                      <Button\r\n                        variant=\"transparent\"\r\n                        className=\"px-3 mb-2 arrow-btn primary-arrow font-16 text-decoration-none\"\r\n                        onClick={() => approvedReject(true)}\r\n                      >\r\n                        <IoCheckmark />\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                    <OverlayTrigger placement=\"bottom\" overlay={rejectRemark}>\r\n                      <Button\r\n                        variant=\"transparent\"\r\n                        className=\"px-3 mb-2 arrow-btn danger-arrow font-16 text-decoration-none\"\r\n                        onClick={() => approvedReject(false)}\r\n                      >\r\n                        <IoCloseOutline />\r\n                      </Button>\r\n                    </OverlayTrigger>\r\n                  </>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* {role !== \"client\" ? (\r\n            <span onClick={handleEdit}>\r\n              <TiEdit />\r\n            </span>\r\n          ) : (\r\n            \"\"\r\n          )} */}\r\n\r\n          {/* <p className=\"client-name-heading d-flex gap-1 align-items-center\">\r\n            <FiCalendar />\r\n            {report_date}\r\n          </p> */}\r\n        </div>\r\n        <div className=\"d-flex gap-4 justify-content-between\">\r\n          <div className=\"d-flex gap-3 align-items-center\">\r\n            <p className=\"client-name-heading d-flex gap-1 align-items-center\">\r\n              <FaRegClock />\r\n\r\n              {editDetails?.isEdit ? (\r\n                <>\r\n                <input type=\"time\" className=\"common-field form-control\" value={moment(item?.start_time, \"HH:mm:ss\").format(\"HH:mm\")} name=\"start_time\"  onChange={(e)=>handleChangeUpdateWeeklyData(e,index)}/>\r\n                \r\n                </>\r\n              ) : start_time ? (\r\n                moment(start_time, \"HH:mm:ss\").format(\"h:mm A\")\r\n              ) : (\r\n                \"00:00\"\r\n              )}\r\n            </p>\r\n            <p className=\"client-name-heading\">-</p>\r\n            <p className=\"client-name-heading d-flex gap-1 align-items-center\">\r\n              <FaRegClock />\r\n\r\n              {editDetails?.isEdit ? (\r\n                <input type=\"time\" className=\"common-field form-control\" value={moment(item?.end_time, \"HH:mm:ss\").format(\"HH:mm\")} name=\"end_time\"  onChange={(e)=>handleChangeUpdateWeeklyData(e,index)}/>\r\n              ) : end_time ? (\r\n                moment(end_time, \"HH:mm:ss\").format(\"h:mm A\")\r\n              ) : (\r\n                \"00:00\"\r\n              )}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"client-info\">\r\n        <h4 className=\"sidebar-heading\">Memo</h4>\r\n        {editDetails?.isEdit ? (\r\n          <input type=\"text\" className=\"common-field form-control\" value={item?.memo} name=\"memo\" onChange={(e)=>handleChangeUpdateWeeklyData(e,index)} />\r\n        ) : (\r\n          <p className=\"client-name-heading\">\r\n            {memo ? memo : \"Memo not Found\"}\r\n          </p>\r\n        )}\r\n        <div>\r\n          {item?.is_approved || item?.reconciliation_approved ? (\r\n            <span className=\"status-finished mt-2 mx-1\">Approved</span>\r\n          ) : (item?.is_approved === false || item?.reconciliation_approved==false )&&(\r\n            <span className=\"status-rejected mt-2\">Rejected</span>\r\n          )}\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReconciliationModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Offcanvas,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n} from \"react-bootstrap\";\r\nimport userImage from \"../../../assets/img/user-img.jpg\";\r\nimport { sendRemarkOnTimeReport } from \"../../../redux/slices/adminDataSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport RexettButton from \"../../atomic/RexettButton\";\r\nimport ReconciliationModal from \"./ReconcialiationModal\";\r\nimport { postReconciliationData } from \"../../../redux/slices/developerDataSlice\";\r\nimport { timeReporting } from \"../../../redux/slices/clientDataSlice\";\r\nconst TimeReportRemark = ({\r\n  remarkshow,\r\n  handleremarkClose,\r\n  contractId,\r\n  currentDetails,\r\n  role,\r\n  selectedPeriod,\r\n  page,\r\n}) => {\r\n  let {\r\n    contractDetails: { user_details, contract_id },\r\n    endDate,\r\n    startDate,\r\n    allSelectedTimeReport,\r\n    timeReports: {\r\n      end_time,\r\n      start_time,\r\n      memo,\r\n      weeklyDetails,\r\n      monthlyDetails,\r\n      report_date,\r\n      week,\r\n      month,\r\n    },\r\n    totalDuration,\r\n  } = currentDetails;\r\n  const [addRemark, setRemark] = useState(null);\r\n  const [reconciallationData, setReconciallationData] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const [updateWeeklyData, setUpdateWeeklyData] = useState([]);\r\n\r\n  const { smallLoader, reconciliationsData } = useSelector(\r\n    (state) => state.clientData\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (role == \"client\") {\r\n      setUpdateWeeklyData(reconciliationsData);\r\n    } else {\r\n      setUpdateWeeklyData(allSelectedTimeReport);\r\n    }\r\n  }, [reconciliationsData]);\r\n\r\n  console.log(allSelectedTimeReport,\"allSelectedTimeReport\")\r\n\r\n  const handleReconciliationSend = () => {\r\n    const temp = JSON.parse(JSON.stringify(updateWeeklyData));\r\n    const payload = temp.filter((curElem) => curElem?.isEdited === true);\r\n    // const modifiedPayload = payload.map((curElem) => {\r\n    //   if (curElem.isEdited) {\r\n    //     delete curElem.isEdited;\r\n    //     return curElem;\r\n    //   } else {\r\n    //     return curElem;\r\n    //   }\r\n    // });\r\n\r\n    // removing isEdited key that was added manually\r\n    let modifiedPayload = payload.map(({ isEdited, ...rest }) => {return {...rest,contract_id:Number(contractId)}});\r\n    if (modifiedPayload?.length) {\r\n      dispatch( \r\n        postReconciliationData(modifiedPayload, () => {\r\n          handleremarkClose();\r\n          dispatch(timeReporting({filter:\"weekly\"},role));\r\n        })\r\n      );\r\n    } else {\r\n      handleremarkClose();\r\n    }\r\n  };\r\n  const handleChangeUpdateWeeklyData = (e, index) => {\r\n    const { value, name } = e.target;\r\n    const temp = JSON.parse(JSON.stringify(updateWeeklyData));\r\n    temp[index][name] = value;\r\n    temp[index][\"isEdited\"] = true;\r\n    setUpdateWeeklyData(temp);\r\n  };\r\n\r\n  console.log(user_details,\"user\")\r\n\r\n  return (\r\n    <Offcanvas\r\n      className=\"time-detail-sidepanel\"\r\n      show={remarkshow}\r\n      onHide={handleremarkClose}\r\n      placement=\"end\"\r\n    >\r\n      <Offcanvas.Header closeButton>\r\n        <Offcanvas.Title>Reconciliation</Offcanvas.Title>\r\n      </Offcanvas.Header>\r\n      <Offcanvas.Body>\r\n        <div className=\"detail-view weekly-view\">\r\n          <div className=\"client-info mb-3\">\r\n            <p>{role !== \"developer\" ? \"Developer Name\" : \"Client Name\"}</p>\r\n            <p className=\"client-name-heading\">\r\n              <img src={user_details?.profile_picture} />\r\n              {user_details?.name}\r\n            </p>\r\n          </div>\r\n\r\n          {updateWeeklyData?.map((item, index) => { \r\n            return (\r\n              <>\r\n                <ReconciliationModal\r\n                  handleChangeUpdateWeeklyData={handleChangeUpdateWeeklyData}\r\n                  item={item}\r\n                  role={role}\r\n                  contract_id={contract_id}\r\n                  index={index}\r\n                  selectedPeriod={selectedPeriod}\r\n                  page={page}\r\n                />\r\n              </>\r\n            );\r\n          })}\r\n        </div>\r\n        {role !== \"client\" && (\r\n          <RexettButton\r\n            type=\"submit\"\r\n            text=\"Submit\"\r\n            className=\"main-btn font-14 mt-2 py-2 px-3\"\r\n            variant=\"transparent\"\r\n            onClick={handleReconciliationSend}\r\n            disabled={smallLoader}\r\n            isLoading={smallLoader}\r\n          />\r\n        )}\r\n      </Offcanvas.Body>\r\n    </Offcanvas>\r\n  );\r\n};\r\n\r\nexport default TimeReportRemark;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Button, Tooltip } from \"react-bootstrap\";\r\nimport RexettButton from \"../../atomic/RexettButton\";\r\nimport Offcanvas from \"react-bootstrap/Offcanvas\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport ScreenLoader from \"../../atomic/ScreenLoader\";\r\nimport NoDataFound from \"../../atomic/NoDataFound\";\r\nimport { approvedClient } from \"../../../redux/slices/developerDataSlice\";\r\nimport userImage from \"../../../assets/img/user-img.jpg\";\r\nimport { FiCalendar } from \"react-icons/fi\";\r\nimport { FaRegClock } from \"react-icons/fa6\";\r\nimport moment from \"moment\";\r\nimport SingleTimeReporting from \"./SingleTimeReporting\";\r\nimport ConfirmationModal from \"../../../pages/views/Modals/ConfirmationModal\";\r\nimport {\r\n  getReconciliationData,\r\n  timeReporting,\r\n} from \"../../../redux/slices/clientDataSlice\";\r\nimport remarkIcon from \"../../../assets/img/remarks-icon.svg\";\r\nimport { OverlayTrigger } from \"react-bootstrap/esm\";\r\nimport TimeReportRemark from \"./TimeReportRemark\";\r\nimport Guidelines from \"../../common/Guidelines/Guidelines\";\r\nimport { TIME_REPORTING } from \"./constant\";\r\n\r\nconst RexettTable = ({ selectedPeriod, headerColumn, data, role, page }) => {\r\n  const [show, setShow] = useState(false);\r\n  const [contractId, setContractID] = useState(null);\r\n  const [isAnyReportEmpty, setIsAnyReportEmpty] = useState(false);\r\n  const [selectedApprovedBtn, setSelectedApprovedBtn] = useState(null);\r\n  const [approvedConfirmation, setApprovedConfirmation] = useState({\r\n    isApproved: false,\r\n    approvedId: null,\r\n    startDate: null,\r\n    endDate: null,\r\n  });\r\n  const [currentDetails, setCurrentDetails] = useState(null);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = (data, index, isOff) => {\r\n    if (!isOff?.is_off_day) {\r\n      let memoDetails = data?.timeReports[index];\r\n      let newData = {\r\n        ...data,\r\n        timeReports: memoDetails,\r\n      };\r\n      setCurrentDetails(newData);\r\n      setShow(true);\r\n    }\r\n  };\r\n  const isAnyTimeReportingEmpty = (timeReports) => {\r\n    const index = timeReports?.findIndex(\r\n      (curElem) =>\r\n        !curElem?.is_holiday && !curElem?.is_off_day && !curElem?.memo\r\n    );\r\n    if (index === -1) {\r\n      setIsAnyReportEmpty(false);\r\n    } else {\r\n      setIsAnyReportEmpty(true);\r\n    }\r\n  };\r\n  const viewremark = <Tooltip id=\"tooltip\">View Reconciliation</Tooltip>;\r\n\r\n  const [remarkshow, setremarkShow] = useState(false);\r\n  const handleremarkClose = () => setremarkShow(false);\r\n\r\n  function filterReportDataByDate(reportData) {\r\n    const today = new Date().toISOString().split('T')[0];\r\n    return reportData.filter(entry => \r\n        entry.report_date <= today && \r\n        (!entry.is_off_day || entry.is_holiday)\r\n    );\r\n}\r\n\r\n  const handleremarkShow = (data, index) => {\r\n\r\n    let memoDetails = data?.timeReports[index];\r\n    let newData = {\r\n      ...data,\r\n      timeReports: memoDetails,\r\n      allSelectedTimeReport: filterReportDataByDate(data?.timeReports),\r\n    };\r\n    if (role == \"client\") {\r\n      dispatch(getReconciliationData(data?.contractDetails?.contract_id));\r\n    }\r\n    setCurrentDetails(newData);\r\n    setContractID(newData?.contractDetails?.contract_id);\r\n    setremarkShow(true);\r\n  };\r\n  const { approvedLoader, smallLoader } = useSelector(\r\n    (state) => state.developerData\r\n  );\r\n  const dispatch = useDispatch();\r\n  const submitApproved = (id, index, startDate, endDate) => {\r\n    setApprovedConfirmation({\r\n      isApproved: true,\r\n      approvedId: id,\r\n      startDate: startDate,\r\n      endDate: endDate,\r\n    });\r\n    // setSelectedApprovedBtn(index)\r\n    // dispatch(approvedClient(id,role))\r\n  };\r\n\r\n  const handleCloseApproveModal = () => {\r\n    setIsAnyReportEmpty(null);\r\n    setApprovedConfirmation({\r\n      isApproved: false,\r\n      approvedId: null,\r\n      startDate: null,\r\n      endDate: null,\r\n    });\r\n  };\r\n\r\n  const handleTimeSheetApprove = (e) => {\r\n    e.preventDefault();\r\n    const payload = {\r\n      startDate: approvedConfirmation?.startDate,\r\n      endDate: approvedConfirmation?.endDate,\r\n    };\r\n    dispatch(\r\n      approvedClient(approvedConfirmation?.approvedId, payload, role, () => {\r\n        setApprovedConfirmation({\r\n          isApproved: false,\r\n          approvedId: null,\r\n        });\r\n        let filterData = {\r\n          page: page,\r\n        };\r\n        dispatch(timeReporting(filterData, role));\r\n      })\r\n    );\r\n  };\r\n\r\n  const currentTextData = (role, isApproved) => {\r\n    if (role == \"client\") {\r\n      if (isApproved) {\r\n        return \"Approved\";\r\n      } else {\r\n        return \"Submit & Approve\";\r\n      }\r\n    } else {\r\n      if (isApproved) {\r\n        return \"Approved\";\r\n      } else {\r\n        return \"Submit\";\r\n      }\r\n    }\r\n  };\r\n  const shouldDisable = (isApproved) => {\r\n    if (role == \"client\") {\r\n      if (isApproved) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else if (role == \"developer\") {\r\n      if (isApproved) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n  // const isTodayMonthEnd = () => {\r\n  //   const today = new Date();\r\n  //   const lastDayOfMonth = new Date(\r\n  //     today.getFullYear(),\r\n  //     today.getMonth() + 1,\r\n  //     0\r\n  //   ); // The 0th day of the next month is the last day of the current month\r\n  //   return today.getDate() === lastDayOfMonth.getDate();\r\n  // };\r\n  const isTodayFriday = () => {\r\n    const today = new Date();\r\n    // const isFriday = today.getDay() === 5; \r\n    return today.getDay() === 5\r\n  }\r\n  return (\r\n    <>\r\n      <div className={`weekly-report-table ${selectedPeriod}`}>\r\n        <div className=\"table-responsive\">\r\n          {smallLoader ? (\r\n            <ScreenLoader />\r\n          ) : data?.length > 0 ? (\r\n            <table className=\"table time-table table-bordered table-ui-custom\">\r\n              <thead>\r\n                <th className=\"time-table-head\">\r\n                  <span>\r\n                    {role !== \"developer\" ? \"Developer Name\" : \"Client Name\"}\r\n                  </span>\r\n                </th>\r\n\r\n                {headerColumn?.map((item, index) => {\r\n                  return (\r\n                    <>\r\n                      <th className=\"time-table-head\">\r\n                        <span>{item} </span>\r\n                      </th>\r\n                    </>\r\n                  );\r\n                })}\r\n                <th className=\"time-table-head\">\r\n                  <span>Total Hours</span>\r\n                </th>\r\n                {/* <th className=\"time-table-head\">\r\n                                        <span>Contract</span>\r\n                                    </th> */}\r\n                {/* <th className=\"time-table-head\">\r\n                                        <span>Project</span>\r\n                                    </th> */}\r\n                { role==\"developer\" &&<th className=\"time-table-head\">\r\n                  <span>Timesheet</span>\r\n                </th>}\r\n                <th className=\"time-table-head\">\r\n                  <span>Reconciliation</span>\r\n                </th>\r\n                {selectedPeriod == \"weekly\" && role!==\"developer\" ? (\r\n                  <th className=\"time-table-head\">\r\n                    <span>Submit</span>\r\n                  </th>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </thead>\r\n\r\n              <tbody>\r\n                {data?.length > 0 ? (\r\n                  data?.map((item, index) => {\r\n                    return (\r\n                      <>\r\n                        <tr>\r\n                          <td className=\"time-table-data\">\r\n                            <div className=\"d-flex align-items-center gap-2\">\r\n                              <div className=\"d-flex gap-2 align-items-center white-nowrap\">\r\n                                <div className=\"position-relative\">\r\n                                  <img\r\n                                    src={\r\n                                      item?.contractDetails?.user_details\r\n                                        ?.profile_picture\r\n                                        ? item?.contractDetails?.user_details\r\n                                            ?.profile_picture\r\n                                        : userImage\r\n                                    }\r\n                                    className=\"developer-img\"\r\n                                    alt=\"\"\r\n                                  />\r\n                                  {/* <span className=\"number-count overlay\">\r\n                                    1\r\n                                  </span> */}\r\n                                </div>{\" \"}\r\n                                {item?.contractDetails?.user_details?.name}\r\n                              </div>\r\n                            </div>\r\n                          </td>\r\n                          {item?.timeReports?.map((reprt, inx) => {\r\n                            if (reprt.report_date) {\r\n                              return (\r\n                                <>\r\n                                  <td\r\n                                    onClick={() => handleShow(item, inx, reprt)}\r\n                                    className={`time-table-data white-nowrap ${\r\n                                      reprt?.is_public_holiday\r\n                                        ?  \"holiday-data\" :\r\n                                        reprt.is_off_day ?\r\n                                        \"offday-data\"\r\n                                        : \"workday-data\"\r\n                                    }`}\r\n                                  >\r\n                                    <div>\r\n                                      <span\r\n                                        className={`${\r\n                                          reprt.is_off_day\r\n                                            ? \"\"\r\n                                            : \"timing-text d-inline-block\"\r\n                                        }`}\r\n                                      >\r\n                                        {reprt.start_time && reprt?.end_time\r\n                                          ? `${moment(\r\n                                              reprt?.start_time,\r\n                                              \"HH:mm\"\r\n                                            ).format(\"h:mm A\")} - ${moment(\r\n                                              reprt?.end_time,\r\n                                              \"HH:mm\"\r\n                                            ).format(\"h:mm A\")} `\r\n                                          : reprt?.is_holiday\r\n                                          ? \"Holiday\"\r\n                                          :  reprt?.is_public_holiday ? reprt?.holiday_name:reprt?.is_off_day ? \"Leave\" :\"\"}\r\n                                      </span>\r\n                                      {reprt?.memo && (\r\n                                        <p className=\"memo-text\">\r\n                                          {reprt?.memo ? reprt?.memo : \"\"}\r\n                                        </p>\r\n                                      )}\r\n                                    </div>\r\n                                  </td>\r\n                                </>\r\n                              );\r\n                            } else if (reprt?.week) {\r\n                              return (\r\n                                <>\r\n                                  <td\r\n                                    onClick={() => handleShow(item, inx, reprt)}\r\n                                    className={`time-table-data white-nowrap ${\r\n                                      reprt.is_off_week\r\n                                        ? \"offday-data\"\r\n                                        : \"workday-data\"\r\n                                    }`}\r\n                                  >\r\n                                    <div>\r\n                                      {reprt?.duration\r\n                                        ? `${reprt?.duration.toFixed(\"2\")} hr`\r\n                                        : \"Holiday\"}\r\n                                    </div>\r\n                                  </td>\r\n                                  {/* <td className={`time-table-data ${reprt.is_off_month ? \"offday-data\" : \"workday-data\"}`} >{reprt?.duration ? reprt?.duration : \"-\"}</td> */}\r\n                                </>\r\n                              );\r\n                            } else {\r\n                              return (\r\n                                <>\r\n                                  <td\r\n                                    onClick={() => handleShow(item, inx, reprt)}\r\n                                    className={`time-table-data white-nowrap ${\r\n                                      reprt.is_off_month\r\n                                        ? \"offday-data\"\r\n                                        : \"workday-data\"\r\n                                    }`}\r\n                                  >\r\n                                    <div>\r\n                                      {reprt?.duration\r\n                                        ? `${reprt?.duration.toFixed(\"2\")} hr`\r\n                                        : \"Holiday\"}\r\n                                    </div>\r\n                                  </td>\r\n                                  {/* <td className={`time-table-data ${reprt.is_off_year ? \"offday-data\" : \"workday-data\"}`} >{reprt?.duration ? reprt?.duration : \"-\"}</td> */}\r\n                                </>\r\n                              );\r\n                            }\r\n                          })}\r\n                          <td className=\"time-table-data\">\r\n                            {item?.totalDuration > 0\r\n                              ? item?.totalDuration.toFixed(\"2\")\r\n                              : item?.totalDuration}\r\n                            hr\r\n                          </td>\r\n                          {/* <td className=\"time-table-data white-nowrap\">{item?.contractDetails?.employment_type}</td> */}\r\n                          {/* <td className=\"time-table-data\">\r\n                                                        <span className={item?.is_complete ? \"status-progress white-nowrap\" : \"status-finished white-nowrap\"}>{item?.is_complete ? \"Progress\" : \"Finished\"}</span>\r\n                                                    </td> */}\r\n                          {role==\"developer\" &&<td className=\"time-table-data\">\r\n                            <span className=\"status-progress white-nowrap\">\r\n                              {item?.isApproved ? \"Reviewed\" : \"Under Review\"}\r\n                            </span>\r\n                          </td>}\r\n                          <td className=\"time-table-data\">\r\n                            <button\r\n                              // disabled={item?.isApproved || !isTodayFriday()}\r\n                              onClick={() => {\r\n                                handleremarkShow(item, index);\r\n                              }}\r\n                              className=\"remarks-text position-relative white-nowrap removeBtnStyles\"\r\n                            >\r\n                              {item?.contractDetails?.remarks?.length > 0 ? (\r\n                                <img src={remarkIcon} className=\"remark-icon\" />\r\n                              ) : (\r\n                                <OverlayTrigger\r\n                                  placement=\"bottom\"\r\n                                  overlay={viewremark}\r\n                                >\r\n                                  <img\r\n                                    src={remarkIcon}\r\n                                    className=\"remark-icon\"\r\n                                  />\r\n                                </OverlayTrigger>\r\n                              )}{\" \"}\r\n                              {/* <span className=\"number-count overlay\">1</span> */}\r\n                            </button>\r\n                          </td>\r\n\r\n                          {selectedPeriod == \"weekly\" && role!==\"developer\" ? (\r\n                            <td className=\"time-table-data\">\r\n                              {item?.isApproved ? (\r\n                                <span className=\"status-finished\">\r\n                                  Approved\r\n                                </span>\r\n                              ) : (\r\n                                <RexettButton\r\n                                  type=\"submit\"\r\n                                  text={currentTextData(role, item?.isApproved)}\r\n                                  className={`outline-main-btn white-nowrap px-2 font-13`}\r\n                                  variant=\"transparent\"\r\n                                  disabled={shouldDisable(item?.isApproved)}\r\n                                  onClick={() => {\r\n                                    isAnyTimeReportingEmpty(item?.timeReports);\r\n                                    submitApproved(\r\n                                      item?.contractDetails?.contract_id,\r\n                                      index,\r\n                                      item?.startDate,\r\n                                      item?.endDate\r\n                                    );\r\n                                  }}\r\n                                  isLoading={\r\n                                    selectedApprovedBtn === index\r\n                                      ? approvedLoader\r\n                                      : false\r\n                                  }\r\n                                />\r\n                              )}\r\n                            </td>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </tr>\r\n                      </>\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <td colSpan={10}> <div className=\"simple-no-data\"><NoDataFound /></div>  </td>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n           <div className=\"simple-no-data\"><NoDataFound /></div>\r\n          )}\r\n        </div>\r\n        <Offcanvas\r\n          className=\"time-detail-sidepanel\"\r\n          show={show}\r\n          onHide={handleClose}\r\n          placement=\"end\"\r\n        >\r\n          <Offcanvas.Header closeButton>\r\n            <Offcanvas.Title>Time Reporting</Offcanvas.Title>\r\n          </Offcanvas.Header>\r\n          <Offcanvas.Body>\r\n            {selectedPeriod == \"weekly\" && (\r\n              <SingleTimeReporting\r\n                currentDetails={currentDetails}\r\n                selectedPeriod={selectedPeriod}\r\n                role={role}\r\n              />\r\n            )}\r\n\r\n            {selectedPeriod == \"monthly\" && (\r\n              <SingleTimeReporting\r\n                currentDetails={currentDetails}\r\n                selectedPeriod={selectedPeriod}\r\n                role={role}\r\n              />\r\n            )}\r\n\r\n            {/* { selectedPeriod == \"yearly\" &&  <SingleTimeReporting currentDetails={currentDetails} selectedPeriod={selectedPeriod}/> } */}\r\n            {selectedPeriod == \"yearly\" && (\r\n              <SingleTimeReporting\r\n                currentDetails={currentDetails}\r\n                selectedPeriod={selectedPeriod}\r\n                role={role}\r\n              />\r\n            )}\r\n          </Offcanvas.Body>\r\n        </Offcanvas>\r\n        {remarkshow ? (\r\n          <TimeReportRemark\r\n            contractId={contractId}\r\n            remarkshow={remarkshow}\r\n            handleremarkClose={handleremarkClose}\r\n            currentDetails={currentDetails}\r\n            page={page}\r\n            role={role}\r\n            selectedPeriod={selectedPeriod}\r\n          />\r\n\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <ConfirmationModal\r\n          text={\r\n            isAnyReportEmpty\r\n              ? `Are you sure to submit this time sheet ? It looks like you haven't written your work status for all the days of the week.`\r\n              : \"Are you sure you want to submit this time sheet?\"\r\n          }\r\n          show={approvedConfirmation?.isApproved}\r\n          startDate={approvedConfirmation?.startDate}\r\n          endDate={approvedConfirmation?.endDate}\r\n          handleClose={handleCloseApproveModal}\r\n          onClick={handleTimeSheetApprove}\r\n          smallLoader={approvedLoader}\r\n        />\r\n      </div>\r\n      {/* <div className=\"helper-text-section\">\r\n        <h3>Guiding You Through: Helpful Text to Navigate Time Reporting</h3>\r\n        <ol className=\"ps-3 mb-0\">\r\n          <li className=\"mb-2\">\r\n            <p>All developers must check in before starting their workday.</p>\r\n          </li>\r\n          <li className=\"mb-2\">\r\n            <p>\r\n              All developers must submit their time-sheets before the end of\r\n              Friday.\r\n            </p>\r\n          </li>\r\n          <li className=\"mb-2\">\r\n            <p>Please Check out at the end of your workday.</p>\r\n          </li>\r\n          <li className=\"mb-2\">\r\n            For Developers, Reconciliation get enable on every Friday.\r\n          </li>\r\n          <li className=\"mb-2\">\r\n            <p>\r\n              Developers may work on weekends and reconcile their Time-sheets.\r\n            </p>\r\n          </li>\r\n        </ol>\r\n      </div> */}\r\n      <Guidelines heading={\"Guiding You Through: Helpful Text to Navigate Time Reporting\"} guideLines={TIME_REPORTING}/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RexettTable;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport developerImg from \"../../../assets/img/user-img.jpg\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { timeReporting } from \"../../../redux/slices/clientDataSlice\";\r\nimport RexettTable from \"../../../components/clients/TimeReporiting/RexettTable\";\r\nimport { monthOptions, weekOptions, weeklyTimeReports, yearOption } from \"../../../components/clients/TimeReporiting/constant\";\r\nimport RexettButton from \"../../../components/atomic/RexettButton\";\r\nimport ScreenLoader from \"../../atomic/ScreenLoader\";\r\nimport RexettPagination from \"../../atomic/RexettPagination\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst RexettTimeReporting = ({ timeReportingData, handleShowModal, role }) => {\r\n    const dispatch = useDispatch();\r\n    const [selectedPeriod, setSelectedPeriod] = useState(\"weekly\");\r\n    const [selectedFilter, setSelectedFilter] = useState({ filter: \"weekly\" });\r\n    const [selectedWeek, setSelectedWeek] = useState(\"\");\r\n    const [selectedYear, setSelectedYear] = useState(\"\");\r\n    const [selectedMonth, setSelectedMonth] = useState(\"\");\r\n    const [selectedView, setSelectedView] = useState(\"\");\r\n    const [page, setPage] = useState(1);\r\n    const { t } = useTranslation();\r\n    const { screenLoader, timeReportingPage } = useSelector(\r\n        (state) => state.clientData\r\n    );\r\n\r\n   \r\n    useEffect(() => {\r\n        let filterData = {\r\n            ...selectedFilter,\r\n            filter: selectedPeriod,\r\n            page: page,\r\n        };\r\n        dispatch(timeReporting(filterData, role));\r\n    }, [page]);\r\n\r\n    const handlePeriodChange = (value) => {\r\n        setSelectedView(value);\r\n        const selectedPeriodValue = value;\r\n        setSelectedPeriod(selectedPeriodValue);\r\n        let filterData = {\r\n            ...selectedFilter,\r\n            filter: selectedPeriodValue,\r\n            page: page,\r\n        };\r\n\r\n        delete filterData.week;\r\n        delete filterData.month;\r\n        delete filterData.year;\r\n\r\n        setSelectedMonth(\"\");\r\n        setSelectedYear(\"\");\r\n        setSelectedWeek(\"\");\r\n        setSelectedFilter({ filter: selectedPeriodValue });\r\n        dispatch(timeReporting(filterData, role));\r\n    };\r\n\r\n    const handleChange = (e, select) => {\r\n        const selectedValue = e.target.value;\r\n        e.preventDefault();\r\n        setSelectedFilter({\r\n            ...selectedFilter,\r\n            [select]: e.target.value,\r\n        });\r\n        if (select === \"week\") {\r\n            setSelectedWeek(selectedValue);\r\n        } else if (select === \"month\") {\r\n            setSelectedMonth(selectedValue);\r\n        } else {\r\n            setSelectedYear(e.target.value);\r\n        }\r\n    };\r\n\r\n    const handlePrevTimeReporting = (e) => {\r\n        e.preventDefault();\r\n        let filterData = {\r\n            ...selectedFilter,\r\n            filter: selectedPeriod,\r\n            page: page,\r\n        };\r\n        if (selectedPeriod === \"yearly\") {\r\n            filterData.year = selectedFilter.year;\r\n            delete filterData.month;\r\n            delete filterData.week;\r\n        } else if (selectedPeriod === \"monthly\") {\r\n            filterData.year = selectedFilter.year;\r\n            filterData.month = selectedFilter.month;\r\n            delete filterData.week;\r\n        } else {\r\n            filterData.year = selectedFilter.year;\r\n            filterData.month = selectedFilter.month;\r\n            filterData.week = selectedFilter.week;\r\n        }\r\n        dispatch(timeReporting(filterData, role));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {screenLoader ? (\r\n                <ScreenLoader />\r\n            ) : (\r\n                <section>\r\n                    <div className=\"filter-section\">\r\n                        <div className=\"d-flex justify-content-between align-items-center flex-wrap gap-3\">\r\n                            <Form>\r\n                                <div className=\"d-flex gap-3 flex-wrap align-items-end\">\r\n                                    <div>\r\n                                        {/* <Form.Label className=\"common-label\">Select Year</Form.Label> */}\r\n                                        <Form.Select\r\n                                            className=\"time-filter-select shadow-none\"\r\n                                            onChange={(e) => handleChange(e, \"year\")}\r\n                                            value={selectedYear}\r\n                                        >\r\n                                            <option value=\"\" disabled selected>\r\n                                                {t(\"selectYear\")}\r\n                                            </option>\r\n                                            {yearOption?.map((item )=>(\r\n                                                 <option key={item}>{item}</option>\r\n                                            ))}\r\n                                        </Form.Select>\r\n                                    </div>\r\n                                    {selectedPeriod !== \"yearly\" ? (\r\n                                        <div>\r\n                                            {/* <Form.Label className=\"common-label\">Select Month</Form.Label> */}\r\n                                            <Form.Select\r\n                                                className=\"time-filter-select shadow-none\"\r\n                                                onChange={(e) => handleChange(e, \"month\")}\r\n                                                value={selectedMonth}\r\n                                            >\r\n                                                <option value=\"\" selected disabled>\r\n                                                    {t(\"selectMonth\")}\r\n                                                </option>\r\n                                                {monthOptions?.map((opt, index) => (\r\n                                                    <option key={index} value={opt?.value}>\r\n                                                        {opt?.label}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Form.Select>\r\n                                        </div>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                    {selectedPeriod !== \"yearly\" &&\r\n                                        selectedPeriod !== \"monthly\" ? (\r\n                                        <div>\r\n                                            {/* <Form.Label className=\"common-label\">Select Week</Form.Label> */}\r\n                                            <Form.Select\r\n                                                className=\"time-filter-select shadow-none\"\r\n                                                onChange={(e) => handleChange(e, \"week\")}\r\n                                                value={selectedWeek}\r\n                                            >\r\n                                                <option value=\"\" selected disabled>\r\n                                                    {t(\"selectWeek\")}\r\n                                                </option>\r\n                                                {weekOptions?.map((item, index) => (\r\n                                                    <option key={index} value={item?.value}>\r\n                                                        {item?.label}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Form.Select>\r\n                                        </div>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                    <div className=\"d-flex gap-3\">\r\n                                        {/* <Form.Control type=\"text\" placeholder=\"Search\" className=\"search-field\" onChange={handleSearchChange}></Form.Control> */}\r\n                                        <RexettButton\r\n                                            type=\"submit\"\r\n                                            text=\"Filter\"\r\n                                            className=\"main-btn py-1_5 px-4\"\r\n                                            variant=\"transparent\"\r\n                                            onClick={handlePrevTimeReporting}\r\n                                            isLoading={false}\r\n                                            disabled={\r\n                                                selectedPeriod === \"weekly\" &&\r\n                                                    Object.keys(selectedFilter).length > 3\r\n                                                    ? false\r\n                                                    : selectedPeriod === \"monthly\" &&\r\n                                                        Object.keys(selectedFilter).length > 2\r\n                                                        ? false\r\n                                                        : selectedPeriod === \"yearly\" &&\r\n                                                            Object.keys(selectedFilter).length > 1\r\n                                                            ? false\r\n                                                            : true\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </Form>\r\n                            <div className=\"d-flex gap-2\">\r\n                                <div className=\"d-flex justify-content-between align-items-center\">\r\n                                    <div>\r\n                                        <div className=\"indicator-time-slot d-flex gap-3 align-items-center flex-wrap\">\r\n                                            <div className=\"d-inline-flex align-items-center gap-1\">\r\n                                                <span className=\"slot-indicate offday\"></span>\r\n                                                <span className=\"font-14 fw-semibold\">{t(\"offDay\")}</span>\r\n                                            </div>\r\n                                            <div className=\"d-inline-flex align-items-center gap-1\">\r\n                                                <span className=\"slot-indicate workday\"></span>\r\n                                                <span className=\"font-14 fw-semibold\">{t(\"workDay\")}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"flex-none\">\r\n                                    {/* <Form.Label className=\"common-label\">Select View</Form.Label> */}\r\n                                    <Form.Select\r\n                                        className=\" time-filter-select shadow-none\"\r\n                                        value={selectedView}\r\n                                        onChange={(e) => handlePeriodChange(e.target.value)}\r\n                                    >\r\n                                        <option selected disabled>\r\n                                            {t(\"selectView\")}\r\n                                        </option>\r\n                                        <option value=\"weekly\">{t(\"weekly\")}</option>\r\n                                        <option value=\"monthly\">{t(\"monthly\")}</option>\r\n                                        <option value=\"yearly\">{t(\"yearly\")}</option>\r\n                                    </Form.Select>\r\n                                </div>\r\n                                {/* {role === \"developer\" ? (\r\n                                    <Button\r\n                                        variant=\"transparent\"\r\n                                        onClick={() => handleShowModal(\"Edit\")}\r\n                                        className=\"outline-main-btn px-xxl-3 px-2 py-1_5\"\r\n                                    >\r\n                                        {role === \"client\" ? `` : `${t(\"editTimeReport\")}`}\r\n                                    </Button>\r\n                                ) : (\r\n                                    \"\"\r\n                                )}\r\n                                <Button\r\n                                    variant=\"transparent\"\r\n                                    onClick={() => handleShowModal(\"AddTime\")}\r\n                                    className=\"outline-main-btn px-xxl-3 px-2 py-1_5\"\r\n                                >\r\n                                    {role === \"client\"\r\n                                        ? `${t(\"editTimeReport\")}`\r\n                                        : `${t(\"addBulkTime\")}`}\r\n                                </Button> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <RexettTable\r\n                        headerColumn={weeklyTimeReports(\r\n                            timeReportingData[0],\r\n                            selectedPeriod\r\n                        )}\r\n                        selectedPeriod={selectedPeriod}\r\n                        data={timeReportingData}\r\n                        role={role}\r\n                        page={page}\r\n                    />\r\n\r\n                    {timeReportingPage?.totalPages > 1 ? (\r\n                        <div className=\"d-flex justify-content-between align-items-center mt-3 mb-4\">\r\n                            <p className=\"showing-result\">\r\n                                {t(\"showing\")} {timeReportingData?.length} {t(\"results\")}\r\n                            </p>\r\n                            <RexettPagination\r\n                                number={timeReportingPage?.totalPages}\r\n                                setPage={setPage}\r\n                                page={page}\r\n                            />\r\n                        </div>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                </section>\r\n            )}\r\n        </>\r\n    );\r\n};\r\nexport default RexettTimeReporting;\r\n","import React from \"react\";\r\n\r\nconst Guidelines = ({heading ,guideLines}) => {\r\n  return (\r\n    <div>\r\n      <div className=\"helper-text-section\">\r\n        <h3>{heading}</h3>\r\n        <ol className=\"ps-3  mb-0\">\r\n          {guideLines?.map((lines, index) => (\r\n            <li className=\"mb-1\">\r\n              <p key={index}> {lines} </p>\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Guidelines;\r\n"],"names":["_ref","item","end_time","start_time","memo","report_date","_jsxs","className","children","_jsx","FiCalendar","FaRegClock","moment","format","currentDetails","selectedPeriod","role","updateWeeklyData","setUpdateWeeklyData","useState","contractDetails","user_details","endDate","startDate","timeReports","weeklyDetails","monthlyDetails","week","month","totalDuration","useEffect","undefined","_monthlyDetails$","console","log","_Fragment","src","profile_picture","name","class","map","index","MemoWithTimeReport","toFixed","Tab","Container","id","defaultActiveKey","onSelect","select","montData","find","Nav","variant","Item","Link","eventKey","Content","Pane","approveRemark","Tooltip","rejectRemark","handleChangeUpdateWeeklyData","page","dispatch","useDispatch","editDetails","setEditDetails","editItem","isEdit","reconciliationData","setReconcilitationData","contract_id","approvedReject","async","data","reconciliation_id","client_remark","is_approved","currentStatus","approveTimeReportReconciliation","rejectTimeReportReconciliation","filterData","timeReporting","reconciliation_approved","onClick","TiEdit","OverlayTrigger","placement","overlay","Button","IoCheckmark","IoCloseOutline","type","value","onChange","e","remarkshow","handleremarkClose","contractId","allSelectedTimeReport","addRemark","setRemark","reconciallationData","setReconciallationData","smallLoader","reconciliationsData","useSelector","state","clientData","target","temp","JSON","parse","stringify","Offcanvas","show","onHide","Header","closeButton","Title","Body","ReconciliationModal","RexettButton","text","handleReconciliationSend","modifiedPayload","filter","curElem","isEdited","_ref2","rest","Number","length","postReconciliationData","disabled","isLoading","headerColumn","setShow","setContractID","isAnyReportEmpty","setIsAnyReportEmpty","selectedApprovedBtn","setSelectedApprovedBtn","approvedConfirmation","setApprovedConfirmation","isApproved","approvedId","setCurrentDetails","handleShow","isOff","is_off_day","memoDetails","newData","viewremark","setremarkShow","filterReportDataByDate","reportData","today","Date","toISOString","split","entry","is_holiday","approvedLoader","developerData","currentTextData","concat","ScreenLoader","_item$contractDetails","_item$contractDetails2","_item$contractDetails3","_item$contractDetails4","_item$contractDetails5","_item$contractDetails6","_item$timeReports","_item$contractDetails7","_item$contractDetails8","userImage","alt","reprt","inx","is_public_holiday","holiday_name","is_off_week","duration","is_off_month","handleremarkShow","_newData$contractDeta","_data$contractDetails","getReconciliationData","remarks","remarkIcon","_item$contractDetails9","findIndex","isAnyTimeReportingEmpty","colSpan","NoDataFound","handleClose","SingleTimeReporting","TimeReportRemark","ConfirmationModal","handleCloseApproveModal","preventDefault","payload","approvedClient","Guidelines","heading","guideLines","TIME_REPORTING","timeReportingData","handleShowModal","setSelectedPeriod","selectedFilter","setSelectedFilter","selectedWeek","setSelectedWeek","selectedYear","setSelectedYear","selectedMonth","setSelectedMonth","selectedView","setSelectedView","setPage","t","useTranslation","screenLoader","timeReportingPage","handleChange","selectedValue","Form","Select","selected","yearOption","monthOptions","opt","label","weekOptions","year","Object","keys","selectedPeriodValue","handlePeriodChange","RexettTable","weeklyTimeReports","totalPages","RexettPagination","number","lines"],"sourceRoot":""}
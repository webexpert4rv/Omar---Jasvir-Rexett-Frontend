{"version":3,"file":"static/js/795.ff9e2b88.chunk.js","mappings":"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","sources":["components/atomic/NoDataFound.jsx","components/common/LeaveRequest/ListOfHolidays.jsx","components/common/LeaveRequest/Header.jsx","components/common/LeaveRequest/Tabs.jsx","components/common/LeaveRequest/HeaderTable.jsx","pages/views/Modals/NewEvent.jsx","pages/views/LeaveRequests.jsx","pages/views/Modals/ConfirmationModal.jsx","pages/views/Modals/EndJob.jsx"],"sourcesContent":["import React from 'react'\r\nimport errorImg from '../../assets/img/warning-icon.gif'\r\nconst NoDataFound = ({data}) => {\r\n  return (\r\n    <div className='no-data-container'>\r\n      <div className='no-data'>\r\n        <img src={errorImg} />{data?data:\"No Data Found\"}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NoDataFound","import moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { MONTH_NAME, SELECT_YEAR } from \"../../clients/TimeReporiting/constant\";\r\nimport { TiEdit } from \"react-icons/ti\";\r\nimport { IoCheckmark, IoCloseOutline } from \"react-icons/io5\";\r\nimport ToolTip from \"../Tooltip/ToolTip\";\r\nimport RexettButton from \"../../atomic/RexettButton\";\r\nimport RexettSpinner from \"../../atomic/RexettSpinner\";\r\n\r\nconst ListOfHolidays = ({\r\n  holidayList,\r\n  handleShowEvent,\r\n  handleDelete,\r\n  handleAproveDisapprove,\r\n  approvedLoader,\r\n  selectedIndex,\r\n}) => {\r\n  const [data, setData] = useState();\r\n  const [yearData, setYearData] = useState();\r\n  const [selectedMonth, setSelectedMonth] = useState(\"All\");\r\n  const [selectedYear, setSelectedYear] = useState(\"2024\");\r\n  let role = localStorage.getItem(\"role\");\r\n  console.log(selectedIndex,\"selectedIndex\")\r\n\r\n  console.log(holidayList, \"holidaylist\");\r\n  console.log(data, \"data\");\r\n\r\n  useEffect(() => {\r\n    const yearDetails = holidayList?.filter(\r\n      (values) => moment(values?.date).year() == \"2024\"\r\n    );\r\n    setYearData(yearDetails);\r\n    setSelectedYear(\"2024\");\r\n    setData(yearDetails);\r\n  }, [holidayList]);\r\n\r\n  const FilteredDeveloperData = data?.filter(\r\n    (values) => values?.is_approved_by_client == true\r\n  );\r\n  console.log(FilteredDeveloperData, \"filterData\");\r\n\r\n  const handleYearFilter = (year) => {\r\n    setSelectedYear(year);\r\n    setSelectedMonth(\"All\");\r\n    const yearDetails = holidayList?.filter(\r\n      (values) => moment(values?.date).year() == year\r\n    );\r\n    setYearData(yearDetails);\r\n    setData(yearDetails);\r\n  };\r\n\r\n  const handleMonthFilter = (month) => {\r\n    setSelectedMonth(month);\r\n    if (month !== \"All\") {\r\n      const selectedMonthHolidays = yearData?.filter(\r\n        (values) =>\r\n          moment(values?.date).month() + 1 == moment(month, \"MMMM\").format(\"M\")\r\n      );\r\n      setData(selectedMonthHolidays);\r\n    } else {\r\n      setData(yearData);\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"\">\r\n      <div className=\"card-box border shadow-none\">\r\n        {role === \"client\" ? (\r\n          <div className=\"mb-0\">\r\n            <Button className=\"main-btn font-14\" onClick={handleShowEvent}>\r\n              + Create New Holiday\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div className=\"d-flex justify-content-between align-items-center\">\r\n          <div className=\"skill-filters\">\r\n            {MONTH_NAME.map((month) => (\r\n              <span\r\n                key={month}\r\n                className={selectedMonth === month ? \"active\" : \"\"}\r\n                onClick={() => handleMonthFilter(month)}\r\n              >\r\n                {month}\r\n              </span>\r\n            ))}\r\n          </div>\r\n\r\n          <Form className=\"d-flex gap-2\">\r\n            <Form.Select\r\n              className=\"common-field font-14 w-auto\"\r\n              onChange={(e) => handleYearFilter(e.target.value)}\r\n              value={selectedYear}\r\n            >\r\n              {/* <option>Select Year</option> */}\r\n              {SELECT_YEAR?.map((item, idx) => (\r\n                <option key={idx}>{item}</option>\r\n              ))}\r\n            </Form.Select>\r\n          </Form>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-ui-custom mb-0\">\r\n            <thead>\r\n              <tr>\r\n                <th>Date</th>\r\n                <th>Name</th>\r\n                {/* <th>Type</th> */}\r\n                {role === \"client\" ? <th>Action</th> : \"\"}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data?.length > 0 ? (\r\n                role === \"developer\" ? (\r\n                  FilteredDeveloperData?.map((field, idx) => (\r\n                    <>\r\n                      <tr key={idx}>\r\n                        <td className=\"font-14 align-middle\">\r\n                          <strong>{field?.date}</strong>\r\n                        </td>\r\n                        <td className=\"font-14 align-middle\">\r\n                          {field?.name}\r\n                        </td>\r\n                      </tr>\r\n                    </>\r\n                  ))\r\n                ) : (\r\n                  data?.map((holiday, index) => (\r\n                    <tr key={index}>\r\n                      <td className=\"font-14 align-middle\">\r\n                        <strong>{holiday?.date}</strong>\r\n                      </td>\r\n                      <td className=\"font-14 align-middle\">\r\n                        {holiday?.name}\r\n                        {role === \"client\" && holiday?.added_by === \"client\" ? (\r\n                          <span className=\"associate-text\">\r\n                            <span className=\"associate\">Created</span>\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </td>\r\n                      {/* <td className=\"font-14 align-middle\">\r\n                      {holiday.type}\r\n                    </td> */}\r\n                      <td>\r\n                        {role === \"client\" ? (\r\n                          holiday?.added_by === \"system\" ? (\r\n                            holiday?.is_approved_by_client === true ? (\r\n                              <div>\r\n                                <h6>Approved</h6>\r\n                              </div>\r\n                            ) : (\r\n                              <div>\r\n                                <div className=\"d-flex gap-2\">\r\n                                  <ToolTip text=\"Approve\">\r\n                                    <RexettButton\r\n                                      variant=\"transparent\"\r\n                                      className=\"px-3 arrow-btn primary-arrow font-16 text-decoration-none\"\r\n                                      icon = {selectedIndex == index ? <RexettSpinner/> : <IoCheckmark />}\r\n                                      onClick={() =>\r\n                                        handleAproveDisapprove(\r\n                                          holiday?.id,\r\n                                          \"approve\",\r\n                                          index\r\n                                        )\r\n                                      }\r\n                                    >\r\n                                      \r\n                                    </RexettButton>\r\n                                  </ToolTip>\r\n                                  <ToolTip text=\"Disapprove\">\r\n                                    <Button\r\n                                      variant=\"transparent\"\r\n                                      className=\"px-3 arrow-btn danger-arrow font-16 text-decoration-none\"\r\n                                      onClick={() =>\r\n                                        handleAproveDisapprove(\r\n                                          holiday?.id,\r\n                                          \"disapprove\",\r\n                                          index\r\n                                        )\r\n                                      } \r\n                                    >\r\n                                      <IoCloseOutline />\r\n                                    </Button>\r\n                                  </ToolTip>\r\n                                </div>\r\n                              </div>\r\n                            )\r\n                          ) : (\r\n                            <div className=\"d-flex gap-2\">\r\n                              <ToolTip text=\"Edit\">\r\n                                <Button\r\n                                  variant=\"transparent\"\r\n                                  className=\"px-3 arrow-btn info-arrow font-16 text-decoration-none\"\r\n                                  onClick={() =>\r\n                                    handleShowEvent(holiday?.id, \"edit\")\r\n                                  }\r\n                                >\r\n                                  <TiEdit />\r\n                                </Button>\r\n                              </ToolTip>\r\n                              <ToolTip text=\"Delete\">\r\n                                <Button\r\n                                  variant=\"transparent\"\r\n                                  className=\"px-3 arrow-btn danger-arrow font-16 text-decoration-none\"\r\n                                  onClick={() => handleDelete(holiday?.id)}\r\n                                >\r\n                                  <IoCloseOutline />\r\n                                </Button>\r\n                              </ToolTip>\r\n                            </div>\r\n                          )\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                )\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan=\"3\" className=\"font-14\">\r\n                    <p className=\"text-danger mb-0\">\r\n                      No holidays in this month\r\n                    </p>\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ListOfHolidays;\r\n","import React from \"react\";\r\nimport { Nav, Tab } from \"react-bootstrap\";\r\n\r\nconst Header = ({ data }) => {\r\n  return (\r\n    <div>\r\n      <table className=\"table time-table table-bordered table-ui-custom\">\r\n        <thead>\r\n          {data?.map((item) => (\r\n            <th key={item} value={item} className=\"time-table-head\">\r\n              {item}\r\n            </th>\r\n          ))}\r\n        </thead>\r\n        <tbody></tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport { Nav, Tab } from \"react-bootstrap\";\r\n\r\nconst Tabs = ({ handleSelect, tabText ,currentTab }) => {\r\n  console.log(currentTab,\"currentTab\")\r\n  return (\r\n    <div>\r\n     \r\n        <Tab.Container\r\n          id=\"left-tabs-example\"\r\n          defaultActiveKey={currentTab ? currentTab : \"first\"}\r\n          onSelect={handleSelect}\r\n        >\r\n           {tabText?.map((item, index) => (\r\n          <Nav variant=\"pills\" className=\"mb-4 application-pills\">\r\n            <Nav.Item className=\"application-item\">\r\n              <Nav.Link className=\"application-link\" eventKey={item?.key}>\r\n                {item.value}\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n          </Nav> ))}\r\n\r\n        </Tab.Container>\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tabs;\r\n","import moment from \"moment\";\r\nimport React from \"react\";\r\nimport { Button, OverlayTrigger } from \"react-bootstrap\";\r\nimport { IoCheckmark, IoCloseOutline } from \"react-icons/io5\";\r\nimport associateLogo from \"../../../assets/img/aviox-logo.png\";\r\nimport ToolTip from \"../Tooltip/ToolTip\";\r\nimport { generateLeave } from \"../../clients/TimeReporiting/constant\";\r\nimport NoDataFound from \"../../atomic/NoDataFound\";\r\nimport userImg from \"../../../assets/img/user-img.jpg\";\r\nimport RexettButton from \"../../atomic/RexettButton\";\r\nimport RexettSpinner from \"../../atomic/RexettSpinner\";\r\n\r\nfunction HeaderTable({\r\n  tableData,\r\n  currentTab,\r\n  handleApproveReject,\r\n  approvedLoader,\r\n  selectedIndex,\r\n}) {\r\n  return (\r\n    <div>\r\n      {tableData?.length > 0 ? (\r\n        <table className=\"table time-table table-bordered table-ui-custom\">\r\n          <tbody>\r\n            {tableData?.map((item, index) => (\r\n              <tr>\r\n                <td className=\"time-table-data text-start\">\r\n                  <div className=\"d-flex align-items-center gap-2 white-nowrap\">\r\n                    <div className=\"user-imgbx application-userbx\">\r\n                      <img\r\n                        src={\r\n                          item?.contract?.developer?.profile_picture\r\n                            ? item?.contract?.developer?.profile_picture\r\n                            : userImg\r\n                        }\r\n                        className=\"user-img\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"user-imgbx application-imgbx mx-0 mb-0\"></div>\r\n                    {item?.contract?.developer?.name}\r\n                  </div>\r\n                </td>\r\n                <td className=\"time-table-data text-start\">\r\n                  <h4 className=\"leave-type-heading mb-0 white-nowrap\">\r\n                    {generateLeave(item?.type)}\r\n                  </h4>\r\n                </td>\r\n                <td className=\"time-table-data text-start\">\r\n                  <p className=\"leave-date white-nowrap\">\r\n                    {moment(item?.start_date).format(\"MM-DD-YYYY\")} to\r\n                    {moment(item.end_date).format(\"MM-DD-YYYY\")}\r\n                  </p>\r\n                </td>\r\n                <td className=\"time-table-data text-start reason-data\">\r\n                  <p className=\"font-14 mb-0\">{item?.reason_for_leave}</p>\r\n                </td>\r\n                {/* <td className=\"time-table-data text-start white-nowrap\">\r\n                  AI Bot Project\r\n                </td> */}\r\n                {/* <td className=\"time-table-data text-start\">\r\n                  <ToolTip text=\"Aviox Technologies Pvt Ltd\">\r\n                    <div className=\"text-start\">\r\n                      <div className=\"user-imgbx d-inline-block associated-logo application-imgbx mx-0 mb-0\">\r\n                        <img src={associateLogo} className=\"user-img\" />\r\n                        ---\r\n                      </div>\r\n                    </div>\r\n                  </ToolTip>\r\n                </td> */}\r\n                <td className=\"time-table-data text-start\">\r\n                  {currentTab !== \"first\" ? (\r\n                    <span className=\"status-finished\">\r\n                      {item?.approval_status}\r\n                    </span>\r\n                  ) : (\r\n                    <div className=\"d-flex justify-content-start gap-2\">\r\n                      <ToolTip text=\"Approve\">\r\n                        <RexettButton\r\n                          variant=\"transparent\"\r\n                          className=\"px-3 mb-2 arrow-btn primary-arrow font-16 text-decoration-none\"\r\n                          icon={\r\n                            selectedIndex == index ? (\r\n                              <RexettSpinner/>\r\n                            ) : (\r\n                              <IoCheckmark />\r\n                            )\r\n                          }\r\n                          onClick={() =>\r\n                            handleApproveReject(item?.id, \"Approved\", index)\r\n                          }\r\n                        />\r\n                      </ToolTip>\r\n                      <ToolTip text=\"Reject\">\r\n                        <Button\r\n                          variant=\"transparent\"\r\n                          className=\"px-3 mb-2 arrow-btn danger-arrow font-16 text-decoration-none\"\r\n                          onClick={() =>\r\n                            handleApproveReject(item?.id, \"Rejected\")\r\n                          }\r\n                        >\r\n                          <IoCloseOutline />\r\n                        </Button>\r\n                      </ToolTip>\r\n                    </div>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <td colSpan={8}>\r\n          <NoDataFound />\r\n        </td>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeaderTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport RexettButton from \"../../../components/atomic/RexettButton\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  getAddHoliday,\r\n  getClientHolidayList,\r\n  updateClientHoliday,\r\n} from \"../../../redux/slices/clientDataSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nconst NewEvent = ({ show, handleClose, status }) => {\r\n  const dispatch = useDispatch();\r\n  const { smallLoader ,btnLoader ,clientHolidayList } = useSelector((state) => state.clientData);\r\n  const {\r\n    register,\r\n    setValue,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors, isDirty, isValid, isSubmitting },\r\n  } = useForm({});\r\n\r\n  useEffect(() => {\r\n    if (status?.status =='edit') {\r\n      const selectedHoliday = clientHolidayList?.find((value) => value.id == status?.id);\r\n      console.log(selectedHoliday,\"selectedHoliday\")\r\n      console.log(status,\"status\")\r\n      setValue(\"name\", selectedHoliday?.name);\r\n      setValue(\"country\", selectedHoliday?.country);\r\n      setValue(\"description\", selectedHoliday?.description);\r\n      setValue(\"date\", selectedHoliday?.date);\r\n    }else{\r\n      reset()\r\n    }\r\n  }, [status, clientHolidayList]);\r\n\r\n  const onSubmit = async (values) => {\r\n    const payload = {\r\n      country: values?.country,\r\n      name: values?.name,\r\n      description: values?.description,\r\n      date: values?.date,\r\n    };\r\n    if (status?.status == \"edit\") {\r\n      await dispatch(updateClientHoliday(payload,status?.id));\r\n      dispatch(getClientHolidayList());\r\n    } else {\r\n      await dispatch(getAddHoliday(payload));\r\n      dispatch(getClientHolidayList());\r\n    }\r\n    handleClose();\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={(e) => handleClose(e)}\r\n      centered\r\n      animation\r\n      className=\"custom-modal\"\r\n    >\r\n      <Modal.Header closeButton className=\"border-0 pb-3\">\r\n        {/* <Modal.Title>End Job</Modal.Title> */}\r\n      </Modal.Header>\r\n\r\n      <Modal.Body>\r\n       {status?.status===\"edit\" ?  <h3 className=\"popup-heading\">Edit Holiday</h3>:<h3 className=\"popup-heading\">Create New Holiday</h3>}\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <Row>\r\n            <Col md={12} className=\"mb-3\">\r\n              <Form.Group>\r\n                <Form.Label className=\"d-block font-14\">\r\n                  Holiday Name\r\n                </Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  className=\"common-field font-14\"\r\n                  {...register(\"name\", {\r\n                    required: {\r\n                      value: true,\r\n                      message: \"Event name is required\",\r\n                    },\r\n                  })}\r\n                />\r\n                <p className=\"error-message\">{errors?.name?.message}</p>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group>\r\n                <Form.Label className=\"d-block font-14\">Country</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  className=\"common-field font-14\"\r\n                  {...register(\"country\", {\r\n                    required: {\r\n                      value: true,\r\n                      message: \"Country is required\",\r\n                    },\r\n                  })}\r\n                />\r\n                <p className=\"error-message\">{errors?.name?.message}</p>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group>\r\n                <Form.Label className=\"d-block font-14\">Description</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  className=\"common-field font-14\"\r\n                  {...register(\"description\", {\r\n                    required: {\r\n                      value: true,\r\n                      message: \"Description is required\",\r\n                    },\r\n                  })}\r\n                />\r\n                <p className=\"error-message\">{errors?.name?.message}</p>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group>\r\n                <Form.Label className=\"d-block font-14\">Date</Form.Label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  className=\"common-field font-14\"\r\n                  min={new Date().toISOString().split(\"T\")[0]}\r\n                  {...register(\"date\", {\r\n                    required: {\r\n                      value: true,\r\n                      message: \"Date is required\",\r\n                    },\r\n                  })}\r\n                />\r\n                <p className=\"error-message\">{errors?.date?.message}</p>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={12}>\r\n              <div className=\"d-flex align-items-center gap-2 justify-content-center\">\r\n                <div className=\"text-center \">\r\n                  <RexettButton\r\n                    type=\"submit\"\r\n                    text=\"Submit\"\r\n                    isLoading={smallLoader}\r\n                    disabled={smallLoader}\r\n                    className=\"main-btn px-4 me-2 font-14 fw-semibold\"\r\n                    variant=\"transparent\"\r\n                  />\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  {\" \"}\r\n                  <RexettButton\r\n                    type=\"button\"\r\n                    variant=\"transparent\"\r\n                    onClick={handleClose}\r\n                    text=\"Cancel\"\r\n                    isLoading={btnLoader}\r\n                    className=\"outline-main-btn font-14 fw-semibold bg-transparent border-black text-black px-4\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\nexport default NewEvent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport associateLogo from \"../../assets/img/aviox-logo.png\";\r\nimport userImage from \"../../assets/img/user-img.jpg\";\r\nimport { IoCheckmark } from \"react-icons/io5\";\r\nimport { IoCloseOutline } from \"react-icons/io5\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getLeaveHistory } from \"../../redux/slices/developerDataSlice\";\r\nimport Header from \"../../components/common/LeaveRequest/Header\";\r\nimport Tabs from \"../../components/common/LeaveRequest/Tabs\";\r\nimport HeaderTable from \"../../components/common/LeaveRequest/HeaderTable\";\r\nimport { Row, Col, Button, Form, Tab, Nav } from \"react-bootstrap\";\r\nimport {\r\n  clientDeleteHoliday,\r\n  getClientLeaveHistory,\r\n  getClientLeaveStatus,\r\n} from \"../../redux/slices/clientDataSlice\";\r\nimport { HEADER } from \"../../components/clients/TimeReporiting/constant\";\r\nimport { tabText } from \"../../components/clients/TimeReporiting/constant\";\r\nimport RejectModal from \"./Modals/EndJob\";\r\nimport ScreenLoader from \"../../components/atomic/ScreenLoader\";\r\nimport {\r\n  getApproveDisapprove,\r\n  getClientHolidayList,\r\n} from \"../../redux/slices/clientDataSlice\";\r\nimport { TiEdit } from \"react-icons/ti\";\r\nimport Calendar from \"react-calendar\";\r\nimport NewEvent from \"./Modals/NewEvent\";\r\nimport ListOfHolidays from \"../../components/common/LeaveRequest/ListOfHolidays\";\r\nimport ToolTip from \"../../components/common/Tooltip/ToolTip\";\r\nimport moment from \"moment\";\r\nimport ConfirmationModal from \"./Modals/ConfirmationModal\";\r\n\r\nconst LeaveRequest = () => {\r\n  const dispatch = useDispatch();\r\n  const [currentTab, setCurrentTab] = useState(\"first\");\r\n  const { clientHolidayList } = useSelector((state) => state.clientData);\r\n  const [selectedIndex, setSelectedIndex] = useState(null);\r\n  const [status, setStatus] = useState({\r\n    id: \"\",\r\n    status: \"\",\r\n  });\r\n  const { screenLoader, approvedLoader, smallLoader, clientLeaveHistory } =\r\n    useSelector((state) => state.clientData);\r\n  const [leaveId, setLeaveId] = useState();\r\n  const [deleteShowModal, setDeleteShowModal] = useState(false);\r\n  const [showRejectModal, setShowRejectModal] = useState(false);\r\n  const [deleteId, setDeleteId] = useState();\r\n  const handleSelect = (selectedTab) => {\r\n    setCurrentTab(selectedTab);\r\n  };\r\n\r\n  console.log(deleteId, \"deleteId\");\r\n  const handleCloseDeleteModal = () => {\r\n    setDeleteShowModal(false);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setShowRejectModal(false);\r\n  };\r\n  const handleClick = async (e, reason) => {\r\n    let payload = {\r\n      leaveId: leaveId,\r\n      approval_status: \"Not Approved\",\r\n      rejection_reason: reason,\r\n    };\r\n    await dispatch(getClientLeaveStatus(payload));\r\n    let data = {\r\n      approval_status: \"Under Approval\",\r\n    };\r\n    dispatch(getClientLeaveHistory(data));\r\n    setShowRejectModal(!showRejectModal);\r\n  };\r\n\r\n  const handleApproveReject = async (id, status, index) => {\r\n    setSelectedIndex(index);\r\n    setLeaveId(id);\r\n    if (status === \"Approved\") {\r\n      let payload = {\r\n        leaveId: id,\r\n        approval_status: status,\r\n        rejection_reason: null,\r\n      };\r\n      await dispatch(getClientLeaveStatus(payload));\r\n      let data = {\r\n        approval_status: \"Under Approval\",\r\n      };\r\n      dispatch(getClientLeaveHistory(data));\r\n    } else {\r\n      setShowRejectModal(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let data;\r\n    if (currentTab === \"first\") {\r\n      data = {\r\n        approval_status: \"Under Approval\",\r\n      };\r\n    } else if (currentTab === \"second\") {\r\n      data = {\r\n        approval_status: \"Not Approved\",\r\n      };\r\n    } else if (currentTab === \"third\") {\r\n      data = {\r\n        approval_status: \"Approved\",\r\n      };\r\n    } else {\r\n      data = {\r\n        approval_status: \"Withdrawn\",\r\n      };\r\n    }\r\n    dispatch(getClientLeaveHistory(data));\r\n  }, [currentTab]);\r\n\r\n  const tableHeader = () => {\r\n    if (currentTab === \"first\") {\r\n      HEADER[HEADER.length - 1] = \"Action\";\r\n    } else {\r\n      HEADER[HEADER.length - 1] = \"Leave Status\";\r\n    }\r\n    return HEADER;\r\n  };\r\n\r\n  const [showEvent, setShowEvent] = useState(false);\r\n  const handleShowEvent = (id, status) => {\r\n    setShowEvent(!showEvent);\r\n    setStatus({\r\n      id: id,\r\n      status: status,\r\n    });\r\n  };\r\n  const handleCloseEvent = () => {\r\n    setShowEvent(false);\r\n  };\r\n  useEffect(() => {\r\n    dispatch(getClientHolidayList());\r\n  }, []);\r\n\r\n  const handleAproveDisapprove = async (id, status, idx) => {\r\n    setSelectedIndex(idx);\r\n    const payload = {\r\n      action: status,\r\n    };\r\n    await dispatch(getApproveDisapprove(payload, id));\r\n    let data = {\r\n      approval_status: \"Under Approval\",\r\n    };\r\n    dispatch(getClientHolidayList(data));\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    setDeleteShowModal(!deleteShowModal);\r\n    setDeleteId(id);\r\n  };\r\n  const handleAction = async (e) => {\r\n    e.preventDefault();\r\n    console.log(deleteId, \"deleteion\");\r\n    await dispatch(clientDeleteHoliday(deleteId));\r\n    dispatch(getClientHolidayList());\r\n    setDeleteShowModal(false);\r\n  };\r\n\r\n  const listHolidays = (data) => {\r\n    const holidays = data?.map((value) => new Date(value?.date));\r\n    return holidays;\r\n  };\r\n\r\n  const [value, onChange] = useState(new Date());\r\n  // Define the dates you want to mark\r\n  const markedDates = listHolidays(clientHolidayList);\r\n\r\n  // Function to add custom content to tile\r\n  const tileContent = ({ date, view }) => {\r\n    const holidayForDate = clientHolidayList.find((holiday) => {\r\n      return new Date(holiday.date).toDateString() === date.toDateString();\r\n    });\r\n\r\n    if (\r\n      view === \"month\" &&\r\n      markedDates.find((d) => d.toDateString() === date.toDateString())\r\n    ) {\r\n      return (\r\n        <ToolTip text={holidayForDate?.name}>\r\n          <div className=\"dot\"></div>\r\n        </ToolTip>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tab.Container\r\n        id=\"left-tabs-example\"\r\n        defaultActiveKey=\"devleave-request\"\r\n        onSelect={handleSelect}\r\n      >\r\n        <Nav variant=\"pills\" className=\"mb-4 application-pills\">\r\n          <Nav.Item className=\"application-item\">\r\n            <Nav.Link className=\"application-link\" eventKey=\"devleave-request\">\r\n              Leave Request\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item className=\"application-item\">\r\n            <Nav.Link className=\"application-link\" eventKey=\"public-holiday\">\r\n              Public Holiday\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n        <Tab.Content>\r\n          <Tab.Pane eventKey=\"devleave-request\">\r\n            <Tabs\r\n              handleSelect={handleSelect}\r\n              tabText={tabText}\r\n              currentTab={currentTab}\r\n            />\r\n            <Header data={tableHeader()} />\r\n            <HeaderTable\r\n              tableData={clientLeaveHistory}\r\n              currentTab={currentTab}\r\n              handleApproveReject={handleApproveReject}\r\n              approvedLoader={approvedLoader}\r\n              selectedIndex={selectedIndex}\r\n            />\r\n            {showRejectModal && (\r\n              <RejectModal\r\n                show={showRejectModal}\r\n                handleClose={handleClose}\r\n                header={\"Rejection Reason\"}\r\n                feedbacks={\"Reasons\"}\r\n                submit={\"Submit\"}\r\n                handleClick={handleClick}\r\n                smallLoader={smallLoader}\r\n              />\r\n            )}\r\n          </Tab.Pane>\r\n          <Tab.Pane eventKey=\"public-holiday\">\r\n            <ListOfHolidays\r\n              onChange={onChange}\r\n              value={value}\r\n              tileContent={tileContent}\r\n              holidayList={clientHolidayList}\r\n              handleShowEvent={handleShowEvent}\r\n              handleDelete={handleDelete}\r\n              handleAproveDisapprove={handleAproveDisapprove}\r\n              approvedLoader={approvedLoader}\r\n              selectedIndex={selectedIndex}\r\n            />\r\n          </Tab.Pane>\r\n          <NewEvent\r\n            show={showEvent}\r\n            handleClose={handleCloseEvent}\r\n            status={status}\r\n          />\r\n          <ConfirmationModal\r\n            show={deleteShowModal}\r\n            handleClose={handleCloseDeleteModal}\r\n            onClick={handleAction}\r\n            smallLoader={smallLoader}\r\n            text={\"Are you sure, you want to delete this holiday\"}\r\n          />\r\n        </Tab.Content>\r\n      </Tab.Container>\r\n    </>\r\n  );\r\n};\r\nexport default LeaveRequest;\r\n","import React from \"react\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport RexettButton from \"../../../components/atomic/RexettButton\";\r\nimport { clientDeleteHoliday, getClientHolidayList } from \"../../../redux/slices/clientDataSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nconst ConfirmationModal = ({ text,show, handleClose,onClick ,handleAction,smallLoader,type,startDate,endDate}) => {\r\n    const callBackBtn=(e )=>{\r\n        let data={\r\n            status: type,\r\n        }\r\n        onClick(e,data)\r\n    }\r\n    return(\r\n        <Modal show={show} onHide={(e)=>handleClose(e)} centered animation className=\"custom-modal\">\r\n            <Modal.Header closeButton className=\"border-0 pb-3\">\r\n            {/* <Modal.Title>End Job</Modal.Title> */}\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group className=\"mb-4\">\r\n                        <Form.Label className=\"d-block text-center\">{text}</Form.Label>\r\n                    </Form.Group>\r\n                    <div className=\"text-center\">\r\n                        <RexettButton\r\n                            type=\"submit\"\r\n                            text=\"Yes\"\r\n                            onClick={type ? callBackBtn : handleAction}\r\n                            // onClick={callBackBtn}\r\n                            className=\"main-btn px-4 me-3 font-14 fw-semibold\"\r\n                            variant=\"transparent\"\r\n                            disabled={smallLoader}\r\n                            isLoading={smallLoader}\r\n                        />\r\n                        <Button variant=\"transparent\" onClick={handleClose} className=\"outline-main-btn font-14 fw-semibold bg-transparent border-black text-black px-4\" >No</Button>\r\n                    </div>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\nexport default ConfirmationModal;","import React, { useState } from \"react\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport RexettSpinner from \"../../../components/atomic/RexettSpinner\";\r\nimport { useStateManager } from \"react-select\";\r\nconst RejectModal = ({\r\n  show,\r\n  handleClose,\r\n  handleClick,\r\n  smallLoader,\r\n  header,\r\n  feedbacks,\r\n  submit,\r\n}) => {\r\n  const [feedback, setFeedback] = useState(\"\");\r\n  const handleFeedback = (e) => {\r\n    setFeedback(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={handleClose}\r\n      centered\r\n      className=\"custom-modal\"\r\n      animation\r\n    >\r\n      <Modal.Header closeButton className=\"border-0 pb-3\"></Modal.Header>\r\n\r\n      <Modal.Body>\r\n        <h3 className=\"popup-heading\">{header} </h3>\r\n        <Form>\r\n          <Form.Group className=\"mb-4\">\r\n            <Form.Label>{feedbacks}</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows=\"6\"\r\n              placeholder={\r\n                feedbacks === \"Reasons\"\r\n                  ? \"Enter your reason, why you want to reject the leave ?\"\r\n                  : \"Enter your feedback, why you want to reject?\"\r\n              }\r\n              onChange={handleFeedback}\r\n              required\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <div className=\"text-center\">\r\n            <Button\r\n              variant=\"transparent\"\r\n              className=\"main-btn px-4\"\r\n              onClick={(e) => {\r\n                let data;\r\n                if (feedbacks === \"Reasons\") {\r\n                  data = feedback\r\n                } else {\r\n                  data = {\r\n                    status: \"ended\",\r\n                    end_reason: feedback,\r\n                  };\r\n                }\r\n                handleClick(e, data);\r\n              }}\r\n              disabled={feedback?.length === 0}\r\n            >\r\n              {smallLoader ? <RexettSpinner /> : submit}{\" \"}\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\nexport default RejectModal;\r\n"],"names":["_ref","data","_jsx","className","children","_jsxs","src","errorImg","holidayList","handleShowEvent","handleDelete","handleAproveDisapprove","approvedLoader","selectedIndex","setData","useState","yearData","setYearData","selectedMonth","setSelectedMonth","selectedYear","setSelectedYear","role","localStorage","getItem","console","log","useEffect","yearDetails","filter","values","moment","date","year","FilteredDeveloperData","is_approved_by_client","Button","onClick","MONTH_NAME","map","month","selectedMonthHolidays","format","handleMonthFilter","Form","Select","onChange","e","handleYearFilter","target","value","SELECT_YEAR","item","idx","length","field","_Fragment","name","holiday","index","added_by","ToolTip","text","RexettButton","variant","icon","RexettSpinner","IoCheckmark","id","IoCloseOutline","TiEdit","colSpan","handleSelect","tabText","currentTab","Tab","Container","defaultActiveKey","onSelect","Nav","Item","Link","eventKey","key","tableData","handleApproveReject","_item$contract","_item$contract$develo","_item$contract2","_item$contract2$devel","_item$contract3","_item$contract3$devel","contract","developer","profile_picture","userImg","generateLeave","type","start_date","end_date","reason_for_leave","approval_status","NoDataFound","_errors$name","_errors$name2","_errors$name3","_errors$date","show","handleClose","status","dispatch","useDispatch","smallLoader","btnLoader","clientHolidayList","useSelector","state","clientData","register","setValue","handleSubmit","reset","formState","errors","isDirty","isValid","isSubmitting","useForm","selectedHoliday","find","country","description","Modal","onHide","centered","animation","Header","closeButton","Body","onSubmit","async","payload","updateClientHoliday","getClientHolidayList","getAddHoliday","Row","Col","md","Group","Label","Control","required","message","min","Date","toISOString","split","isLoading","disabled","LeaveRequest","setCurrentTab","setSelectedIndex","setStatus","screenLoader","clientLeaveHistory","leaveId","setLeaveId","deleteShowModal","setDeleteShowModal","showRejectModal","setShowRejectModal","deleteId","setDeleteId","selectedTab","getClientLeaveHistory","showEvent","setShowEvent","markedDates","holidays","listHolidays","Content","Pane","Tabs","HEADER","HeaderTable","rejection_reason","getClientLeaveStatus","RejectModal","header","feedbacks","submit","handleClick","reason","ListOfHolidays","tileContent","view","holidayForDate","toDateString","d","action","getApproveDisapprove","NewEvent","handleCloseEvent","ConfirmationModal","handleCloseDeleteModal","preventDefault","clientDeleteHoliday","handleAction","startDate","endDate","feedback","setFeedback","as","rows","placeholder","end_reason"],"sourceRoot":""}